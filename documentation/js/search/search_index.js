var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.43,1,2.846]],["body/modules/AppModule.html",[0,2.255,1,5.685,2,1.956,3,1.956,4,2.165,5,2.165,6,1.956,7,2.165,8,2.165,9,3.622,10,3.622,11,4.445,12,0.015,13,4.759,14,4.759,15,4.759,16,4.759,17,3.543,18,4.176,19,2.893,20,2.165,21,2.165,22,0.18,23,0.162,24,0.162,25,4.18,26,3.238,27,0.39,28,0.695,29,3.622,30,2.579,31,4.18,32,4.18,33,4.18,34,4.18,35,2.165,36,2.579,37,4.18,38,0.18,39,0.175,40,0.011,41,0.011]],["title/controllers/AuthController.html",[42,0.753,43,2.846]],["body/controllers/AuthController.html",[12,0.016,22,0.168,23,0.151,24,0.151,27,0.39,28,0.649,38,0.168,39,0.163,40,0.01,41,0.01,42,0.737,43,3.803,44,1.098,45,3.039,46,0.359,47,1.333,48,1.765,49,5.334,50,3.522,51,3.903,52,2.441,53,1.049,54,3.903,55,0.643,56,3.903,57,1.282,58,1.147,59,0.55,60,1.137,61,2.08,62,1.333,63,1.189,64,3.903,65,4.315,66,5.266,67,5.334,68,3.903,69,5.334,70,3.291,71,1.458,72,4.622,73,2.273,74,1.663,75,3.749,76,3.382,77,1.458,78,0.799,79,2.578,80,4.622,81,3.382,82,3.382,83,3.039,84,1.522,85,1.663,86,1.826,87,1.826,88,2.476,89,2.578,90,1.398,91,3.903,92,1.055,93,0.737,94,3.382,95,1.458,96,1.458,97,1.663,98,2.623,99,1.501,100,1.333,101,3.903,102,3.903,103,1.663,104,3.903,105,2.134,106,0.901,107,2.262]],["title/guards/AuthGuard.html",[90,1.43,108,3.108]],["body/guards/AuthGuard.html",[12,0.016,22,0.168,23,0.151,24,0.151,27,0.317,28,0.649,38,0.168,39,0.163,40,0.01,41,0.01,46,0.359,47,1.333,48,1.519,55,0.732,57,1.46,58,1.147,59,0.705,60,1.296,62,1.333,70,3.291,72,6.118,90,1.911,92,1.766,93,1.007,97,1.663,98,2.988,100,1.333,109,3.039,110,3.382,111,5.66,112,5.334,113,3.903,114,6.118,115,3.903,116,4.622,117,4.657,118,3.903,119,3.039,120,5.334,121,3.903,122,5.266,123,1.624,124,2.589,125,2.783,126,3.382,127,2.578,128,1.458,129,3.382,130,6.532,131,3.903,132,2.273,133,1.993,134,3.903,135,4.153,136,2.021,137,3.903,138,3.382,139,3.382,140,3.903,141,3.903,142,1.237,143,3.903,144,3.903]],["title/modules/AuthModule.html",[0,1.43,11,2.462]],["body/modules/AuthModule.html",[0,2.326,2,2.082,3,2.082,4,2.304,5,2.304,6,2.082,7,3.361,8,3.015,11,4.675,12,0.015,18,4.249,19,3.015,20,2.304,21,2.304,22,0.192,23,0.172,24,0.172,26,3.375,27,0.39,28,0.74,29,3.855,38,0.192,39,0.186,40,0.011,41,0.011,43,4.628,44,1.638,75,4.524,76,3.855,125,3.172,138,3.855,139,3.855,145,3.855,146,4.449,147,3.855,148,4.449,149,5.045,150,5.822,151,3.172,152,4.449,153,5.822,154,5.822,155,4.449,156,4.449,157,4.449,158,4.449,159,4.449]],["title/injectables/AuthService.html",[75,2.462,123,1.215]],["body/injectables/AuthService.html",[12,0.016,22,0.174,23,0.156,24,0.156,27,0.38,28,0.67,38,0.174,39,0.169,40,0.01,41,0.01,46,0.371,47,1.363,48,1.544,50,3.837,52,2.038,55,0.657,57,1.31,58,1.029,59,0.562,60,1.163,62,1.008,65,4.373,70,3.364,75,3.364,79,2.663,80,4.725,81,3.493,82,3.493,83,3.139,84,1.572,88,2.905,92,1.671,97,2.323,98,2.681,99,1.534,100,1.008,105,2.205,106,0.931,114,6.316,123,1.661,124,2.323,125,2.874,132,1.718,133,1.506,135,3.139,136,3.2,160,1.982,161,3.493,162,4.031,163,4.031,164,5.453,165,4.031,166,2.205,167,4.031,168,4.031,169,3.139,170,2.663,171,4.031,172,5.453,173,4.031,174,4.031,175,4.031,176,4.031,177,2.205,178,3.493,179,3.493,180,4.031]],["title/controllers/CADonationsController.html",[42,0.753,181,2.846]],["body/controllers/CADonationsController.html",[12,0.016,22,0.122,23,0.109,24,0.109,27,0.382,28,0.47,38,0.122,39,0.118,40,0.008,41,0.008,42,0.534,44,0.795,46,0.26,47,1.058,48,1.86,52,2.628,53,1.187,55,0.727,57,1.354,58,1.139,59,0.712,60,1.201,61,2.561,62,1.508,63,1.716,71,1.582,73,1.804,74,1.205,77,1.056,78,0.579,84,1.103,85,2.162,86,1.323,87,1.323,90,1.013,92,0.765,93,0.534,95,1.056,96,1.056,99,0.795,100,1.408,103,1.205,106,1.516,124,1.804,128,1.056,132,1.205,133,1.056,142,1.342,181,3.018,182,2.201,183,1.058,184,1.342,185,1.609,186,2.198,187,1.546,188,1.639,189,3.266,190,1.39,191,4.26,192,2.827,193,2.699,194,1.868,195,1.103,196,1.455,197,2.827,198,1.205,199,1.35,200,1.103,201,2.827,202,1.39,203,2.162,204,2.827,205,1.464,206,3.722,207,1.464,208,2.827,209,0.896,210,1.103,211,1.103,212,2.775,213,2.016,214,1.464,215,3.018,216,1.889,217,2.082,218,2.198,219,2.082,220,2.201,221,1.323,222,1.205,223,1.323,224,0.896,225,1.464,226,1.464,227,1.152,228,1.323,229,1.205,230,1.546,231,1.39,232,2.45,233,1.323,234,2.016,235,1.639,236,2.201,237,1.103,238,2.082,239,2.201,240,2.016,241,2.201,242,1.103,243,2.45,244,1.103]],["title/classes/CAUpdateUserDto.html",[39,0.167,245,2.846]],["body/classes/CAUpdateUserDto.html",[12,0.015,22,0.248,23,0.223,24,0.223,27,0.357,38,0.248,39,0.241,40,0.013,41,0.013,78,1.178,177,3.146,187,1.752,245,4.875,246,1.556,247,4.985,248,3.549,249,4.479,250,3.8,251,3.334,252,2.244,253,5.752]],["title/classes/CenterEntity.html",[39,0.167,254,2.462]],["body/classes/CenterEntity.html",[12,0.015,22,0.177,23,0.159,24,0.159,27,0.348,38,0.177,39,0.172,40,0.011,41,0.011,46,0.379,53,1.087,55,0.909,58,1.178,59,0.793,78,0.843,93,1.406,106,1.277,199,1.331,246,1.113,252,2.156,254,3.411,255,3.566,256,3.714,257,1.825,258,6.244,259,4.862,260,5.411,261,4.125,262,4.125,263,3.411,264,3.411,265,4.115,266,3.619,267,4.115,268,4.115,269,5.785,270,4.791,271,4.115,272,4.115,273,4.115,274,2.863,275,3.852,276,2.934,277,4.115,278,2.718,279,2.023,280,1.253,281,2.539,282,4.115,283,3.234]],["title/controllers/CentersController.html",[42,0.753,284,2.183]],["body/controllers/CentersController.html",[12,0.016,22,0.13,23,0.117,24,0.117,27,0.383,28,0.503,38,0.13,39,0.127,40,0.008,41,0.008,42,0.571,44,0.851,46,0.279,47,1.113,48,1.882,52,2.177,53,1.221,55,0.748,57,1.07,58,0.997,59,0.692,60,0.949,61,1.737,62,1.552,63,1.609,71,1.664,73,1.897,74,1.289,77,1.131,78,0.62,84,1.18,85,1.897,86,1.416,87,1.416,90,1.084,92,0.818,93,0.571,95,1.131,96,1.131,99,0.851,100,1.32,103,1.289,106,1.55,124,2.251,128,1.131,132,1.897,133,1.664,142,1.411,183,1.456,184,1.847,185,1.411,186,2.272,187,1.609,193,2.482,195,1.18,196,1.531,198,1.289,199,1.384,200,1.18,202,1.488,203,2.645,205,1.567,207,1.567,209,0.959,210,1.18,211,1.18,216,1.987,218,2.272,219,2.598,221,1.416,222,1.289,223,1.416,224,0.959,225,1.567,226,1.567,227,1.233,228,1.416,229,1.289,230,1.655,231,1.488,233,1.416,234,2.158,237,1.18,238,1.488,242,1.18,244,1.18,254,4.142,284,2.435,285,2.356,286,1.999,287,3.026,288,3.026,289,3.026,290,3.026,291,3.849,292,3.026,293,2.889,294,2.158,295,2.356,296,2.356,297,2.622,298,1.488,299,2.356,300,2.356,301,2.622]],["title/controllers/CentersController-1.html",[42,0.632,284,1.831,302,2.212]],["body/controllers/CentersController-1.html",[12,0.016,22,0.153,23,0.137,24,0.137,27,0.345,28,0.588,38,0.153,39,0.148,40,0.009,41,0.009,42,0.668,44,0.995,46,0.326,47,1.245,48,1.928,53,1.298,55,0.795,57,0.85,58,0.94,59,0.706,60,0.754,62,1.65,63,1.518,71,1.862,77,1.322,78,0.725,92,0.957,93,0.668,95,1.322,96,1.322,99,0.995,100,1.245,106,1.332,124,2.668,128,1.322,132,2.458,133,2.156,142,1.58,183,1.565,184,1.985,185,1.58,186,2.442,187,1.907,195,1.38,196,1.713,198,1.507,199,1.23,200,1.38,202,1.74,203,2.998,209,1.121,210,1.38,211,1.38,218,2.25,219,3.079,231,1.74,237,1.38,242,1.38,244,1.38,254,4.072,284,2.725,286,2.337,293,3.155,294,2.523,296,2.755,298,1.74,299,2.755,300,2.755,303,2.755,304,3.538,305,3.538,306,3.538,307,3.538,308,2.337,309,3.538,310,2.755]],["title/controllers/CentersController-2.html",[42,0.632,284,1.831,311,2.212]],["body/controllers/CentersController-2.html",[12,0.016,22,0.125,23,0.112,24,0.112,27,0.38,28,0.483,38,0.125,39,0.121,40,0.008,41,0.008,42,0.548,44,0.817,46,0.267,47,1.08,48,1.869,52,2.134,53,1.2,55,0.735,57,1.372,58,1.152,59,0.717,60,1.218,61,1.685,62,1.526,63,1.859,71,1.614,73,1.841,74,1.238,77,1.085,78,0.595,84,1.133,85,1.841,86,1.359,87,1.359,90,1.041,92,0.785,93,0.548,95,1.085,96,1.085,99,0.817,100,1.526,103,1.238,106,1.635,128,1.085,142,1.369,183,1.08,184,1.81,185,1.369,186,1.685,187,1.571,188,1.683,190,1.428,193,2.726,195,1.133,196,1.485,198,1.238,199,1.483,200,1.133,205,1.504,207,1.504,209,0.921,210,1.133,211,1.133,214,1.504,216,1.927,217,2.124,218,2.381,221,1.359,222,1.238,223,1.359,224,0.921,225,1.504,226,1.504,227,1.183,228,1.359,229,1.238,230,1.589,233,1.359,235,1.683,237,1.133,238,1.428,242,1.133,244,1.133,254,4.432,284,2.362,291,3.773,293,2.821,294,2.071,295,3.364,296,2.262,298,1.428,299,2.262,300,2.262,301,2.517,312,2.262,313,3.773,314,2.904,315,2.904,316,2.904,317,2.071,318,1.919,319,2.904,320,2.904,321,2.517,322,1.919,323,2.904,324,2.071,325,2.904]],["title/modules/CentersModule.html",[0,1.43,13,2.637]],["body/modules/CentersModule.html",[0,2.401,2,2.225,3,2.225,4,2.462,5,2.462,6,2.225,7,3.47,8,3.47,12,0.015,13,5.125,17,3.67,19,3.148,20,2.462,21,2.462,22,0.205,23,0.184,24,0.184,26,3.523,27,0.369,28,0.791,30,2.934,38,0.205,39,0.199,40,0.012,41,0.012,44,1.71,284,3.664,293,4.329,294,3.39,326,4.12,327,4.12,328,4.12,329,4.755,330,4.755,331,4.755]],["title/injectables/CentersService.html",[123,1.215,293,2.183]],["body/injectables/CentersService.html",[12,0.016,22,0.132,23,0.119,24,0.119,27,0.326,28,0.511,38,0.132,39,0.129,40,0.009,41,0.009,46,0.283,47,1.125,48,1.92,52,2.193,55,0.813,57,1.621,58,1.273,59,0.695,60,1.438,61,1.756,62,1.632,63,1.903,84,1.198,88,2.748,89,2.03,92,0.831,97,1.919,98,3.072,99,1.267,100,1.562,105,1.681,106,0.71,123,1.371,124,1.919,132,1.309,133,1.148,136,2.332,160,1.511,166,3.571,170,2.03,183,1.125,184,1.427,185,1.427,187,1.623,199,1.392,205,1.591,209,1.427,224,0.974,229,1.309,279,2.621,280,0.936,293,2.463,332,2.663,333,4.503,334,2.03,335,2.886,336,3.073,337,4.503,338,3.402,339,3.073,340,3.506,341,2.975,342,5.33,343,3.073,344,3.211,345,7.058,346,3.073,347,3.211,348,5.33,349,3.073,350,2.191,351,3.211,352,3.073,353,5.33,354,3.073,355,2.191,356,3.073,357,3.073,358,3.073,359,2.663,360,2.393,361,3.073,362,3.073,363,3.073,364,3.073,365,2.393]],["title/controllers/CitiesController.html",[42,0.753,366,2.183]],["body/controllers/CitiesController.html",[12,0.016,22,0.144,23,0.129,24,0.129,27,0.376,28,0.556,38,0.144,39,0.14,40,0.009,41,0.009,42,0.631,44,0.941,46,0.308,47,1.197,48,1.912,53,1.27,55,0.779,57,0.804,58,0.904,59,0.693,60,0.713,62,1.615,63,1.458,71,1.789,74,1.425,77,1.25,78,0.685,90,1.198,92,0.904,93,0.631,95,1.25,96,1.25,99,0.941,100,1.197,103,1.425,106,1.291,124,2.601,128,1.25,132,2.383,133,2.09,142,1.518,183,1.526,184,1.935,185,1.518,186,2.381,187,1.859,195,1.304,196,1.646,198,1.425,199,1.192,200,1.304,202,1.645,203,2.949,209,1.06,210,1.304,211,1.304,216,2.136,218,2.181,219,3.002,221,1.565,222,1.425,223,1.565,224,1.06,227,1.363,228,1.565,231,1.645,233,1.565,234,2.385,237,1.304,242,1.304,244,1.304,266,3.745,280,1.019,286,2.209,298,1.645,308,2.209,366,2.619,367,2.604,368,3.344,369,3.344,370,3.344,371,3.344,372,3.344,373,3.059,374,2.385,375,2.604,376,2.898,377,2.604,378,2.604]],["title/controllers/CitiesController-1.html",[42,0.632,302,2.212,366,1.831]],["body/controllers/CitiesController-1.html",[12,0.016,22,0.153,23,0.137,24,0.137,27,0.345,28,0.588,38,0.153,39,0.148,40,0.009,41,0.009,42,0.668,44,0.995,46,0.326,47,1.245,48,1.928,53,1.298,55,0.795,57,0.85,58,0.94,59,0.706,60,0.754,62,1.65,63,1.518,71,1.862,77,1.322,78,0.725,92,0.957,93,0.668,95,1.322,96,1.322,99,0.995,100,1.245,106,1.332,124,2.668,128,1.322,132,2.458,133,2.156,142,1.58,183,1.565,184,1.985,185,1.58,186,2.442,187,1.907,195,1.38,196,1.713,198,1.507,199,1.23,200,1.38,202,1.74,203,2.998,209,1.121,210,1.38,211,1.38,218,2.25,219,3.079,231,1.74,237,1.38,242,1.38,244,1.38,266,3.826,286,2.337,298,1.74,308,2.337,366,2.725,373,3.155,374,2.523,375,2.755,377,2.755,378,2.755,379,2.755,380,3.538,381,3.538,382,3.538,383,3.538,384,3.538,385,2.755]],["title/controllers/CitiesController-2.html",[42,0.632,311,2.212,366,1.831]],["body/controllers/CitiesController-2.html",[12,0.016,22,0.131,23,0.117,24,0.117,27,0.373,28,0.504,38,0.131,39,0.127,40,0.008,41,0.008,42,0.572,44,0.853,46,0.279,47,1.114,48,1.882,53,1.222,55,0.749,57,1.401,58,1.173,59,0.725,60,1.243,62,1.553,63,1.892,71,1.666,73,1.9,74,1.292,77,1.133,78,0.621,90,1.086,92,0.82,93,0.572,95,1.133,96,1.133,99,0.853,100,1.553,103,1.292,106,1.624,128,1.133,142,1.413,183,1.114,184,1.848,185,1.413,186,1.739,187,1.358,188,1.757,190,1.491,193,2.769,195,1.182,196,1.533,198,1.292,199,1.5,200,1.182,207,1.57,209,0.961,210,1.182,211,1.182,214,1.57,216,1.99,217,2.193,218,2.423,221,1.419,222,1.292,223,1.419,224,0.961,227,1.235,228,1.419,230,1.658,233,1.419,235,1.757,237,1.182,242,1.182,244,1.182,266,4.203,280,0.923,298,1.491,317,2.162,318,2.003,322,2.003,324,2.162,366,2.439,373,2.892,374,2.162,375,2.361,377,2.361,378,2.361,386,2.361,387,3.852,388,3.032,389,3.032,390,3.032,391,3.032,392,2.361,393,4.158,394,3.032,395,3.864,396,2.627,397,3.032,398,2.627,399,3.032,400,3.032]],["title/modules/CitiesModule.html",[0,1.43,14,2.637]],["body/modules/CitiesModule.html",[0,2.401,2,2.225,3,2.225,4,2.462,5,2.462,6,2.225,7,3.47,8,3.47,12,0.015,14,5.125,17,3.67,19,3.148,20,2.462,21,2.462,22,0.205,23,0.184,24,0.184,26,3.523,27,0.369,28,0.791,30,2.934,38,0.205,39,0.199,40,0.012,41,0.012,44,1.71,366,3.664,373,4.329,374,3.39,401,4.12,402,4.755,403,4.12,404,4.12,405,4.755,406,4.755]],["title/injectables/CitiesService.html",[123,1.215,373,2.183]],["body/injectables/CitiesService.html",[12,0.015,22,0.158,23,0.142,24,0.142,27,0.307,28,0.609,38,0.158,39,0.153,40,0.01,41,0.01,46,0.337,47,1.275,48,1.937,55,0.834,57,1.663,58,1.306,59,0.713,60,1.476,62,1.671,63,2.036,97,1.56,99,1.03,100,1.671,123,1.554,128,1.368,160,1.8,166,3.786,183,1.275,184,1.618,185,1.618,187,1.789,209,1.618,279,2.889,280,1.115,334,2.418,335,3.125,341,3.371,344,3.639,347,3.639,350,2.61,351,3.639,373,2.791,407,3.172,408,3.66,409,5.875,410,3.66,411,7.359,412,3.66,413,5.875,414,3.66,415,3.66,416,2.85,417,5.875,418,3.66,419,3.66,420,3.66,421,3.66,422,3.66,423,3.66,424,3.66]],["title/classes/CityEntity.html",[39,0.167,266,2.313]],["body/classes/CityEntity.html",[12,0.015,22,0.19,23,0.17,24,0.17,27,0.337,38,0.19,39,0.184,40,0.011,41,0.011,46,0.405,53,1.137,55,0.881,58,1.218,59,0.779,78,0.901,93,1.379,106,1.491,127,3.818,199,1.232,246,1.19,252,2.254,256,3.785,257,1.908,259,5.027,261,4.264,262,4.264,263,3.566,264,3.566,266,3.35,269,5.941,270,5.009,274,2.993,275,3.983,276,3.137,278,3.818,279,2.163,280,1.34,281,2.714,283,3.343,425,3.812,426,4.399,427,4.399,428,4.399]],["title/classes/CommonEntity.html",[39,0.167,256,2.067]],["body/classes/CommonEntity.html",[12,0.015,22,0.234,23,0.21,24,0.21,38,0.234,39,0.227,40,0.013,41,0.013,46,0.501,55,0.858,59,0.734,106,1.644,199,1.409,246,1.471,256,3.423,257,2.181,263,4.393,264,4.393,274,3.836,429,4.712,430,5.438,431,5.438,432,5.438]],["title/classes/CommonException.html",[39,0.167,203,1.701]],["body/classes/CommonException.html",[12,0.015,22,0.204,23,0.183,24,0.183,27,0.247,38,0.204,39,0.198,40,0.012,41,0.012,46,0.435,53,1.191,55,0.805,57,1.136,58,0.892,59,0.689,60,1.008,78,0.968,93,1.375,97,2.014,99,2.096,199,1.553,203,2.58,246,1.278,257,1.999,283,3.772,433,4.096,434,7.452,435,7.576,436,7.284,437,6.055,438,6.055,439,4.726,440,4.726,441,4.726]],["title/classes/CreateCenterDto.html",[39,0.167,313,2.637]],["body/classes/CreateCenterDto.html",[12,0.015,22,0.204,23,0.183,24,0.183,27,0.247,38,0.204,39,0.253,40,0.012,41,0.012,46,0.435,53,1.385,55,0.849,58,1.261,59,0.726,93,1.143,199,1.589,246,1.278,257,1.999,260,5.79,261,4.414,262,4.414,313,4,442,6.312,443,3.68,444,3.37,445,4.726,446,6.312,447,4.726,448,4.726,449,4.726,450,4.726,451,4.318,452,3.736,453,4.318,454,3.736,455,3.122,456,2.448,457,4.726]],["title/classes/CreateCityDto.html",[39,0.167,387,2.637]],["body/classes/CreateCityDto.html",[12,0.015,22,0.215,23,0.193,24,0.193,27,0.26,38,0.215,39,0.262,40,0.012,41,0.012,46,0.458,53,1.346,55,0.825,58,1.292,59,0.705,93,1.181,199,1.531,246,1.346,257,2.065,261,4.522,262,4.522,387,4.134,446,6.412,452,3.861,454,3.861,455,3.289,456,2.578,458,6.223,459,3.876,460,4.978,461,4.978,462,3.289,463,4.978,464,3.55]],["title/classes/CreateDonationDto.html",[39,0.167,189,2.313]],["body/classes/CreateDonationDto.html",[12,0.015,22,0.202,23,0.181,24,0.181,27,0.314,38,0.202,39,0.252,40,0.011,41,0.011,46,0.431,53,1.381,55,0.846,59,0.779,189,3.49,199,1.585,246,1.267,257,1.987,338,3.856,340,5.181,444,4.744,451,5.007,453,5.007,456,2.426,465,6.295,466,3.648,467,5.766,468,4.685,469,4.685,470,4.105,471,5.217,472,4.685,473,4.685,474,3.095,475,4.685,476,4.685]],["title/classes/CreateDonationRequestDto.html",[39,0.167,477,2.313]],["body/classes/CreateDonationRequestDto.html",[12,0.015,22,0.151,23,0.135,24,0.135,27,0.299,35,3.77,38,0.151,39,0.206,40,0.009,41,0.009,46,0.321,53,1.408,55,0.863,59,0.769,60,1.053,78,0.715,93,1.287,142,1.815,196,1.697,199,1.327,246,0.944,257,1.629,274,2.556,280,1.063,283,2.966,338,3.319,444,2.489,451,4.083,452,3.841,453,3.52,454,3.841,455,2.306,456,1.808,462,3.261,464,4.083,470,3.841,471,3.025,474,2.306,477,2.861,478,3.58,479,6.309,480,2.719,481,4.459,482,4.083,483,3.319,484,4.459,485,3.319,486,3.319,487,3.491,488,3.025,489,3.491,490,3.025,491,3.491,492,3.491,493,5.114,494,3.046,495,3.025,496,4.278,497,3.491,498,3.491,499,2.489,500,3.491,501,3.025,502,3.491,503,4.936,504,3.491,505,3.491,506,4.459,507,3.491,508,3.491,509,3.046,510,3.491]],["title/classes/CreateUserDto.html",[39,0.167,511,2.637]],["body/classes/CreateUserDto.html",[12,0.015,22,0.18,23,0.162,24,0.162,27,0.292,38,0.18,39,0.234,40,0.011,41,0.011,46,0.385,50,3.648,53,1.417,55,0.868,59,0.743,93,1.443,177,3.442,226,2.165,246,1.13,248,2.579,257,1.844,452,4.445,454,4.445,455,2.761,456,2.165,462,4.158,464,4.79,474,2.761,483,3.648,485,3.648,486,3.648,499,2.98,506,4.351,511,3.691,512,6.375,513,4.487,514,4.18,515,4.18,516,4.18,517,3.622,518,4.841,519,4.18,520,4.18,521,4.487,522,5.587,523,3.622,524,3.622,525,3.255,526,3.622]],["title/classes/DonationEntity.html",[39,0.167,191,2.462]],["body/classes/DonationEntity.html",[12,0.015,22,0.183,23,0.164,24,0.164,27,0.331,38,0.183,39,0.177,40,0.011,41,0.011,46,0.39,53,1.108,55,0.903,59,0.797,78,0.867,106,1.463,191,3.478,199,1.598,246,1.145,252,2.198,256,3.745,257,1.86,263,3.478,264,3.478,274,2.919,275,3.909,276,3.02,278,3.724,280,1.29,281,2.613,283,3.281,338,3.672,340,4.933,467,5.49,470,4.339,494,3.478,509,3.478,527,3.67,528,3.672,529,4.235,530,4.235,531,5.476,532,4.235,533,4.235,534,4.235]],["title/classes/DonationRequestEntity.html",[39,0.167,535,2.462]],["body/classes/DonationRequestEntity.html",[12,0.015,22,0.157,23,0.141,24,0.141,27,0.306,38,0.157,39,0.152,40,0.01,41,0.01,46,0.335,53,1,55,0.907,59,0.794,78,0.746,93,1.304,106,1.353,142,1.612,196,1.749,199,1.474,246,0.985,252,1.984,256,3.579,257,1.679,263,3.616,264,3.616,274,3.579,275,3.616,278,2.407,280,1.11,281,2.248,283,3.035,338,3.397,470,4.117,478,3.615,481,4.563,482,4.179,483,3.397,484,4.563,485,3.397,486,3.397,493,5.196,494,3.138,509,3.138,535,3.138,536,6.371,537,3.157,538,3.643,539,3.643,540,3.643,541,4.939,542,3.643,543,3.643,544,3.643,545,3.643,546,3.643,547,3.643,548,3.643]],["title/controllers/DonationRequestsController.html",[42,0.753,549,2.183]],["body/controllers/DonationRequestsController.html",[12,0.016,22,0.099,23,0.089,24,0.089,27,0.365,28,0.383,35,2.621,38,0.099,39,0.096,40,0.007,41,0.007,42,0.435,44,0.648,46,0.212,47,0.904,48,1.788,52,2.699,53,1.081,55,0.663,57,1.321,58,1.102,59,0.686,60,1.173,61,2.595,62,1.375,63,1.675,71,1.352,73,1.903,74,0.981,77,0.861,78,0.472,84,0.898,85,2.343,86,1.078,87,1.078,88,1.474,89,1.521,90,0.825,92,1.487,93,0.435,95,0.861,96,0.861,97,0.981,98,1.779,99,1.018,100,1.375,103,0.981,106,1.668,107,3.188,136,2.621,142,1.147,170,3.343,183,1.116,184,1.147,185,1.416,186,1.742,187,1.36,190,1.132,193,2.694,194,1.521,195,0.898,196,1.244,199,1.387,200,0.898,205,1.193,207,1.193,209,0.73,210,0.898,211,0.898,214,1.193,216,1.614,217,1.779,218,2.145,221,1.078,222,0.981,223,1.078,224,0.73,227,0.938,228,1.078,229,0.981,230,1.259,233,1.078,234,1.642,237,0.898,238,2.196,240,1.642,242,0.898,244,0.898,280,0.701,318,1.521,338,2.933,365,3.941,477,2.933,478,2.871,528,2.933,535,4.186,549,1.978,550,4.546,551,1.521,552,1.793,553,1.996,554,2.303,555,1.793,556,1.996,557,1.996,558,2.303,559,3.343,560,2.303,561,2.443,562,1.642,563,1.793,564,1.793,565,2.579,566,1.642,567,1.642,568,2.303,569,1.793,570,1.793,571,5.061,572,1.793,573,4.385,574,1.793,575,1.996,576,1.996]],["title/controllers/DonationRequestsController-1.html",[42,0.632,302,2.212,549,1.831]],["body/controllers/DonationRequestsController-1.html",[12,0.016,22,0.122,23,0.11,24,0.11,27,0.378,28,0.471,35,2.631,36,3.91,38,0.122,39,0.118,40,0.008,41,0.008,42,0.534,44,0.797,46,0.261,47,1.059,48,1.86,52,2.455,53,1.187,55,0.728,57,1.018,58,0.959,59,0.677,60,0.904,61,2.2,62,1.509,63,1.547,71,1.584,73,1.806,74,1.207,77,1.058,78,0.58,84,1.105,85,2.165,86,1.325,87,1.325,90,1.015,92,0.766,93,0.534,95,1.058,96,1.058,97,1.207,98,1.393,99,0.797,100,1.27,103,1.207,106,1.302,107,2.457,124,2.165,132,1.806,133,1.584,142,1.344,183,1.27,184,1.788,185,1.61,186,2.2,187,1.718,190,1.393,193,2.403,195,1.105,196,1.457,199,1.083,200,1.105,202,1.393,203,2.573,209,0.898,210,1.105,211,1.105,214,1.467,216,1.891,217,2.084,218,1.981,219,2.498,221,1.325,222,1.207,223,1.325,224,0.898,227,1.154,228,1.325,229,1.207,231,1.393,233,1.325,237,1.105,238,1.393,242,1.105,244,1.105,280,0.863,308,1.871,477,3.269,478,3.117,528,2.457,535,3.91,549,2.318,551,1.871,552,2.205,553,2.454,555,2.205,556,2.454,561,2.778,562,2.019,563,2.205,564,2.205,565,2.019,566,2.019,567,2.019,569,2.205,570,3.301,572,2.205,573,3.673,574,2.205,577,2.832,578,2.832,579,2.832,580,2.832,581,2.832,582,2.832,583,2.454]],["title/controllers/DonationRequestsController-2.html",[42,0.632,311,2.212,549,1.831]],["body/controllers/DonationRequestsController-2.html",[12,0.015,22,0.126,23,0.113,24,0.113,27,0.356,28,0.488,35,2.971,38,0.126,39,0.123,40,0.008,41,0.008,42,0.553,44,0.825,46,0.27,47,1.087,48,1.872,52,2.144,53,1.205,55,0.738,57,1.378,58,1.156,59,0.719,60,1.223,61,1.696,62,1.531,63,1.866,71,1.625,73,2.209,77,1.095,78,0.6,84,1.143,85,1.853,86,1.372,87,1.372,92,0.793,93,0.553,95,1.095,96,1.095,97,1.249,98,1.441,99,0.825,100,1.531,106,1.61,107,1.699,142,1.379,183,1.296,184,1.818,185,1.379,186,1.696,187,1.325,190,1.441,193,2.908,195,1.143,196,1.495,198,1.249,199,1.487,200,1.143,207,1.518,209,0.929,210,1.143,211,1.143,214,1.518,217,2.139,218,2.39,229,1.249,230,1.603,237,1.143,242,1.143,244,1.143,298,1.441,317,2.09,318,1.936,324,2.09,392,2.283,398,2.54,477,3.325,478,3.156,535,4.441,549,2.379,551,1.936,552,2.283,559,3.79,561,2.836,562,2.09,563,2.283,564,2.283,565,3.101,567,2.09,569,2.283,570,2.283,572,2.283,574,2.283,575,2.54,576,2.54,584,4.998,585,2.931,586,2.931,587,2.931,588,2.931,589,2.931]],["title/modules/DonationRequestsModule.html",[0,1.43,15,2.637]],["body/modules/DonationRequestsModule.html",[0,2.387,2,2.199,3,2.199,4,2.433,5,2.433,6,2.199,7,3.45,8,3.45,12,0.015,15,5.114,17,3.659,19,3.124,20,2.433,21,2.433,22,0.203,23,0.182,24,0.182,26,3.496,27,0.367,28,0.781,30,2.899,35,3.124,36,2.899,38,0.203,39,0.196,40,0.011,41,0.011,44,1.697,478,2.31,549,3.644,561,4.321,562,3.35,590,4.072,591,4.072,592,4.698,593,4.072,594,4.698,595,4.698]],["title/injectables/DonationRequestsService.html",[123,1.215,561,2.183]],["body/injectables/DonationRequestsService.html",[12,0.016,22,0.138,23,0.123,24,0.123,27,0.312,28,0.531,36,4.313,38,0.138,39,0.133,40,0.009,41,0.009,46,0.294,47,1.157,48,1.929,53,0.627,55,0.822,57,1.589,58,1.248,59,0.682,60,1.41,62,1.653,63,2.015,97,1.359,99,0.897,100,1.653,123,1.409,128,1.192,133,1.192,160,1.569,166,3.732,183,1.157,184,1.467,185,1.467,187,1.658,209,1.467,274,1.652,279,2.678,280,0.972,302,3.057,334,2.107,335,2.937,341,3.057,344,3.3,347,3.3,350,2.275,351,3.3,355,2.275,416,2.484,478,3.437,482,2.275,528,1.849,561,2.531,566,2.275,596,2.764,597,5.973,598,3.19,599,5.445,600,3.19,601,7.41,602,3.19,603,3.19,604,3.19,605,4.627,606,3.19,607,5.445,608,3.19,609,3.19,610,2.764,611,3.19,612,3.19,613,3.19,614,4.627,615,3.19,616,3.19,617,3.19]],["title/controllers/DonationsController.html",[42,0.753,618,2.846]],["body/controllers/DonationsController.html",[12,0.016,22,0.13,23,0.117,24,0.117,27,0.383,28,0.502,38,0.13,39,0.126,40,0.008,41,0.008,42,0.57,44,0.85,46,0.278,47,1.111,48,1.881,52,2.507,53,1.22,55,0.748,57,1.268,58,1.098,59,0.71,60,1.125,61,2.42,62,1.551,63,1.607,71,1.662,73,1.287,74,1.287,77,1.129,78,0.619,84,1.178,85,1.895,86,1.413,87,1.413,90,1.082,92,0.817,93,0.57,95,1.129,96,1.129,99,0.85,100,1.319,103,1.287,106,1.219,124,2.248,128,1.129,132,1.895,133,1.662,142,1.409,183,1.111,184,1.409,185,1.673,186,2.27,187,1.773,188,1.751,189,3.374,190,1.485,191,4.139,193,1.895,194,1.995,195,1.178,196,1.529,198,1.287,199,1.125,200,1.178,202,1.485,203,2.643,209,0.957,210,1.178,211,1.178,212,2.886,213,2.154,214,1.564,215,2.154,216,1.984,217,2.186,218,2.058,219,2.595,220,2.352,221,1.413,222,1.287,223,1.413,224,0.957,225,1.564,226,1.564,227,1.231,228,1.413,229,1.287,231,1.485,233,1.413,235,1.751,236,2.352,237,1.178,238,1.485,239,2.352,240,2.154,241,2.352,242,1.178,244,1.178,308,1.995,618,3.17,619,2.352,620,3.02,621,3.02,622,3.02,623,3.02,624,3.02,625,2.617,626,3.02]],["title/modules/DonationsModule.html",[0,1.43,16,2.637]],["body/modules/DonationsModule.html",[0,2.329,2,2.088,3,2.088,4,2.31,5,2.31,6,2.088,7,3.366,8,2.31,11,4.527,12,0.015,16,5.181,17,3.608,18,4.253,19,3.021,20,2.31,21,2.31,22,0.192,23,0.173,24,0.173,26,3.381,27,0.39,28,0.742,30,2.753,38,0.192,39,0.187,40,0.011,41,0.011,44,1.641,181,4.634,212,4.013,213,3.181,618,4.634,627,3.866,628,4.461,629,3.866,630,4.461,631,4.461,632,4.461,633,4.461,634,4.461]],["title/injectables/DonationsService.html",[123,1.215,212,2.183]],["body/injectables/DonationsService.html",[12,0.016,22,0.119,23,0.106,24,0.106,27,0.311,28,0.457,38,0.119,39,0.115,40,0.008,41,0.008,46,0.253,47,1.036,48,1.889,52,2.788,55,0.784,57,1.563,58,1.228,59,0.671,60,1.387,61,2.723,62,1.566,63,1.816,84,1.072,88,2.65,89,1.816,92,0.743,97,1.766,98,2.932,99,1.166,100,1.49,105,1.503,106,0.635,107,2.402,123,1.262,124,1.766,132,1.171,133,1.027,136,2.877,160,1.352,166,3.558,170,1.816,183,1.036,184,1.582,185,1.582,187,1.52,194,1.816,205,1.424,209,1.582,212,2.267,224,0.871,229,1.171,279,2.454,280,0.837,334,1.816,335,2.732,341,2.738,355,1.96,359,4.324,360,2.14,365,2.14,528,1.593,531,2.14,555,2.14,583,2.382,635,2.382,636,4.99,637,2.749,638,2.749,639,6.851,640,2.749,641,5.166,642,4.642,643,4.99,644,2.749,645,2.749,646,6.267,647,2.749,648,2.749,649,2.749,650,4.99,651,2.749,652,2.749,653,2.749,654,4.99,655,2.749,656,2.749,657,2.749,658,2.749,659,2.749,660,2.749,661,2.749]],["title/injectables/IdInterceptor.html",[123,1.215,662,3.108]],["body/injectables/IdInterceptor.html",[12,0.015,22,0.21,23,0.188,24,0.188,27,0.322,28,0.81,38,0.21,39,0.204,40,0.012,41,0.012,46,0.449,47,1.543,55,0.587,57,1.17,58,0.919,59,0.502,60,1.039,62,1.218,66,4.221,92,1.317,100,1.218,106,1.125,117,5.08,119,3.793,123,1.88,127,3.218,129,4.221,160,2.395,662,4.807,663,4.221,664,6.173,665,6.173,666,6.776,667,7.124,668,4.871,669,6.776,670,6.173,671,4.221,672,4.871,673,4.871,674,4.871,675,6.173,676,4.871]],["title/injectables/JwtAuthGuard.html",[123,1.215,677,3.108]],["body/injectables/JwtAuthGuard.html",[12,0.015,22,0.249,23,0.223,24,0.223,27,0.358,28,0.96,38,0.249,39,0.241,40,0.013,41,0.013,90,2.069,123,2.087,151,4.117,160,2.839,252,2.252,677,5.335,678,5.003,679,5.003,680,5.773]],["title/classes/LoginInputDto.html",[39,0.167,65,2.637]],["body/classes/LoginInputDto.html",[12,0.015,22,0.226,23,0.203,24,0.203,27,0.274,38,0.226,39,0.27,40,0.012,41,0.012,46,0.483,50,4.06,53,1.271,55,0.779,59,0.666,65,4.268,93,1.38,246,1.417,257,2.133,452,4.322,454,4.322,456,2.714,513,4.995,681,5.455,682,4.541,683,6.461,684,5.24,685,5.24]],["title/classes/LoginOutputDto.html",[39,0.167,79,2.637]],["body/classes/LoginOutputDto.html",[12,0.015,22,0.248,23,0.223,24,0.223,38,0.248,39,0.241,40,0.013,41,0.013,46,0.53,55,0.693,59,0.593,79,4.516,93,1.29,179,6.321,246,1.556,257,2.256,681,5.323,686,4.985,687,5.752]],["title/modules/PrismaModule.html",[0,1.43,17,1.962]],["body/modules/PrismaModule.html",[0,2.488,2,2.405,3,2.405,4,2.661,5,2.661,6,2.405,7,3.596,8,3.596,12,0.015,17,3.795,19,3.306,20,2.661,21,2.661,22,0.222,23,0.199,24,0.199,27,0.333,28,0.855,38,0.222,39,0.215,40,0.012,41,0.012,335,3.933,688,4.453,689,4.453,690,4.453,691,5.139,692,5.139]],["title/injectables/PrismaService.html",[123,1.215,335,1.962]],["body/injectables/PrismaService.html",[12,0.015,22,0.208,23,0.187,24,0.187,27,0.32,28,0.803,38,0.208,39,0.202,40,0.012,41,0.012,46,0.444,47,1.534,48,1.903,55,0.739,57,1.16,58,0.911,59,0.498,60,1.029,62,1.534,123,1.869,127,3.189,136,3.178,160,2.374,252,2.394,280,1.47,335,3.018,693,4.183,694,5.847,695,6.137,696,7.493,697,6.137,698,7.1,699,4.827,700,4.183,701,4.827,702,4.827,703,4.827,704,4.827]],["title/guards/RolesGuard.html",[108,3.108,227,1.626]],["body/guards/RolesGuard.html",[12,0.016,22,0.177,23,0.159,24,0.159,27,0.374,28,0.683,38,0.177,39,0.172,40,0.01,41,0.01,46,0.378,47,1.379,48,1.559,52,1.534,55,0.665,57,1.326,58,1.042,59,0.569,60,1.177,61,1.601,62,1.026,70,3.405,83,3.196,84,1.601,88,2.983,89,2.711,92,1.686,97,2.352,98,2.714,100,1.379,105,2.245,106,0.948,109,3.196,111,5.779,116,4.783,117,4.755,119,4.298,123,1.681,127,2.711,135,3.196,136,2.125,142,1.301,170,2.711,177,2.245,178,3.557,224,1.301,225,2.125,226,2.125,227,2.249,705,3.557,706,4.104,707,7.166,708,4.104,709,4.104,710,3.557,711,4.298,712,4.104,713,5.519,714,4.104,715,4.104,716,4.104,717,4.104,718,4.104,719,4.104,720,4.104]],["title/classes/SACreateUserDto.html",[39,0.167,721,2.462]],["body/classes/SACreateUserDto.html",[12,0.015,22,0.167,23,0.15,24,0.15,27,0.277,38,0.167,39,0.222,40,0.01,41,0.01,46,0.357,50,3.509,53,1.418,55,0.869,59,0.744,60,1.132,93,1.423,166,2.119,177,3.311,199,1.132,224,1.919,226,2.006,246,1.048,248,2.39,257,1.752,360,3.017,451,3.784,452,4.346,453,3.784,454,4.346,455,2.559,456,2.006,462,3.999,464,4.643,474,2.559,483,3.509,485,3.509,486,3.509,499,2.762,506,4.133,513,4.317,517,3.357,518,4.599,523,3.357,524,3.357,525,3.017,526,3.357,721,3.735,722,6.365,723,6.054,724,3.874,725,3.874,726,3.874,727,3.874,728,3.874,729,3.874,730,5.307,731,3.874,732,5.307,733,3.874]],["title/controllers/SADonationsController.html",[42,0.753,734,3.108]],["body/controllers/SADonationsController.html",[12,0.016,22,0.118,23,0.105,24,0.105,27,0.379,28,0.453,38,0.118,39,0.114,40,0.008,41,0.008,42,0.514,44,0.767,46,0.251,47,1.029,48,1.848,52,2.712,53,1.168,55,0.716,57,1.427,58,1.179,59,0.718,60,1.266,61,2.666,62,1.485,63,1.809,71,1.539,73,1.755,74,1.161,77,1.018,78,0.558,84,1.063,85,2.357,86,1.275,87,1.275,90,0.977,92,0.737,93,0.514,95,1.018,96,1.018,99,0.767,100,1.485,103,1.161,106,1.635,128,1.018,142,1.305,183,1.029,184,1.305,185,1.573,186,1.936,187,1.512,188,1.58,189,3.206,190,1.34,191,4.217,193,2.662,194,1.8,195,1.063,196,1.416,198,1.161,199,1.457,200,1.063,202,1.34,203,2.115,205,1.411,206,3.654,207,1.411,209,0.864,210,1.063,211,1.063,212,2.715,213,1.943,214,1.411,215,2.936,216,1.838,217,2.025,218,2.157,219,2.025,220,2.122,221,1.275,222,1.161,223,1.275,224,0.864,225,1.411,226,1.411,227,1.11,228,1.275,229,1.161,230,1.491,231,1.34,233,1.275,235,1.58,236,2.122,237,1.063,238,2.441,239,2.122,240,1.943,241,2.122,242,1.063,243,2.362,244,1.063,322,1.8,557,2.362,734,3.207,735,2.122,736,2.725,737,2.725,738,2.725,739,2.725,740,2.725,741,2.362,742,2.725]],["title/classes/SAUpdateUserDto.html",[39,0.167,743,2.637]],["body/classes/SAUpdateUserDto.html",[12,0.015,22,0.249,23,0.223,24,0.223,27,0.358,38,0.249,39,0.241,40,0.013,41,0.013,78,1.182,246,1.561,248,3.562,251,3.346,252,2.252,721,3.562,743,4.526,744,5.003,745,3.814,746,5.773,747,5.773]],["title/classes/UpdateCenterDto.html",[39,0.167,291,2.637]],["body/classes/UpdateCenterDto.html",[12,0.015,22,0.249,23,0.223,24,0.223,27,0.358,38,0.249,39,0.241,40,0.013,41,0.013,78,1.182,183,1.443,246,1.561,252,2.252,291,4.526,295,4.496,313,3.814,443,4.496,745,3.814,748,5.003,749,5.773]],["title/classes/UpdateCityDto.html",[39,0.167,393,2.846]],["body/classes/UpdateCityDto.html",[12,0.015,22,0.249,23,0.223,24,0.223,27,0.358,38,0.249,39,0.241,40,0.013,41,0.013,78,1.182,183,1.443,246,1.561,252,2.252,387,3.814,393,4.885,395,5.003,459,4.496,745,3.814,750,5.003,751,5.773]],["title/classes/UpdateDonationDto.html",[39,0.167,206,2.637]],["body/classes/UpdateDonationDto.html",[12,0.015,22,0.226,23,0.203,24,0.203,27,0.366,38,0.226,39,0.219,40,0.012,41,0.012,46,0.483,53,1.03,55,0.631,59,0.54,78,1.073,183,1.31,189,3.038,206,4.268,215,3.737,246,1.417,252,2.044,257,2.133,280,1.596,283,3.346,466,4.081,494,3.233,509,3.233,528,4.06,531,5.849,745,3.462,752,5.599,753,5.24,754,5.24]],["title/classes/UpdateDonationRequestDto.html",[39,0.167,559,2.637]],["body/classes/UpdateDonationRequestDto.html",[12,0.015,22,0.167,23,0.15,24,0.15,27,0.316,35,3.135,38,0.167,39,0.222,40,0.01,41,0.01,46,0.357,53,1.465,55,0.898,59,0.784,60,1.132,93,1.142,142,1.228,183,0.968,196,1.332,199,1.132,246,1.048,252,2.07,257,1.752,274,2.006,275,4.532,280,1.18,338,3.076,444,2.762,456,2.006,462,3.506,470,2.39,474,2.559,477,4.411,478,2.61,480,3.017,481,4.133,482,3.784,483,3.076,484,4.133,485,3.076,486,3.076,488,3.357,490,3.357,493,4.133,494,3.275,495,3.357,496,3.357,499,2.762,501,3.357,528,3.509,559,3.506,565,2.762,566,4.317,755,4.599,756,5.307,757,3.874,758,3.874,759,3.874,760,3.874,761,3.874,762,3.874,763,3.874,764,3.874,765,3.874]],["title/classes/UpdateUserDto.html",[39,0.167,250,2.637]],["body/classes/UpdateUserDto.html",[12,0.015,22,0.249,23,0.223,24,0.223,27,0.358,38,0.249,39,0.241,40,0.013,41,0.013,78,1.182,183,1.443,246,1.561,248,3.562,250,4.526,251,3.346,252,2.252,511,3.814,745,3.814,766,5.003,767,5.773]],["title/classes/UserEntity.html",[39,0.167,768,2.313]],["body/classes/UserEntity.html",[12,0.015,22,0.223,23,0.2,24,0.2,27,0.364,38,0.276,39,0.268,40,0.012,41,0.012,50,2.998,78,1.059,93,1.412,106,1.195,177,2.829,199,1.103,224,2.208,246,1.399,249,4.028,252,2.5,256,3.319,280,1.575,281,3.191,283,3.319,483,2.998,485,2.998,486,2.998,509,3.191,541,4.028,768,3.715,769,4.028,770,3.688,771,4.991,772,4.482]],["title/classes/UserPrivateEntity.html",[39,0.167,770,2.846]],["body/classes/UserPrivateEntity.html",[12,0.015,22,0.177,23,0.159,24,0.159,27,0.326,38,0.238,39,0.231,40,0.01,41,0.01,46,0.378,50,3.614,53,0.807,55,0.909,59,0.777,78,0.841,93,1.438,106,1.44,177,3.411,199,1.177,224,2.206,246,1.11,249,3.196,252,2.432,256,3.711,257,1.822,263,3.405,264,3.405,274,2.858,275,3.847,276,2.926,278,3.646,280,1.25,281,2.532,283,2.858,483,3.614,485,3.614,486,3.614,494,2.532,509,2.532,541,4.298,768,2.379,769,3.196,770,3.935,771,5.193,772,3.557,773,4.104,774,4.104,775,4.104,776,4.104,777,4.104,778,4.104]],["title/controllers/UsersController.html",[42,0.753,779,2.183]],["body/controllers/UsersController.html",[12,0.016,22,0.129,23,0.116,24,0.116,27,0.382,28,0.497,38,0.129,39,0.125,40,0.008,41,0.008,42,0.564,44,0.84,46,0.275,47,1.102,48,1.877,52,2.163,53,1.214,55,0.744,57,1.059,58,0.989,59,0.689,60,0.94,61,1.72,62,1.543,63,1.596,71,1.648,73,1.879,74,1.272,77,1.116,78,0.612,84,1.165,85,1.879,87,1.398,88,2.136,90,1.07,92,0.808,93,0.564,95,1.116,96,1.116,99,0.84,100,1.31,103,1.272,105,1.633,106,1.585,107,1.731,124,2.466,128,1.116,132,2.234,133,1.959,142,1.398,183,1.447,184,1.835,185,1.398,186,2.258,187,1.596,193,2.466,195,1.165,196,1.516,198,1.272,199,1.378,200,1.165,202,1.468,203,2.631,205,1.547,207,1.547,209,0.947,210,1.165,211,1.165,216,1.967,218,2.258,219,2.578,221,1.398,222,1.272,223,1.398,224,0.947,226,1.547,227,1.217,228,1.398,229,1.272,231,1.468,233,1.398,237,1.165,238,1.468,242,1.165,244,1.165,245,4.127,251,1.731,286,1.973,298,1.468,322,1.973,525,2.325,768,3.875,779,2.412,780,2.325,781,2.986,782,2.986,783,2.986,784,2.986,785,2.986,786,2.129,787,2.325,788,2.588,789,2.986,790,2.588,791,2.325,792,2.325]],["title/controllers/UsersController-1.html",[42,0.632,302,2.212,779,1.831]],["body/controllers/UsersController-1.html",[12,0.016,22,0.129,23,0.116,24,0.116,27,0.372,28,0.498,38,0.129,39,0.125,40,0.008,41,0.008,42,0.565,44,0.842,46,0.275,47,1.104,48,1.878,53,1.215,55,0.745,57,1.392,58,1.166,59,0.723,60,1.235,62,1.545,70,4.399,71,1.65,73,1.881,74,1.275,77,1.118,78,0.613,88,2.138,90,1.072,92,0.809,93,0.565,95,1.118,96,1.118,99,0.842,100,1.545,103,1.275,105,1.636,106,1.619,128,1.118,142,1.4,151,2.133,183,1.104,184,1.837,185,1.4,186,1.722,187,1.598,188,1.734,190,1.471,193,2.755,195,1.167,196,1.518,198,1.275,199,1.495,200,1.167,207,1.549,209,0.948,210,1.167,211,1.167,216,1.97,217,2.171,218,2.41,222,1.275,223,1.4,224,0.948,227,1.219,228,1.4,233,1.4,235,1.734,237,1.167,238,1.471,242,1.167,244,1.167,251,2.559,280,0.911,298,1.471,317,2.133,318,1.977,322,1.977,324,2.133,392,2.33,721,3.575,743,3.828,768,4.191,779,2.415,786,2.133,787,2.33,791,2.33,792,2.33,793,2.33,794,2.992,795,2.992,796,2.992,797,2.992,798,2.992,799,2.593,800,2.593,801,2.593,802,2.593,803,2.992]],["title/controllers/UsersController-2.html",[42,0.632,311,2.212,779,1.831]],["body/controllers/UsersController-2.html",[12,0.016,22,0.129,23,0.116,24,0.116,27,0.372,28,0.498,38,0.129,39,0.125,40,0.008,41,0.008,42,0.565,44,0.842,46,0.275,47,1.104,48,1.878,52,2.165,53,1.215,55,0.745,57,1.261,58,1.093,59,0.708,60,1.119,61,1.722,62,1.545,63,1.765,71,1.65,73,1.881,74,1.275,77,1.118,78,0.613,84,1.167,85,1.881,87,1.4,88,2.138,90,1.072,92,0.809,93,0.565,95,1.118,96,1.118,99,0.842,100,1.448,103,1.275,105,1.636,106,1.585,107,1.734,124,2.236,128,1.118,132,1.881,133,1.65,142,1.4,183,1.104,184,1.837,185,1.4,186,2.26,187,1.598,188,1.734,190,1.471,193,2.755,195,1.167,196,1.518,198,1.275,199,1.379,200,1.167,202,1.471,203,2.236,205,1.549,209,0.948,210,1.167,211,1.167,214,1.549,216,1.97,217,2.171,218,2.26,219,2.171,221,1.4,229,1.275,230,1.636,231,1.471,235,1.734,237,1.167,238,1.471,242,1.167,244,1.167,250,3.828,251,2.559,298,1.471,511,3.828,768,4.063,779,2.415,786,2.133,787,2.33,788,2.593,791,2.33,792,2.33,802,2.593,804,2.33,805,2.992,806,2.992,807,2.992,808,2.992,809,2.992,810,2.992,811,2.593]],["title/modules/UsersModule.html",[0,1.43,18,2.313]],["body/modules/UsersModule.html",[0,2.394,2,2.212,3,2.212,4,2.448,5,2.448,6,2.212,7,3.46,8,3.46,12,0.015,17,3.664,18,4.492,19,3.136,20,2.448,21,2.448,22,0.204,23,0.183,24,0.183,26,3.51,27,0.368,28,0.786,30,2.916,38,0.204,39,0.198,40,0.012,41,0.012,44,1.703,88,3.222,149,5.247,779,3.654,786,3.37,812,4.096,813,4.096,814,4.726,815,4.096,816,4.726,817,4.726]],["title/injectables/UsersService.html",[88,1.626,123,1.215]],["body/injectables/UsersService.html",[12,0.016,22,0.135,23,0.121,24,0.121,27,0.343,28,0.519,38,0.135,39,0.131,40,0.009,41,0.009,46,0.287,47,1.138,48,1.924,55,0.817,57,1.629,58,1.279,59,0.699,60,1.445,62,1.641,63,1.915,70,2.81,88,1.856,92,1.454,93,1.015,97,1.33,98,2.645,99,0.878,100,1.641,122,2.705,123,1.387,128,1.166,136,2.359,160,1.535,166,3.8,169,2.43,183,1.138,184,1.444,185,1.444,187,1.387,193,1.941,209,1.444,251,2.64,279,2.645,280,0.951,334,2.062,335,2.907,341,3.009,344,3.248,347,3.248,350,2.226,351,3.248,355,2.226,416,3.547,513,3.248,721,3.648,743,3.906,771,4.604,799,2.705,800,2.705,818,2.705,819,4.555,820,3.121,821,4.555,822,3.121,823,3.121,824,7.086,825,3.121,826,5.378,827,3.121,828,3.121,829,3.121,830,3.121,831,3.121,832,3.121,833,3.121,834,3.121,835,3.121,836,3.121,837,3.121,838,3.121,839,3.121,840,3.121]],["title/coverage.html",[841,4.217]],["body/coverage.html",[6,0.972,12,0.015,24,0.08,35,1.726,36,2.575,39,0.311,40,0.006,41,0.006,42,1.335,43,1.481,45,2.595,58,1.335,59,0.214,65,1.372,75,1.282,79,1.372,85,0.885,86,0.972,88,0.846,90,0.744,108,2.595,110,1.8,123,1.915,133,0.776,161,1.8,181,1.481,182,2.595,189,1.204,191,1.282,203,0.885,206,1.372,212,1.136,222,0.885,224,0.658,225,1.726,227,0.846,245,1.481,247,1.8,248,3.226,250,1.372,254,1.282,255,1.8,256,1.076,266,1.204,279,1.639,284,2.282,285,2.595,291,1.372,293,1.136,303,2.595,310,1.617,312,2.595,313,1.372,332,1.8,335,1.021,366,2.282,367,2.595,373,1.136,379,2.595,385,1.617,386,2.595,387,1.372,393,1.481,407,1.8,425,1.8,429,1.8,433,1.8,442,1.8,443,2.595,458,1.8,459,2.595,465,1.8,466,2.595,477,1.204,478,3.173,479,1.8,480,2.595,511,1.372,512,1.8,521,1.481,527,1.8,535,1.282,536,1.8,537,1.8,549,2.282,550,2.595,551,3.687,559,1.372,561,1.136,584,2.595,596,1.8,618,1.481,619,2.595,635,1.8,662,1.617,663,1.8,677,1.617,678,1.8,679,1.8,681,2.595,682,1.8,686,1.8,693,1.8,705,1.8,711,1.617,721,1.282,722,1.8,734,1.617,735,2.595,743,1.372,744,1.8,748,1.8,750,1.8,752,1.8,755,1.8,766,1.8,768,1.204,769,2.595,770,1.481,779,2.282,780,2.595,793,2.595,804,2.595,818,1.8,841,1.617,842,2.077,843,2.077,844,2.077,845,1.8,846,7.537,847,1.8,848,8.102,849,7.729,850,4.138,851,2.888,852,2.888,853,5.228,854,2.888,855,4.173,856,4.776,857,6.998,858,5.228,859,3.332,860,4.173,861,4.173,862,3.332,863,2.077,864,1.8,865,2.077,866,1.8,867,2.595,868,2.077,869,2.077]],["title/dependencies.html",[3,2.242,870,2.901]],["body/dependencies.html",[3,2.781,12,0.016,28,0.763,39,0.249,40,0.011,41,0.011,78,0.94,125,3.273,126,6.038,151,3.273,169,3.574,279,2.257,280,1.398,456,2.377,610,3.977,671,3.977,710,3.977,871,6.589,872,5.942,873,4.59,874,4.59,875,4.59,876,5.942,877,4.59,878,4.59,879,5.942,880,5.942,881,4.59,882,5.942,883,4.59,884,4.59,885,4.59,886,4.59,887,4.59,888,5.942,889,6.589,890,4.59,891,4.59,892,4.59,893,4.59,894,4.59,895,4.59,896,4.59,897,4.59,898,4.59,899,4.59,900,4.59,901,4.59,902,4.59,903,4.59,904,4.59,905,4.59,906,4.59,907,4.59,908,4.59,909,4.59]],["title/miscellaneous/enumerations.html",[910,1.831,911,4.152]],["body/miscellaneous/enumerations.html",[12,0.015,40,0.013,41,0.013,46,0.537,470,4.255,642,5.715,910,3.192,911,5.058,912,5.058,913,6.895,914,5.837,915,6.895,916,6.895,917,6.895]],["title/miscellaneous/functions.html",[910,1.831,918,4.152]],["body/miscellaneous/functions.html",[6,3.505,12,0.013,40,0.013,41,0.013,46,0.564,864,5.312,910,3.352,918,5.312,919,6.13]],["title/index.html",[46,0.308,920,3.348,921,3.348]],["body/index.html",[12,0.015,23,0.179,40,0.011,41,0.011,700,4.012,841,3.605,922,4.63,923,4.63,924,5.975,925,4.63,926,4.63,927,4.63,928,4.63,929,4.63,930,4.63,931,4.012,932,6.616,933,4.63,934,4.63,935,4.63,936,4.63,937,7.541,938,4.63,939,4.63,940,7.411,941,4.63,942,4.63,943,5.975,944,4.63,945,4.63,946,4.63,947,4.63,948,5.975,949,5.975,950,4.63,951,4.63,952,4.63,953,5.975,954,5.975,955,4.63,956,4.63,957,4.63,958,4.63,959,4.63,960,4.012,961,4.63,962,4.63,963,4.63,964,4.63,965,4.63,966,4.63,967,4.63,968,4.63,969,4.63,970,4.63,971,4.012,972,4.63,973,4.63,974,4.63,975,4.63,976,4.63,977,4.63,978,4.012]],["title/modules.html",[2,2.534]],["body/modules.html",[1,3.877,2,2.545,11,3.355,12,0.013,13,3.592,14,3.592,15,3.592,16,3.592,17,2.674,18,3.152,40,0.013,41,0.013,960,6.83,979,7.882,980,7.882,981,7.882]],["title/overview.html",[982,4.693]],["body/overview.html",[0,1.288,1,5.541,2,1.682,3,1.682,4,1.861,5,1.861,6,1.682,7,1.861,8,1.861,9,3.114,10,3.114,11,4.45,12,0.015,13,4.764,14,4.764,15,4.764,16,4.959,17,3.691,18,4.304,19,2.609,20,1.861,21,1.861,40,0.01,41,0.01,44,1.011,75,3.589,88,2.879,109,2.798,145,3.114,147,3.114,160,1.767,212,3.182,246,0.972,293,3.865,311,2.374,326,3.114,327,3.114,328,3.114,335,3.475,373,3.865,401,3.114,403,3.114,404,3.114,561,3.865,590,3.114,591,3.114,593,3.114,627,3.114,629,3.114,688,3.114,689,3.114,690,3.114,812,3.114,813,3.114,815,3.114,982,3.114,983,3.594,984,3.594,985,3.594,986,3.594]],["title/properties.html",[257,1.581,870,2.901]],["body/properties.html",[12,0.015,40,0.013,41,0.013,257,2,931,5.251,971,5.251,978,5.251,987,6.059,988,6.059,989,6.059]],["title/miscellaneous/typealiases.html",[910,1.831,990,4.791]],["body/miscellaneous/typealiases.html",[12,0.013,40,0.013,41,0.013,46,0.536,52,2.571,59,0.709,224,2.181,225,3.012,229,2.478,521,4.906,867,5.706,910,3.181,991,5.816,992,5.816,993,6.881,994,5.963,995,5.816]],["title/miscellaneous/variables.html",[910,1.831,996,4.152]],["body/miscellaneous/variables.html",[12,0.016,35,1.44,36,0.733,40,0.004,41,0.004,45,0.925,46,0.109,48,0.297,58,1.502,59,0.657,61,0.463,63,0.362,85,0.887,86,0.556,92,0.563,93,1.17,94,1.029,100,0.297,117,0.847,133,0.778,136,1.078,166,0.65,177,0.65,182,0.925,183,1.75,222,1.423,224,0.881,225,0.615,232,1.029,259,0.925,261,3.581,262,3.581,279,1.642,285,0.925,297,1.029,303,0.925,310,2.164,312,0.925,321,1.029,367,0.925,376,1.029,379,0.925,385,2.164,386,0.925,396,1.029,478,1.367,521,1.982,550,0.925,551,2.761,567,1.982,584,0.925,619,0.925,625,1.029,641,5.914,642,5.314,694,1.804,711,1.621,735,0.925,741,1.029,780,0.925,790,1.029,793,0.925,801,1.029,804,0.925,811,1.029,845,1.029,847,1.804,850,1.804,851,2.409,852,2.409,854,1.029,866,1.804,867,2.164,910,0.65,912,1.029,994,1.804,996,1.029,997,3.339,998,1.188,999,1.188,1000,1.188,1001,1.188,1002,1.188,1003,1.188,1004,1.188,1005,1.188,1006,1.188,1007,1.188,1008,1.188,1009,1.188,1010,1.188,1011,1.188,1012,1.188,1013,1.188,1014,1.188,1015,2.082,1016,1.188,1017,1.188,1018,1.188,1019,1.188,1020,2.78,1021,1.188,1022,1.188,1023,1.188,1024,5.235,1025,5.235,1026,4.18,1027,7.001,1028,1.188,1029,7.647,1030,6.457,1031,7.001,1032,6.457,1033,6.457,1034,2.082,1035,1.188,1036,1.188,1037,4.18,1038,1.188,1039,2.78,1040,1.188,1041,1.188,1042,4.18,1043,2.082,1044,1.188,1045,1.188,1046,4.18,1047,1.188,1048,2.78,1049,1.188,1050,1.188,1051,4.18,1052,2.082,1053,1.188,1054,1.188,1055,4.18,1056,1.188,1057,2.082,1058,1.188,1059,1.188,1060,4.18,1061,1.188,1062,2.082,1063,1.188,1064,1.188,1065,4.18,1066,1.188,1067,2.082,1068,1.188,1069,1.188,1070,4.18,1071,1.188,1072,2.082,1073,1.188,1074,1.188,1075,4.18,1076,1.188,1077,1.188,1078,1.188,1079,1.188,1080,1.188,1081,1.188,1082,1.188,1083,1.188,1084,2.082,1085,2.082,1086,2.082,1087,2.082]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"classes/CAUpdateUserDto.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"modules/CentersModule.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"modules/DonationsModule.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/SAUpdateUserDto.html":{},"classes/UpdateCenterDto.html":{},"classes/UpdateCityDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":988,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":302,"title":{"controllers/CentersController-1.html":{},"controllers/CitiesController-1.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/UsersController-1.html":{}},"body":{"injectables/DonationRequestsService.html":{}}}],["1.0.0",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["1.0.34",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["128",{"_index":518,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SACreateUserDto.html":{}}}],["16",{"_index":984,"title":{},"body":{"overview.html":{}}}],["2",{"_index":311,"title":{"controllers/CentersController-2.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/UsersController-2.html":{}},"body":{"overview.html":{}}}],["2.2.2",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["23",{"_index":986,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["38.841612",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39.654404",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39.767966",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["4.14.1",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["4.18.1",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["40.38942",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.469051",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.539123",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.783388",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41.000085",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41.26413125540165",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41.311158",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.460341",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["59.617996",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.421728",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.789988",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66.975827",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69.22924627613766",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69.279737",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2.0",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["70.940434",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71.672579",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71.720765",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71.783009",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["72.350663",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":983,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["8.7.3",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":985,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{}}}],["_checkcenteradminattachment",{"_index":333,"title":{},"body":{"injectables/CentersService.html":{}}}],["_checkcenteradminattachment(userid",{"_index":337,"title":{},"body":{"injectables/CentersService.html":{}}}],["_filterdonationsaccess",{"_index":636,"title":{},"body":{"injectables/DonationsService.html":{}}}],["_filterdonationsaccess(userpayload",{"_index":638,"title":{},"body":{"injectables/DonationsService.html":{}}}],["_hashpassword",{"_index":819,"title":{},"body":{"injectables/UsersService.html":{}}}],["_hashpassword(password",{"_index":821,"title":{},"body":{"injectables/UsersService.html":{}}}],["accesstoken",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginOutputDto.html":{}}}],["address",{"_index":258,"title":{},"body":{"classes/CenterEntity.html":{}}}],["aliases",{"_index":991,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":961,"title":{},"body":{"index.html":{}}}],["andijan",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["andijon",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":216,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["apicreatedresponse",{"_index":217,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["apiokresponse",{"_index":218,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["apiproperty",{"_index":283,"title":{},"body":{"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"classes/CommonException.html":{},"classes/CreateDonationRequestDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"classes/UpdateDonationDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{}}}],["apiproperty({enum",{"_index":494,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UserPrivateEntity.html":{}}}],["apiproperty({type",{"_index":270,"title":{},"body":{"classes/CenterEntity.html":{},"classes/CityEntity.html":{}}}],["apitags",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["apitags(name",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["apiunauthorizedresponse",{"_index":219,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{}}}],["app",{"_index":700,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":704,"title":{},"body":{"injectables/PrismaService.html":{}}}],["applicant",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicantid",{"_index":570,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{}}}],["applications",{"_index":930,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":48,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":679,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":43,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":90,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"coverage.html":{}}}],["authguard('jwt",{"_index":680,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":11,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DonationsModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":971,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":75,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CentersService.html":{},"controllers/DonationRequestsController.html":{},"injectables/DonationsService.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":962,"title":{},"body":{"index.html":{}}}],["bcryptjs",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bearer",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{}}}],["bloodgroupsenum",{"_index":493,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/DonationRequestEntity.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["body",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CentersModule.html":{},"modules/CitiesModule.html":{},"modules/DonationRequestsModule.html":{},"modules/DonationsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["botlanguagesenum.en",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["botlanguagesenum.ru",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["botlanguagesenum.uz",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["botlocales",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browse",{"_index":981,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":979,"title":{},"body":{"modules.html":{}}}],["building",{"_index":925,"title":{},"body":{"index.html":{}}}],["bukhara",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buxoro",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ca.donations.controller",{"_index":634,"title":{},"body":{"modules/DonationsModule.html":{}}}],["ca/centers",{"_index":297,"title":{},"body":{"controllers/CentersController.html":{},"miscellaneous/variables.html":{}}}],["ca/cities",{"_index":376,"title":{},"body":{"controllers/CitiesController.html":{},"miscellaneous/variables.html":{}}}],["ca/donations",{"_index":232,"title":{},"body":{"controllers/CADonationsController.html":{},"miscellaneous/variables.html":{}}}],["ca/users",{"_index":790,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["cadonationscontroller",{"_index":181,"title":{"controllers/CADonationsController.html":{}},"body":{"controllers/CADonationsController.html":{},"modules/DonationsModule.html":{},"coverage.html":{}}}],["callhandler",{"_index":667,"title":{},"body":{"injectables/IdInterceptor.html":{}}}],["canactivate",{"_index":111,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":116,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["catch",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{}}}],["caupdateuserdto",{"_index":245,"title":{"classes/CAUpdateUserDto.html":{}},"body":{"classes/CAUpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["center.dto",{"_index":295,"title":{},"body":{"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"classes/UpdateCenterDto.html":{}}}],["center.dto.ts",{"_index":443,"title":{},"body":{"classes/CreateCenterDto.html":{},"classes/UpdateCenterDto.html":{},"coverage.html":{}}}],["center.dto.ts:14",{"_index":450,"title":{},"body":{"classes/CreateCenterDto.html":{}}}],["center.dto.ts:17",{"_index":447,"title":{},"body":{"classes/CreateCenterDto.html":{}}}],["center.dto.ts:20",{"_index":448,"title":{},"body":{"classes/CreateCenterDto.html":{}}}],["center.dto.ts:24",{"_index":445,"title":{},"body":{"classes/CreateCenterDto.html":{}}}],["center_admin",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["centerentity",{"_index":254,"title":{"classes/CenterEntity.html":{}},"body":{"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"coverage.html":{}}}],["centerid",{"_index":338,"title":{},"body":{"injectables/CentersService.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["centers",{"_index":310,"title":{},"body":{"controllers/CentersController-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["centers.controller",{"_index":331,"title":{},"body":{"modules/CentersModule.html":{}}}],["centers.service",{"_index":294,"title":{},"body":{"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"modules/CentersModule.html":{}}}],["centers.ts",{"_index":851,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["centers/centers.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["centerscontroller",{"_index":284,"title":{"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{}},"body":{"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"modules/CentersModule.html":{},"coverage.html":{}}}],["centersmodule",{"_index":13,"title":{"modules/CentersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CentersModule.html":{},"modules.html":{},"overview.html":{}}}],["centersservice",{"_index":293,"title":{"injectables/CentersService.html":{}},"body":{"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"modules/CentersModule.html":{},"injectables/CentersService.html":{},"coverage.html":{},"overview.html":{}}}],["cities",{"_index":385,"title":{},"body":{"controllers/CitiesController-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cities.controller",{"_index":406,"title":{},"body":{"modules/CitiesModule.html":{}}}],["cities.service",{"_index":374,"title":{},"body":{"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"modules/CitiesModule.html":{}}}],["cities/cities.module",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["cities/entities/city.entity",{"_index":282,"title":{},"body":{"classes/CenterEntity.html":{}}}],["citiescontroller",{"_index":366,"title":{"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{}},"body":{"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"modules/CitiesModule.html":{},"coverage.html":{}}}],["citiesmodule",{"_index":14,"title":{"modules/CitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["citiesservice",{"_index":373,"title":{"injectables/CitiesService.html":{}},"body":{"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"coverage.html":{},"overview.html":{}}}],["citites.ts",{"_index":852,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["city",{"_index":259,"title":{},"body":{"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"miscellaneous/variables.html":{}}}],["city.dto",{"_index":395,"title":{},"body":{"controllers/CitiesController-2.html":{},"classes/UpdateCityDto.html":{}}}],["city.dto.ts",{"_index":459,"title":{},"body":{"classes/CreateCityDto.html":{},"classes/UpdateCityDto.html":{},"coverage.html":{}}}],["city.dto.ts:10",{"_index":460,"title":{},"body":{"classes/CreateCityDto.html":{}}}],["city.dto.ts:13",{"_index":461,"title":{},"body":{"classes/CreateCityDto.html":{}}}],["city.dto.ts:7",{"_index":463,"title":{},"body":{"classes/CreateCityDto.html":{}}}],["city:andijan",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city:bukhara",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city:fergana",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city:karshi",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city:kokand",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city:margilan",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city:namangan",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city:nukus",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city:samarkand",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city:tashkent",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cityentity",{"_index":266,"title":{"classes/CityEntity.html":{}},"body":{"classes/CenterEntity.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"classes/CityEntity.html":{},"coverage.html":{}}}],["cityid",{"_index":260,"title":{},"body":{"classes/CenterEntity.html":{},"classes/CreateCenterDto.html":{}}}],["class",{"_index":39,"title":{"classes/CAUpdateUserDto.html":{},"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"classes/SACreateUserDto.html":{},"classes/SAUpdateUserDto.html":{},"classes/UpdateCenterDto.html":{},"classes/UpdateCityDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"classes/CAUpdateUserDto.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"modules/CentersModule.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"modules/DonationsModule.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/SAUpdateUserDto.html":{},"classes/UpdateCenterDto.html":{},"classes/UpdateCityDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":246,"title":{},"body":{"classes/CAUpdateUserDto.html":{},"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"classes/SACreateUserDto.html":{},"classes/SAUpdateUserDto.html":{},"classes/UpdateCenterDto.html":{},"classes/UpdateCityDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_centersmodule",{"_index":326,"title":{},"body":{"modules/CentersModule.html":{},"overview.html":{}}}],["cluster_centersmodule_exports",{"_index":327,"title":{},"body":{"modules/CentersModule.html":{},"overview.html":{}}}],["cluster_centersmodule_imports",{"_index":329,"title":{},"body":{"modules/CentersModule.html":{}}}],["cluster_centersmodule_providers",{"_index":328,"title":{},"body":{"modules/CentersModule.html":{},"overview.html":{}}}],["cluster_citiesmodule",{"_index":401,"title":{},"body":{"modules/CitiesModule.html":{},"overview.html":{}}}],["cluster_citiesmodule_exports",{"_index":403,"title":{},"body":{"modules/CitiesModule.html":{},"overview.html":{}}}],["cluster_citiesmodule_imports",{"_index":402,"title":{},"body":{"modules/CitiesModule.html":{}}}],["cluster_citiesmodule_providers",{"_index":404,"title":{},"body":{"modules/CitiesModule.html":{},"overview.html":{}}}],["cluster_donationrequestsmodule",{"_index":590,"title":{},"body":{"modules/DonationRequestsModule.html":{},"overview.html":{}}}],["cluster_donationrequestsmodule_exports",{"_index":591,"title":{},"body":{"modules/DonationRequestsModule.html":{},"overview.html":{}}}],["cluster_donationrequestsmodule_imports",{"_index":592,"title":{},"body":{"modules/DonationRequestsModule.html":{}}}],["cluster_donationrequestsmodule_providers",{"_index":593,"title":{},"body":{"modules/DonationRequestsModule.html":{},"overview.html":{}}}],["cluster_donationsmodule",{"_index":627,"title":{},"body":{"modules/DonationsModule.html":{},"overview.html":{}}}],["cluster_donationsmodule_imports",{"_index":628,"title":{},"body":{"modules/DonationsModule.html":{}}}],["cluster_donationsmodule_providers",{"_index":629,"title":{},"body":{"modules/DonationsModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":688,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":689,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":690,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":812,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":815,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":814,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":813,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["common/entities/common.entity",{"_index":281,"title":{},"body":{"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{}}}],["commonentity",{"_index":256,"title":{"classes/CommonEntity.html":{}},"body":{"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"coverage.html":{}}}],["commonentity:2",{"_index":277,"title":{},"body":{"classes/CenterEntity.html":{}}}],["commonentity:26",{"_index":540,"title":{},"body":{"classes/DonationRequestEntity.html":{}}}],["commonentity:28",{"_index":548,"title":{},"body":{"classes/DonationRequestEntity.html":{}}}],["commonentity:4",{"_index":276,"title":{},"body":{"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"classes/DonationEntity.html":{},"classes/UserPrivateEntity.html":{}}}],["commonentity:6",{"_index":278,"title":{},"body":{"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"classes/UserPrivateEntity.html":{}}}],["commonexception",{"_index":203,"title":{"classes/CommonException.html":{}},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"classes/CommonException.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{},"coverage.html":{}}}],["compare",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["connect",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connectorcreate",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('success",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CentersService.html":{},"injectables/CitiesService.html":{},"classes/CommonException.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"injectables/DonationsService.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{}}}],["constructor(jwtservice",{"_index":113,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(prisma",{"_index":334,"title":{},"body":{"injectables/CentersService.html":{},"injectables/CitiesService.html":{},"injectables/DonationRequestsService.html":{},"injectables/DonationsService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{}}}],["constructor(reflector",{"_index":706,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(statuscode",{"_index":437,"title":{},"body":{"classes/CommonException.html":{}}}],["constructor(usersservice",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/IdInterceptor.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":716,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":715,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/IdInterceptor.html":{}}}],["controller",{"_index":42,"title":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}},"body":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"coverage.html":{}}}],["controller(name",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["controllers",{"_index":44,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"modules/CentersModule.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"modules/CitiesModule.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{},"controllers/DonationsController.html":{},"modules/DonationsModule.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["count",{"_index":481,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/DonationRequestEntity.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["coverage",{"_index":841,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":183,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"controllers/SADonationsController.html":{},"classes/UpdateCenterDto.html":{},"classes/UpdateCityDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":235,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["create(data",{"_index":341,"title":{},"body":{"injectables/CentersService.html":{},"injectables/CitiesService.html":{},"injectables/DonationRequestsService.html":{},"injectables/DonationsService.html":{},"injectables/UsersService.html":{}}}],["create(dto",{"_index":188,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["create(userpayload",{"_index":552,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{}}}],["createcenterdto",{"_index":313,"title":{"classes/CreateCenterDto.html":{}},"body":{"controllers/CentersController-2.html":{},"classes/CreateCenterDto.html":{},"classes/UpdateCenterDto.html":{},"coverage.html":{}}}],["createcitydto",{"_index":387,"title":{"classes/CreateCityDto.html":{}},"body":{"controllers/CitiesController-2.html":{},"classes/CreateCityDto.html":{},"classes/UpdateCityDto.html":{},"coverage.html":{}}}],["createdat",{"_index":263,"title":{},"body":{"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"classes/UserPrivateEntity.html":{}}}],["createdonationdto",{"_index":189,"title":{"classes/CreateDonationDto.html":{}},"body":{"controllers/CADonationsController.html":{},"classes/CreateDonationDto.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"classes/UpdateDonationDto.html":{},"coverage.html":{}}}],["createdonationrequestdto",{"_index":477,"title":{"classes/CreateDonationRequestDto.html":{}},"body":{"classes/CreateDonationRequestDto.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"classes/UpdateDonationRequestDto.html":{},"coverage.html":{}}}],["createdonationrequestdto:20",{"_index":761,"title":{},"body":{"classes/UpdateDonationRequestDto.html":{}}}],["createdonationrequestdto:25",{"_index":763,"title":{},"body":{"classes/UpdateDonationRequestDto.html":{}}}],["createdonationrequestdto:31",{"_index":764,"title":{},"body":{"classes/UpdateDonationRequestDto.html":{}}}],["createdonationrequestdto:36",{"_index":759,"title":{},"body":{"classes/UpdateDonationRequestDto.html":{}}}],["createdonationrequestdto:40",{"_index":760,"title":{},"body":{"classes/UpdateDonationRequestDto.html":{}}}],["createdonationrequestdto:44",{"_index":758,"title":{},"body":{"classes/UpdateDonationRequestDto.html":{}}}],["createdonationrequestdto:48",{"_index":765,"title":{},"body":{"classes/UpdateDonationRequestDto.html":{}}}],["createdonationrequestdto:52",{"_index":762,"title":{},"body":{"classes/UpdateDonationRequestDto.html":{}}}],["createparamdecorator",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":511,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController-2.html":{},"coverage.html":{}}}],["cron",{"_index":609,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["cron('0",{"_index":605,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["ctx",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CentersService.html":{},"injectables/CitiesService.html":{},"injectables/DonationRequestsService.html":{},"injectables/DonationsService.html":{},"classes/SACreateUserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["data.login",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.password",{"_index":835,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.role",{"_index":733,"title":{},"body":{"classes/SACreateUserDto.html":{}}}],["date",{"_index":274,"title":{},"body":{"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CreateDonationRequestDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"injectables/DonationRequestsService.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UserPrivateEntity.html":{}}}],["dateto",{"_index":482,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/DonationRequestEntity.html":{},"injectables/DonationRequestsService.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CentersModule.html":{},"modules/CitiesModule.html":{},"modules/DonationRequestsModule.html":{},"modules/DonationsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":53,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"classes/CityEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"classes/LoginInputDto.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["decorators/get",{"_index":788,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-2.html":{}}}],["decorators/roles.decorator",{"_index":712,"title":{},"body":{"guards/RolesGuard.html":{}}}],["default",{"_index":641,"title":{},"body":{"injectables/DonationsService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":55,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":209,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{}}}],["delete(':id",{"_index":244,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["delete(':id')@apiokresponse({type",{"_index":318,"title":{},"body":{"controllers/CentersController-2.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/UsersController-1.html":{}}}],["delete(':id')@apiunauthorizedresponse({type",{"_index":202,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{}}}],["delete(userpayload",{"_index":645,"title":{},"body":{"injectables/DonationsService.html":{}}}],["delete(where",{"_index":344,"title":{},"body":{"injectables/CentersService.html":{},"injectables/CitiesService.html":{},"injectables/DonationRequestsService.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CentersModule.html":{},"modules/CitiesModule.html":{},"modules/DonationRequestsModule.html":{},"modules/DonationsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":931,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":939,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["donation",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateDonationRequestDto.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{},"classes/UpdateDonationRequestDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["donation.dto",{"_index":215,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"classes/UpdateDonationDto.html":{}}}],["donation.dto.ts",{"_index":466,"title":{},"body":{"classes/CreateDonationDto.html":{},"classes/UpdateDonationDto.html":{},"coverage.html":{}}}],["donation.dto.ts:10",{"_index":473,"title":{},"body":{"classes/CreateDonationDto.html":{}}}],["donation.dto.ts:14",{"_index":468,"title":{},"body":{"classes/CreateDonationDto.html":{}}}],["donation.dto.ts:18",{"_index":469,"title":{},"body":{"classes/CreateDonationDto.html":{}}}],["donation.dto.ts:6",{"_index":472,"title":{},"body":{"classes/CreateDonationDto.html":{}}}],["donation.dto.ts:7",{"_index":753,"title":{},"body":{"classes/UpdateDonationDto.html":{}}}],["donationentity",{"_index":191,"title":{"classes/DonationEntity.html":{}},"body":{"controllers/CADonationsController.html":{},"classes/DonationEntity.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"coverage.html":{}}}],["donationrequestentity",{"_index":535,"title":{"classes/DonationRequestEntity.html":{}},"body":{"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"coverage.html":{}}}],["donationrequestentity})@apibearerauth()@roles(userrolesenum.applicant",{"_index":577,"title":{},"body":{"controllers/DonationRequestsController-1.html":{}}}],["donationrequestscontroller",{"_index":549,"title":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{}},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{},"coverage.html":{}}}],["donationrequestsmodule",{"_index":15,"title":{"modules/DonationRequestsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DonationRequestsModule.html":{},"modules.html":{},"overview.html":{}}}],["donationrequestsservice",{"_index":561,"title":{"injectables/DonationRequestsService.html":{}},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{},"injectables/DonationRequestsService.html":{},"coverage.html":{},"overview.html":{}}}],["donationrequeststatusenum",{"_index":566,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"injectables/DonationRequestsService.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["donationrequeststatusenum.approved",{"_index":573,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{}}}],["donationrequeststatusenum.outdated",{"_index":617,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["donations",{"_index":625,"title":{},"body":{"controllers/DonationsController.html":{},"miscellaneous/variables.html":{}}}],["donations.controller",{"_index":631,"title":{},"body":{"modules/DonationsModule.html":{}}}],["donations.service",{"_index":213,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/DonationsController.html":{},"modules/DonationsModule.html":{},"controllers/SADonationsController.html":{}}}],["donations/donations.module",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["donationscontroller",{"_index":618,"title":{"controllers/DonationsController.html":{}},"body":{"controllers/DonationsController.html":{},"modules/DonationsModule.html":{},"coverage.html":{}}}],["donationsmodule",{"_index":16,"title":{"modules/DonationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DonationsModule.html":{},"modules.html":{},"overview.html":{}}}],["donationsservice",{"_index":212,"title":{"injectables/DonationsService.html":{}},"body":{"controllers/CADonationsController.html":{},"controllers/DonationsController.html":{},"modules/DonationsModule.html":{},"injectables/DonationsService.html":{},"controllers/SADonationsController.html":{},"coverage.html":{},"overview.html":{}}}],["donationstatusesenum",{"_index":531,"title":{},"body":{"classes/DonationEntity.html":{},"injectables/DonationsService.html":{},"classes/UpdateDonationDto.html":{}}}],["donationstatusesenum.pending",{"_index":653,"title":{},"body":{"injectables/DonationsService.html":{}}}],["donationtypeenum",{"_index":470,"title":{},"body":{"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"classes/UpdateDonationRequestDto.html":{},"miscellaneous/enumerations.html":{}}}],["donationtypeenum})@isenum(donationtypeenum",{"_index":501,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["donor",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto",{"_index":193,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{}}}],["dto/ca.update",{"_index":789,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/create",{"_index":214,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController-2.html":{}}}],["dto/login",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/sa.create",{"_index":799,"title":{},"body":{"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["dto/sa.update",{"_index":800,"title":{},"body":{"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":230,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController-2.html":{}}}],["e2e",{"_index":950,"title":{},"body":{"index.html":{}}}],["each",{"_index":496,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["efficient",{"_index":926,"title":{},"body":{"index.html":{}}}],["employedcenterid",{"_index":723,"title":{},"body":{"classes/SACreateUserDto.html":{}}}],["enableshutdownhooks",{"_index":695,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":697,"title":{},"body":{"injectables/PrismaService.html":{}}}],["entiites/donation",{"_index":563,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{}}}],["entites/center.entity",{"_index":296,"title":{},"body":{"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{}}}],["entities/city.entity",{"_index":375,"title":{},"body":{"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{}}}],["entities/donation.entity",{"_index":220,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{}}}],["entities/user.entity",{"_index":787,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["enum",{"_index":509,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"classes/UpdateDonationDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{}}}],["enum/donation",{"_index":475,"title":{},"body":{"classes/CreateDonationDto.html":{}}}],["enum/user",{"_index":525,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SACreateUserDto.html":{},"controllers/UsersController.html":{}}}],["enumerations",{"_index":911,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["executioncontext",{"_index":117,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/IdInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"classes/CAUpdateUserDto.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"modules/CentersModule.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"modules/DonationsModule.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/SAUpdateUserDto.html":{},"classes/UpdateCenterDto.html":{},"classes/UpdateCityDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CentersModule.html":{},"modules/CitiesModule.html":{},"modules/DonationRequestsModule.html":{},"modules/DonationsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{}}}],["extends",{"_index":252,"title":{},"body":{"classes/CAUpdateUserDto.html":{},"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PrismaService.html":{},"classes/SAUpdateUserDto.html":{},"classes/UpdateCenterDto.html":{},"classes/UpdateCityDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{}}}],["extracttokenfromheader",{"_index":112,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":120,"title":{},"body":{"guards/AuthGuard.html":{}}}],["farg'ona",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fergana",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"classes/CAUpdateUserDto.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"modules/CentersModule.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"modules/DonationsModule.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/SAUpdateUserDto.html":{},"classes/UpdateCenterDto.html":{},"classes/UpdateCityDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findmany",{"_index":184,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{}}}],["findmany(@getuserpayload",{"_index":240,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{}}}],["findmany(userpayload",{"_index":194,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"controllers/SADonationsController.html":{}}}],["findmany(where",{"_index":347,"title":{},"body":{"injectables/CentersService.html":{},"injectables/CitiesService.html":{},"injectables/DonationRequestsService.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":185,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":298,"title":{},"body":{"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["findone(id",{"_index":198,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["findone(userpayload",{"_index":555,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"injectables/DonationsService.html":{}}}],["findone(where",{"_index":351,"title":{},"body":{"injectables/CentersService.html":{},"injectables/CitiesService.html":{},"injectables/DonationRequestsService.html":{},"injectables/UsersService.html":{}}}],["firstname",{"_index":483,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationRequestEntity.html":{},"classes/SACreateUserDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{}}}],["framework",{"_index":924,"title":{},"body":{"index.html":{}}}],["function",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":918,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":237,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["get(':id')@apiokresponse({type",{"_index":200,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["get('me",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('me')@useguards(authguard",{"_index":54,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@apiokresponse({type",{"_index":195,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["getme",{"_index":49,"title":{},"body":{"controllers/AuthController.html":{}}}],["getme(@getuserpayload",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["getme(userpayload",{"_index":51,"title":{},"body":{"controllers/AuthController.html":{}}}],["getrequest",{"_index":718,"title":{},"body":{"guards/RolesGuard.html":{}}}],["getting",{"_index":920,"title":{"index.html":{}},"body":{}}],["getuserpayload",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["groups",{"_index":484,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/DonationRequestEntity.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["grow",{"_index":957,"title":{},"body":{"index.html":{}}}],["guard",{"_index":108,"title":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":109,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["hash",{"_index":830,"title":{},"body":{"injectables/UsersService.html":{}}}],["hash(password",{"_index":839,"title":{},"body":{"injectables/UsersService.html":{}}}],["here",{"_index":968,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":975,"title":{},"body":{"index.html":{}}}],["id",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SADonationsController.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["identifier",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["idinterceptor",{"_index":662,"title":{"injectables/IdInterceptor.html":{}},"body":{"injectables/IdInterceptor.html":{},"coverage.html":{}}}],["implements",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CityEntity.html":{},"injectables/IdInterceptor.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"classes/CAUpdateUserDto.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"modules/CentersModule.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/CityEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"modules/DonationsModule.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginInputDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/SAUpdateUserDto.html":{},"classes/UpdateCenterDto.html":{},"classes/UpdateCityDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CentersModule.html":{},"modules/CitiesModule.html":{},"modules/DonationRequestsModule.html":{},"modules/DonationsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":46,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":698,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"classes/CAUpdateUserDto.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"modules/CentersModule.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"modules/DonationsModule.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/SAUpdateUserDto.html":{},"classes/UpdateCenterDto.html":{},"classes/UpdateCityDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":275,"title":{},"body":{"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UserPrivateEntity.html":{}}}],["injectable",{"_index":123,"title":{"injectables/AuthService.html":{},"injectables/CentersService.html":{},"injectables/CitiesService.html":{},"injectables/DonationRequestsService.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CentersService.html":{},"injectables/CitiesService.html":{},"injectables/DonationRequestsService.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CentersService.html":{},"injectables/CitiesService.html":{},"injectables/DonationRequestsService.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["input.dto",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["input.dto.ts",{"_index":682,"title":{},"body":{"classes/LoginInputDto.html":{},"coverage.html":{}}}],["input.dto.ts:10",{"_index":685,"title":{},"body":{"classes/LoginInputDto.html":{}}}],["input.dto.ts:6",{"_index":684,"title":{},"body":{"classes/LoginInputDto.html":{}}}],["installation",{"_index":936,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":938,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":664,"title":{},"body":{"injectables/IdInterceptor.html":{}}}],["intercept(context",{"_index":665,"title":{},"body":{"injectables/IdInterceptor.html":{}}}],["isarray",{"_index":196,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"classes/CreateDonationRequestDto.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"classes/UpdateDonationRequestDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["isdate",{"_index":503,"title":{},"body":{"classes/CreateDonationRequestDto.html":{}}}],["isenum",{"_index":474,"title":{},"body":{"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/SACreateUserDto.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["isenum(bloodgroupsenum",{"_index":510,"title":{},"body":{"classes/CreateDonationRequestDto.html":{}}}],["isenum(donationrequeststatusenum",{"_index":756,"title":{},"body":{"classes/UpdateDonationRequestDto.html":{}}}],["isenum(donationtypeenum",{"_index":471,"title":{},"body":{"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{}}}],["isenum(userrolesenum",{"_index":730,"title":{},"body":{"classes/SACreateUserDto.html":{}}}],["isenum(userrolespublicenum",{"_index":522,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isint",{"_index":451,"title":{},"body":{"classes/CreateCenterDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/SACreateUserDto.html":{}}}],["isint()@ispositive",{"_index":444,"title":{},"body":{"classes/CreateCenterDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["isint()@ispositive()@validateif(data",{"_index":724,"title":{},"body":{"classes/SACreateUserDto.html":{}}}],["isint()@min(1)@max(10",{"_index":488,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["isnotempty",{"_index":452,"title":{},"body":{"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginInputDto.html":{},"classes/SACreateUserDto.html":{}}}],["isnumber",{"_index":446,"title":{},"body":{"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{}}}],["isoptional",{"_index":506,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/SACreateUserDto.html":{}}}],["isoptional()@isdate",{"_index":490,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["isoptional()@isstring()@isnotempty()@maxlength(64",{"_index":499,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/SACreateUserDto.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["ispasswordcorrect",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["ispositive",{"_index":453,"title":{},"body":{"classes/CreateCenterDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/SACreateUserDto.html":{}}}],["isstring",{"_index":454,"title":{},"body":{"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginInputDto.html":{},"classes/SACreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":683,"title":{},"body":{"classes/LoginInputDto.html":{}}}],["isstring()@isnotempty()@length(8",{"_index":517,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SACreateUserDto.html":{}}}],["isstring()@isnotempty()@maxlength(128",{"_index":449,"title":{},"body":{"classes/CreateCenterDto.html":{}}}],["isstring()@isnotempty()@maxlength(64",{"_index":462,"title":{},"body":{"classes/CreateCityDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/SACreateUserDto.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["join",{"_index":964,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["jwtauthguard",{"_index":677,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":114,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["kamil",{"_index":972,"title":{},"body":{"index.html":{}}}],["karshi",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyboard",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["kokand",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["language",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lastname",{"_index":485,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationRequestEntity.html":{},"classes/SACreateUserDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{}}}],["latitude",{"_index":261,"title":{},"body":{"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CentersModule.html":{},"modules/CitiesModule.html":{},"modules/DonationRequestsModule.html":{},"modules/DonationsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":524,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SACreateUserDto.html":{}}}],["length(8",{"_index":526,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SACreateUserDto.html":{}}}],["license",{"_index":978,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":954,"title":{},"body":{"index.html":{}}}],["literal",{"_index":995,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["local",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":50,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginInputDto.html":{},"classes/SACreateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{}}}],["login(_",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["logininputdto",{"_index":65,"title":{"classes/LoginInputDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginInputDto.html":{},"coverage.html":{}}}],["loginoutputdto",{"_index":79,"title":{"classes/LoginOutputDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginOutputDto.html":{},"coverage.html":{}}}],["longitude",{"_index":262,"title":{},"body":{"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"miscellaneous/variables.html":{}}}],["lt",{"_index":616,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["main",{"_index":847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["marg'ilon",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["margilan",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["markoutdatedrequests",{"_index":597,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["matching",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"classes/CAUpdateUserDto.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"modules/CentersModule.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"modules/DonationsModule.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/SAUpdateUserDto.html":{},"classes/UpdateCenterDto.html":{},"classes/UpdateCityDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":504,"title":{},"body":{"classes/CreateDonationRequestDto.html":{}}}],["max(10",{"_index":508,"title":{},"body":{"classes/CreateDonationRequestDto.html":{}}}],["maxlength",{"_index":455,"title":{},"body":{"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/SACreateUserDto.html":{}}}],["maxlength(128",{"_index":457,"title":{},"body":{"classes/CreateCenterDto.html":{}}}],["maxlength(64",{"_index":464,"title":{},"body":{"classes/CreateCityDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/SACreateUserDto.html":{}}}],["message",{"_index":435,"title":{},"body":{"classes/CommonException.html":{}}}],["metadata",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":47,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":505,"title":{},"body":{"classes/CreateDonationRequestDto.html":{}}}],["min(1",{"_index":507,"title":{},"body":{"classes/CreateDonationRequestDto.html":{}}}],["miscellaneous",{"_index":910,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":953,"title":{},"body":{"index.html":{}}}],["mode",{"_index":943,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CentersModule.html":{},"modules/CitiesModule.html":{},"modules/DonationRequestsModule.html":{},"modules/DonationsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CentersModule.html":{},"modules/CitiesModule.html":{},"modules/DonationRequestsModule.html":{},"modules/DonationsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CentersModule.html":{},"modules/CitiesModule.html":{},"modules/DonationRequestsModule.html":{},"modules/DonationsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":967,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":973,"title":{},"body":{"index.html":{}}}],["namangan",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"classes/CityEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["name_language",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest",{"_index":932,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":977,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":670,"title":{},"body":{"injectables/IdInterceptor.html":{}}}],["nestjs/common",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"modules/CentersModule.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"modules/DonationsModule.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":710,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController-1.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":610,"title":{},"body":{"injectables/DonationRequestsService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"classes/CAUpdateUserDto.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"classes/CityEntity.html":{},"classes/CommonException.html":{},"classes/CreateDonationRequestDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"classes/SAUpdateUserDto.html":{},"classes/UpdateCenterDto.html":{},"classes/UpdateCityDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"dependencies.html":{}}}],["new",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/DonationRequestsController-1.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":666,"title":{},"body":{"injectables/IdInterceptor.html":{}}}],["next.handle",{"_index":676,"title":{},"body":{"injectables/IdInterceptor.html":{}}}],["node.js",{"_index":923,"title":{},"body":{"index.html":{}}}],["npm",{"_index":937,"title":{},"body":{"index.html":{}}}],["nukus",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":541,"title":{},"body":{"classes/DonationRequestEntity.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{}}}],["number",{"_index":199,"title":{},"body":{"controllers/CADonationsController.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["number(process.env.bcrypt_rounds",{"_index":840,"title":{},"body":{"injectables/UsersService.html":{}}}],["object.prototype.hasownproperty.call(req",{"_index":672,"title":{},"body":{"injectables/IdInterceptor.html":{}}}],["object.prototype.hasownproperty.call(req.params",{"_index":674,"title":{},"body":{"injectables/IdInterceptor.html":{}}}],["observable",{"_index":669,"title":{},"body":{"injectables/IdInterceptor.html":{}}}],["omit",{"_index":643,"title":{},"body":{"injectables/DonationsService.html":{}}}],["omittype",{"_index":249,"title":{},"body":{"classes/CAUpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{}}}],["omittype(updateuserdto",{"_index":253,"title":{},"body":{"classes/CAUpdateUserDto.html":{}}}],["omittype(userprivateentity",{"_index":772,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{}}}],["onmoduleinit",{"_index":696,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":955,"title":{},"body":{"index.html":{}}}],["optional",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"classes/CommonException.html":{},"classes/CreateDonationRequestDto.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/UpdateDonationRequestDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CentersModule.html":{},"modules/CitiesModule.html":{},"modules/DonationRequestsModule.html":{},"modules/DonationsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["output.dto",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["output.dto.ts",{"_index":686,"title":{},"body":{"classes/LoginOutputDto.html":{},"coverage.html":{}}}],["output.dto.ts:2",{"_index":687,"title":{},"body":{"classes/LoginOutputDto.html":{}}}],["overview",{"_index":982,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":870,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":210,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["param('id",{"_index":238,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["parameters",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"classes/CommonException.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":673,"title":{},"body":{"injectables/IdInterceptor.html":{}}}],["partialtype",{"_index":745,"title":{},"body":{"classes/SAUpdateUserDto.html":{},"classes/UpdateCenterDto.html":{},"classes/UpdateCityDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcenterdto",{"_index":749,"title":{},"body":{"classes/UpdateCenterDto.html":{}}}],["partialtype(createcitydto",{"_index":751,"title":{},"body":{"classes/UpdateCityDto.html":{}}}],["partialtype(createdonationdto",{"_index":754,"title":{},"body":{"classes/UpdateDonationDto.html":{}}}],["partialtype(createuserdto",{"_index":767,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(sacreateuserdto",{"_index":747,"title":{},"body":{"classes/SAUpdateUserDto.html":{}}}],["passport",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["passportmodule",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["password",{"_index":513,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginInputDto.html":{},"classes/SACreateUserDto.html":{},"injectables/UsersService.html":{}}}],["passwordhash",{"_index":771,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":211,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["patch(':id",{"_index":242,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["patch(':id')@apiokresponse({type",{"_index":207,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["patch(':id')@apiunauthorizedresponse({type",{"_index":308,"title":{},"body":{"controllers/CentersController-1.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{}}}],["patch(':id')@useguards(authguard)@apiokresponse({type",{"_index":809,"title":{},"body":{"controllers/UsersController-2.html":{}}}],["patronymic",{"_index":486,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationRequestEntity.html":{},"classes/SACreateUserDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{}}}],["payload",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/RolesGuard.html":{}}}],["payload.id",{"_index":719,"title":{},"body":{"guards/RolesGuard.html":{}}}],["payload.type",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"guards/RolesGuard.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{}}}],["payload.type.ts",{"_index":993,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["peer",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["pg",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["plasma",{"_index":916,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["platelets",{"_index":917,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["please",{"_index":965,"title":{},"body":{"index.html":{}}}],["post",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["post('login",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apicreatedresponse({type",{"_index":190,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["post()@apiunauthorizedresponse({type",{"_index":286,"title":{},"body":{"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/UsersController.html":{}}}],["prisma",{"_index":279,"title":{},"body":{"classes/CenterEntity.html":{},"injectables/CentersService.html":{},"injectables/CitiesService.html":{},"classes/CityEntity.html":{},"injectables/DonationRequestsService.html":{},"injectables/DonationsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["prisma.centercreateinput",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.centeruncheckedcreateinput",{"_index":342,"title":{},"body":{"injectables/CentersService.html":{}}}],["prisma.centerupdateinput",{"_index":353,"title":{},"body":{"injectables/CentersService.html":{}}}],["prisma.centerwhereinput",{"_index":348,"title":{},"body":{"injectables/CentersService.html":{}}}],["prisma.centerwhereuniqueinput",{"_index":345,"title":{},"body":{"injectables/CentersService.html":{}}}],["prisma.citycreateinput",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.cityuncheckedcreateinput",{"_index":409,"title":{},"body":{"injectables/CitiesService.html":{}}}],["prisma.cityupdateinput",{"_index":417,"title":{},"body":{"injectables/CitiesService.html":{}}}],["prisma.citywhereinput",{"_index":413,"title":{},"body":{"injectables/CitiesService.html":{}}}],["prisma.citywhereuniqueinput",{"_index":411,"title":{},"body":{"injectables/CitiesService.html":{}}}],["prisma.decimal",{"_index":269,"title":{},"body":{"classes/CenterEntity.html":{},"classes/CityEntity.html":{}}}],["prisma.donationrequestuncheckedcreateinput",{"_index":599,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["prisma.donationrequestupdateinput",{"_index":607,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["prisma.donationrequestwhereinput",{"_index":601,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["prisma.donationupdateinput",{"_index":650,"title":{},"body":{"injectables/DonationsService.html":{}}}],["prisma.donationwhereinput",{"_index":639,"title":{},"body":{"injectables/DonationsService.html":{}}}],["prisma.donationwhereuniqueinput",{"_index":646,"title":{},"body":{"injectables/DonationsService.html":{}}}],["prisma.service",{"_index":692,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.userwhereinput",{"_index":826,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userwhereuniqueinput",{"_index":824,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma/.../seed",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma/.../seed.ts",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":280,"title":{},"body":{"classes/CenterEntity.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"classes/CityEntity.html":{},"classes/CreateDonationRequestDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"injectables/DonationRequestsService.html":{},"injectables/DonationsService.html":{},"injectables/PrismaService.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/CentersModule.html":{},"modules/CitiesModule.html":{},"modules/DonationRequestsModule.html":{},"modules/DonationsModule.html":{},"modules/UsersModule.html":{}}}],["prisma/prisma.service",{"_index":419,"title":{},"body":{"injectables/CitiesService.html":{}}}],["prisma/seed.ts",{"_index":845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma/seeds/seed",{"_index":850,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prismaclient",{"_index":694,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":17,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CentersModule.html":{},"modules/CitiesModule.html":{},"modules/DonationRequestsModule.html":{},"modules/DonationsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":335,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/CentersService.html":{},"injectables/CitiesService.html":{},"injectables/DonationRequestsService.html":{},"injectables/DonationsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CentersService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationsService.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{}}}],["process.env.jwt_expiration",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_secret",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["production",{"_index":945,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":922,"title":{},"body":{"index.html":{}}}],["project",{"_index":956,"title":{},"body":{"index.html":{}}}],["promise",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/RolesGuard.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":257,"title":{"properties.html":{}},"body":{"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"classes/SACreateUserDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UserPrivateEntity.html":{},"properties.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CentersModule.html":{},"modules/CitiesModule.html":{},"modules/DonationRequestsModule.html":{},"modules/DonationsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":434,"title":{},"body":{"classes/CommonException.html":{}}}],["qarshi",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qo'qon",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":966,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"classes/CommonException.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":707,"title":{},"body":{"guards/RolesGuard.html":{}}}],["remove",{"_index":186,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["remove(@param('id",{"_index":324,"title":{},"body":{"controllers/CentersController-2.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/UsersController-1.html":{}}}],["remove(id",{"_index":317,"title":{},"body":{"controllers/CentersController-2.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/UsersController-1.html":{}}}],["remove(userpayload",{"_index":557,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/SADonationsController.html":{}}}],["repository",{"_index":935,"title":{},"body":{"index.html":{}}}],["req",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"injectables/IdInterceptor.html":{}}}],["req.params.id",{"_index":675,"title":{},"body":{"injectables/IdInterceptor.html":{}}}],["request",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{}}}],["request.dto",{"_index":565,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["request.dto.ts",{"_index":480,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/UpdateDonationRequestDto.html":{},"coverage.html":{}}}],["request.dto.ts:20",{"_index":492,"title":{},"body":{"classes/CreateDonationRequestDto.html":{}}}],["request.dto.ts:25",{"_index":498,"title":{},"body":{"classes/CreateDonationRequestDto.html":{}}}],["request.dto.ts:31",{"_index":500,"title":{},"body":{"classes/CreateDonationRequestDto.html":{}}}],["request.dto.ts:36",{"_index":489,"title":{},"body":{"classes/CreateDonationRequestDto.html":{}}}],["request.dto.ts:40",{"_index":491,"title":{},"body":{"classes/CreateDonationRequestDto.html":{}}}],["request.dto.ts:44",{"_index":487,"title":{},"body":{"classes/CreateDonationRequestDto.html":{}}}],["request.dto.ts:48",{"_index":502,"title":{},"body":{"classes/CreateDonationRequestDto.html":{}}}],["request.dto.ts:52",{"_index":497,"title":{},"body":{"classes/CreateDonationRequestDto.html":{}}}],["request.dto.ts:7",{"_index":757,"title":{},"body":{"classes/UpdateDonationRequestDto.html":{}}}],["request.entity",{"_index":564,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{}}}],["request.entity.ts",{"_index":537,"title":{},"body":{"classes/DonationRequestEntity.html":{},"coverage.html":{}}}],["request.entity.ts:10",{"_index":545,"title":{},"body":{"classes/DonationRequestEntity.html":{}}}],["request.entity.ts:12",{"_index":546,"title":{},"body":{"classes/DonationRequestEntity.html":{}}}],["request.entity.ts:15",{"_index":547,"title":{},"body":{"classes/DonationRequestEntity.html":{}}}],["request.entity.ts:18",{"_index":544,"title":{},"body":{"classes/DonationRequestEntity.html":{}}}],["request.entity.ts:20",{"_index":539,"title":{},"body":{"classes/DonationRequestEntity.html":{}}}],["request.entity.ts:22",{"_index":538,"title":{},"body":{"classes/DonationRequestEntity.html":{}}}],["request.entity.ts:24",{"_index":542,"title":{},"body":{"classes/DonationRequestEntity.html":{}}}],["request.entity.ts:8",{"_index":543,"title":{},"body":{"classes/DonationRequestEntity.html":{}}}],["request.headers.authorization?.split",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.userpayload",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{}}}],["requestid",{"_index":467,"title":{},"body":{"classes/CreateDonationDto.html":{},"classes/DonationEntity.html":{}}}],["requests",{"_index":567,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"miscellaneous/variables.html":{}}}],["requests.controller",{"_index":595,"title":{},"body":{"modules/DonationRequestsModule.html":{}}}],["requests.controller.ts",{"_index":551,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requests.controller.ts:108",{"_index":558,"title":{},"body":{"controllers/DonationRequestsController.html":{}}}],["requests.controller.ts:29",{"_index":585,"title":{},"body":{"controllers/DonationRequestsController-2.html":{}}}],["requests.controller.ts:41",{"_index":587,"title":{},"body":{"controllers/DonationRequestsController-2.html":{}}}],["requests.controller.ts:45",{"_index":553,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{}}}],["requests.controller.ts:47",{"_index":586,"title":{},"body":{"controllers/DonationRequestsController-2.html":{}}}],["requests.controller.ts:53",{"_index":589,"title":{},"body":{"controllers/DonationRequestsController-2.html":{}}}],["requests.controller.ts:57",{"_index":556,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{}}}],["requests.controller.ts:59",{"_index":588,"title":{},"body":{"controllers/DonationRequestsController-2.html":{}}}],["requests.controller.ts:72",{"_index":579,"title":{},"body":{"controllers/DonationRequestsController-1.html":{}}}],["requests.controller.ts:74",{"_index":554,"title":{},"body":{"controllers/DonationRequestsController.html":{}}}],["requests.controller.ts:80",{"_index":581,"title":{},"body":{"controllers/DonationRequestsController-1.html":{}}}],["requests.controller.ts:86",{"_index":580,"title":{},"body":{"controllers/DonationRequestsController-1.html":{}}}],["requests.controller.ts:87",{"_index":560,"title":{},"body":{"controllers/DonationRequestsController.html":{}}}],["requests.module",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["requests.module.ts",{"_index":594,"title":{},"body":{"modules/DonationRequestsModule.html":{}}}],["requests.service",{"_index":562,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{}}}],["requests.service.ts",{"_index":596,"title":{},"body":{"injectables/DonationRequestsService.html":{},"coverage.html":{}}}],["requests.service.ts:10",{"_index":600,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["requests.service.ts:14",{"_index":604,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["requests.service.ts:20",{"_index":603,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["requests.service.ts:26",{"_index":608,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["requests.service.ts:36",{"_index":602,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["requests.service.ts:41",{"_index":606,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["requests.service.ts:7",{"_index":598,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["requests/ca.donation",{"_index":550,"title":{},"body":{"controllers/DonationRequestsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requests/donation",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"controllers/DonationRequestsController-1.html":{},"modules/DonationRequestsModule.html":{},"injectables/DonationRequestsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requests/dto/create",{"_index":479,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"coverage.html":{}}}],["requests/dto/update",{"_index":755,"title":{},"body":{"classes/UpdateDonationRequestDto.html":{},"coverage.html":{}}}],["requests/entiites/donation",{"_index":536,"title":{},"body":{"classes/DonationRequestEntity.html":{},"coverage.html":{}}}],["requests/sa.donation",{"_index":584,"title":{},"body":{"controllers/DonationRequestsController-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requiredroles",{"_index":713,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":720,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reset",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CentersModule.html":{},"modules/CitiesModule.html":{},"modules/DonationRequestsModule.html":{},"modules/DonationsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"classes/CAUpdateUserDto.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"modules/CentersModule.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"modules/DonationsModule.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/SAUpdateUserDto.html":{},"classes/UpdateCenterDto.html":{},"classes/UpdateCityDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"classes/CAUpdateUserDto.html":{},"classes/CreateUserDto.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":222,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(userrolesenum.applicant",{"_index":582,"title":{},"body":{"controllers/DonationRequestsController-1.html":{}}}],["roles(userrolesenum.center_admin",{"_index":234,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CitiesController.html":{},"controllers/DonationRequestsController.html":{}}}],["roles(userrolesenum.donor",{"_index":626,"title":{},"body":{"controllers/DonationsController.html":{}}}],["roles(userrolesenum.system_admin",{"_index":322,"title":{},"body":{"controllers/CentersController-2.html":{},"controllers/CitiesController-2.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["roles.enum",{"_index":226,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"classes/CreateUserDto.html":{},"controllers/DonationsController.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{}}}],["roles.enum.ts",{"_index":867,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["roles_key",{"_index":711,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":227,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"guards/RolesGuard.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{}}}],["run",{"_index":940,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":671,"title":{},"body":{"injectables/IdInterceptor.html":{},"dependencies.html":{}}}],["sa.create",{"_index":746,"title":{},"body":{"classes/SAUpdateUserDto.html":{}}}],["sa/centers",{"_index":321,"title":{},"body":{"controllers/CentersController-2.html":{},"miscellaneous/variables.html":{}}}],["sa/cities",{"_index":396,"title":{},"body":{"controllers/CitiesController-2.html":{},"miscellaneous/variables.html":{}}}],["sa/donations",{"_index":741,"title":{},"body":{"controllers/SADonationsController.html":{},"miscellaneous/variables.html":{}}}],["sa/users",{"_index":801,"title":{},"body":{"controllers/UsersController-1.html":{},"miscellaneous/variables.html":{}}}],["sacreateuserdto",{"_index":721,"title":{"classes/SACreateUserDto.html":{}},"body":{"classes/SACreateUserDto.html":{},"classes/SAUpdateUserDto.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["sadonationscontroller",{"_index":734,"title":{"controllers/SADonationsController.html":{}},"body":{"controllers/SADonationsController.html":{},"coverage.html":{}}}],["samarkand",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["samarqand",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saupdateuserdto",{"_index":743,"title":{"classes/SAUpdateUserDto.html":{}},"body":{"classes/SAUpdateUserDto.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["scalable",{"_index":927,"title":{},"body":{"index.html":{}}}],["secret",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["seedcenters",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seedcities",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":928,"title":{},"body":{"index.html":{}}}],["setmetadata(roles_key",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":929,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"classes/CAUpdateUserDto.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"modules/CentersModule.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"modules/CitiesModule.html":{},"injectables/CitiesService.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"modules/DonationsModule.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/SAUpdateUserDto.html":{},"classes/UpdateCenterDto.html":{},"classes/UpdateCityDto.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":959,"title":{},"body":{"index.html":{}}}],["src/.../auth.controller.ts",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ca.centers.controller.ts",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ca.cities.controller.ts",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ca.donation",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ca.donations.controller.ts",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ca.users.controller.ts",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../centers.controller.ts",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cities.controller.ts",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../donation",{"_index":912,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../donations.controller.ts",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt",{"_index":992,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":919,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.decorator.ts",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sa.centers.controller.ts",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sa.cities.controller.ts",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sa.donation",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sa.donations.controller.ts",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sa.users.controller.ts",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":994,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../users.controller.ts",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":45,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.controller.ts:29",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":632,"title":{},"body":{"modules/DonationsModule.html":{}}}],["src/auth/auth.module.ts",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:16",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorators/roles.decorator",{"_index":223,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["src/auth/decorators/roles.decorator.ts",{"_index":854,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/login",{"_index":681,"title":{},"body":{"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard",{"_index":221,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{}}}],["src/auth/guards/auth.guard.ts",{"_index":110,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard.ts:11",{"_index":115,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/guards/auth.guard.ts:14",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/guards/auth.guard.ts:31",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/guards/jwt",{"_index":678,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard",{"_index":228,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":705,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:15",{"_index":709,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:9",{"_index":708,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/types/jwt",{"_index":229,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{},"miscellaneous/typealiases.html":{}}}],["src/centers/ca.centers.controller.ts",{"_index":285,"title":{},"body":{"controllers/CentersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/centers/ca.centers.controller.ts:42",{"_index":287,"title":{},"body":{"controllers/CentersController.html":{}}}],["src/centers/ca.centers.controller.ts:48",{"_index":289,"title":{},"body":{"controllers/CentersController.html":{}}}],["src/centers/ca.centers.controller.ts:54",{"_index":288,"title":{},"body":{"controllers/CentersController.html":{}}}],["src/centers/ca.centers.controller.ts:60",{"_index":292,"title":{},"body":{"controllers/CentersController.html":{}}}],["src/centers/ca.centers.controller.ts:70",{"_index":290,"title":{},"body":{"controllers/CentersController.html":{}}}],["src/centers/centers.controller.ts",{"_index":303,"title":{},"body":{"controllers/CentersController-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/centers/centers.controller.ts:28",{"_index":304,"title":{},"body":{"controllers/CentersController-1.html":{}}}],["src/centers/centers.controller.ts:34",{"_index":306,"title":{},"body":{"controllers/CentersController-1.html":{}}}],["src/centers/centers.controller.ts:40",{"_index":305,"title":{},"body":{"controllers/CentersController-1.html":{}}}],["src/centers/centers.controller.ts:46",{"_index":309,"title":{},"body":{"controllers/CentersController-1.html":{}}}],["src/centers/centers.controller.ts:52",{"_index":307,"title":{},"body":{"controllers/CentersController-1.html":{}}}],["src/centers/centers.module.ts",{"_index":330,"title":{},"body":{"modules/CentersModule.html":{}}}],["src/centers/centers.service.ts",{"_index":332,"title":{},"body":{"injectables/CentersService.html":{},"coverage.html":{}}}],["src/centers/centers.service.ts:14",{"_index":343,"title":{},"body":{"injectables/CentersService.html":{}}}],["src/centers/centers.service.ts:18",{"_index":352,"title":{},"body":{"injectables/CentersService.html":{}}}],["src/centers/centers.service.ts:24",{"_index":349,"title":{},"body":{"injectables/CentersService.html":{}}}],["src/centers/centers.service.ts:28",{"_index":354,"title":{},"body":{"injectables/CentersService.html":{}}}],["src/centers/centers.service.ts:40",{"_index":346,"title":{},"body":{"injectables/CentersService.html":{}}}],["src/centers/centers.service.ts:44",{"_index":339,"title":{},"body":{"injectables/CentersService.html":{}}}],["src/centers/centers.service.ts:8",{"_index":336,"title":{},"body":{"injectables/CentersService.html":{}}}],["src/centers/dto/create",{"_index":442,"title":{},"body":{"classes/CreateCenterDto.html":{},"coverage.html":{}}}],["src/centers/dto/update",{"_index":748,"title":{},"body":{"classes/UpdateCenterDto.html":{},"coverage.html":{}}}],["src/centers/entites/center.entity.ts",{"_index":255,"title":{},"body":{"classes/CenterEntity.html":{},"coverage.html":{}}}],["src/centers/entites/center.entity.ts:11",{"_index":268,"title":{},"body":{"classes/CenterEntity.html":{}}}],["src/centers/entites/center.entity.ts:13",{"_index":267,"title":{},"body":{"classes/CenterEntity.html":{}}}],["src/centers/entites/center.entity.ts:16",{"_index":271,"title":{},"body":{"classes/CenterEntity.html":{}}}],["src/centers/entites/center.entity.ts:19",{"_index":272,"title":{},"body":{"classes/CenterEntity.html":{}}}],["src/centers/entites/center.entity.ts:7",{"_index":273,"title":{},"body":{"classes/CenterEntity.html":{}}}],["src/centers/entites/center.entity.ts:9",{"_index":265,"title":{},"body":{"classes/CenterEntity.html":{}}}],["src/centers/sa.centers.controller.ts",{"_index":312,"title":{},"body":{"controllers/CentersController-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/centers/sa.centers.controller.ts:41",{"_index":314,"title":{},"body":{"controllers/CentersController-2.html":{}}}],["src/centers/sa.centers.controller.ts:47",{"_index":316,"title":{},"body":{"controllers/CentersController-2.html":{}}}],["src/centers/sa.centers.controller.ts:53",{"_index":315,"title":{},"body":{"controllers/CentersController-2.html":{}}}],["src/centers/sa.centers.controller.ts:59",{"_index":320,"title":{},"body":{"controllers/CentersController-2.html":{}}}],["src/centers/sa.centers.controller.ts:69",{"_index":319,"title":{},"body":{"controllers/CentersController-2.html":{}}}],["src/cities/ca.cities.controller.ts",{"_index":367,"title":{},"body":{"controllers/CitiesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cities/ca.cities.controller.ts:37",{"_index":368,"title":{},"body":{"controllers/CitiesController.html":{}}}],["src/cities/ca.cities.controller.ts:43",{"_index":370,"title":{},"body":{"controllers/CitiesController.html":{}}}],["src/cities/ca.cities.controller.ts:49",{"_index":369,"title":{},"body":{"controllers/CitiesController.html":{}}}],["src/cities/ca.cities.controller.ts:55",{"_index":372,"title":{},"body":{"controllers/CitiesController.html":{}}}],["src/cities/ca.cities.controller.ts:61",{"_index":371,"title":{},"body":{"controllers/CitiesController.html":{}}}],["src/cities/cities.controller.ts",{"_index":379,"title":{},"body":{"controllers/CitiesController-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cities/cities.controller.ts:27",{"_index":380,"title":{},"body":{"controllers/CitiesController-1.html":{}}}],["src/cities/cities.controller.ts:33",{"_index":382,"title":{},"body":{"controllers/CitiesController-1.html":{}}}],["src/cities/cities.controller.ts:39",{"_index":381,"title":{},"body":{"controllers/CitiesController-1.html":{}}}],["src/cities/cities.controller.ts:45",{"_index":384,"title":{},"body":{"controllers/CitiesController-1.html":{}}}],["src/cities/cities.controller.ts:51",{"_index":383,"title":{},"body":{"controllers/CitiesController-1.html":{}}}],["src/cities/cities.module.ts",{"_index":405,"title":{},"body":{"modules/CitiesModule.html":{}}}],["src/cities/cities.service.ts",{"_index":407,"title":{},"body":{"injectables/CitiesService.html":{},"coverage.html":{}}}],["src/cities/cities.service.ts:13",{"_index":415,"title":{},"body":{"injectables/CitiesService.html":{}}}],["src/cities/cities.service.ts:17",{"_index":414,"title":{},"body":{"injectables/CitiesService.html":{}}}],["src/cities/cities.service.ts:21",{"_index":418,"title":{},"body":{"injectables/CitiesService.html":{}}}],["src/cities/cities.service.ts:28",{"_index":412,"title":{},"body":{"injectables/CitiesService.html":{}}}],["src/cities/cities.service.ts:6",{"_index":408,"title":{},"body":{"injectables/CitiesService.html":{}}}],["src/cities/cities.service.ts:9",{"_index":410,"title":{},"body":{"injectables/CitiesService.html":{}}}],["src/cities/dto/create",{"_index":458,"title":{},"body":{"classes/CreateCityDto.html":{},"coverage.html":{}}}],["src/cities/dto/update",{"_index":750,"title":{},"body":{"classes/UpdateCityDto.html":{},"coverage.html":{}}}],["src/cities/entities/city.entity.ts",{"_index":425,"title":{},"body":{"classes/CityEntity.html":{},"coverage.html":{}}}],["src/cities/entities/city.entity.ts:11",{"_index":426,"title":{},"body":{"classes/CityEntity.html":{}}}],["src/cities/entities/city.entity.ts:14",{"_index":427,"title":{},"body":{"classes/CityEntity.html":{}}}],["src/cities/entities/city.entity.ts:8",{"_index":428,"title":{},"body":{"classes/CityEntity.html":{}}}],["src/cities/sa.cities.controller.ts",{"_index":386,"title":{},"body":{"controllers/CitiesController-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cities/sa.cities.controller.ts:38",{"_index":388,"title":{},"body":{"controllers/CitiesController-2.html":{}}}],["src/cities/sa.cities.controller.ts:44",{"_index":390,"title":{},"body":{"controllers/CitiesController-2.html":{}}}],["src/cities/sa.cities.controller.ts:50",{"_index":389,"title":{},"body":{"controllers/CitiesController-2.html":{}}}],["src/cities/sa.cities.controller.ts:56",{"_index":394,"title":{},"body":{"controllers/CitiesController-2.html":{}}}],["src/cities/sa.cities.controller.ts:62",{"_index":391,"title":{},"body":{"controllers/CitiesController-2.html":{}}}],["src/common/entities/common.entity.ts",{"_index":429,"title":{},"body":{"classes/CommonEntity.html":{},"coverage.html":{}}}],["src/common/entities/common.entity.ts:2",{"_index":431,"title":{},"body":{"classes/CommonEntity.html":{}}}],["src/common/entities/common.entity.ts:4",{"_index":430,"title":{},"body":{"classes/CommonEntity.html":{}}}],["src/common/entities/common.entity.ts:6",{"_index":432,"title":{},"body":{"classes/CommonEntity.html":{}}}],["src/donation",{"_index":478,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"modules/DonationRequestsModule.html":{},"injectables/DonationRequestsService.html":{},"classes/UpdateDonationRequestDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/donations/ca.donations.controller.ts",{"_index":182,"title":{},"body":{"controllers/CADonationsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/donations/ca.donations.controller.ts:44",{"_index":192,"title":{},"body":{"controllers/CADonationsController.html":{}}}],["src/donations/ca.donations.controller.ts:50",{"_index":201,"title":{},"body":{"controllers/CADonationsController.html":{}}}],["src/donations/ca.donations.controller.ts:59",{"_index":197,"title":{},"body":{"controllers/CADonationsController.html":{}}}],["src/donations/ca.donations.controller.ts:65",{"_index":208,"title":{},"body":{"controllers/CADonationsController.html":{}}}],["src/donations/ca.donations.controller.ts:75",{"_index":204,"title":{},"body":{"controllers/CADonationsController.html":{}}}],["src/donations/donations.controller.ts",{"_index":619,"title":{},"body":{"controllers/DonationsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/donations/donations.controller.ts:43",{"_index":620,"title":{},"body":{"controllers/DonationsController.html":{}}}],["src/donations/donations.controller.ts:49",{"_index":622,"title":{},"body":{"controllers/DonationsController.html":{}}}],["src/donations/donations.controller.ts:58",{"_index":621,"title":{},"body":{"controllers/DonationsController.html":{}}}],["src/donations/donations.controller.ts:64",{"_index":624,"title":{},"body":{"controllers/DonationsController.html":{}}}],["src/donations/donations.controller.ts:70",{"_index":623,"title":{},"body":{"controllers/DonationsController.html":{}}}],["src/donations/donations.module.ts",{"_index":630,"title":{},"body":{"modules/DonationsModule.html":{}}}],["src/donations/donations.service.ts",{"_index":635,"title":{},"body":{"injectables/DonationsService.html":{},"coverage.html":{}}}],["src/donations/donations.service.ts:14",{"_index":644,"title":{},"body":{"injectables/DonationsService.html":{}}}],["src/donations/donations.service.ts:20",{"_index":649,"title":{},"body":{"injectables/DonationsService.html":{}}}],["src/donations/donations.service.ts:30",{"_index":648,"title":{},"body":{"injectables/DonationsService.html":{}}}],["src/donations/donations.service.ts:38",{"_index":651,"title":{},"body":{"injectables/DonationsService.html":{}}}],["src/donations/donations.service.ts:50",{"_index":647,"title":{},"body":{"injectables/DonationsService.html":{}}}],["src/donations/donations.service.ts:60",{"_index":640,"title":{},"body":{"injectables/DonationsService.html":{}}}],["src/donations/donations.service.ts:8",{"_index":637,"title":{},"body":{"injectables/DonationsService.html":{}}}],["src/donations/dto/create",{"_index":465,"title":{},"body":{"classes/CreateDonationDto.html":{},"coverage.html":{}}}],["src/donations/dto/update",{"_index":752,"title":{},"body":{"classes/UpdateDonationDto.html":{},"coverage.html":{}}}],["src/donations/entities/donation.entity.ts",{"_index":527,"title":{},"body":{"classes/DonationEntity.html":{},"coverage.html":{}}}],["src/donations/entities/donation.entity.ts:12",{"_index":532,"title":{},"body":{"classes/DonationEntity.html":{}}}],["src/donations/entities/donation.entity.ts:14",{"_index":534,"title":{},"body":{"classes/DonationEntity.html":{}}}],["src/donations/entities/donation.entity.ts:16",{"_index":529,"title":{},"body":{"classes/DonationEntity.html":{}}}],["src/donations/entities/donation.entity.ts:18",{"_index":530,"title":{},"body":{"classes/DonationEntity.html":{}}}],["src/donations/entities/donation.entity.ts:9",{"_index":533,"title":{},"body":{"classes/DonationEntity.html":{}}}],["src/donations/enum/donation",{"_index":914,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/donations/sa.donations.controller.ts",{"_index":735,"title":{},"body":{"controllers/SADonationsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/donations/sa.donations.controller.ts:43",{"_index":736,"title":{},"body":{"controllers/SADonationsController.html":{}}}],["src/donations/sa.donations.controller.ts:49",{"_index":738,"title":{},"body":{"controllers/SADonationsController.html":{}}}],["src/donations/sa.donations.controller.ts:58",{"_index":737,"title":{},"body":{"controllers/SADonationsController.html":{}}}],["src/donations/sa.donations.controller.ts:64",{"_index":740,"title":{},"body":{"controllers/SADonationsController.html":{}}}],["src/donations/sa.donations.controller.ts:74",{"_index":739,"title":{},"body":{"controllers/SADonationsController.html":{}}}],["src/main.ts",{"_index":864,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":691,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":355,"title":{},"body":{"injectables/CentersService.html":{},"injectables/DonationRequestsService.html":{},"injectables/DonationsService.html":{},"injectables/UsersService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":693,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":699,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":701,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/users/ca.users.controller.ts",{"_index":780,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/ca.users.controller.ts:42",{"_index":781,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/ca.users.controller.ts:48",{"_index":783,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/ca.users.controller.ts:54",{"_index":782,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/ca.users.controller.ts:60",{"_index":785,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/ca.users.controller.ts:73",{"_index":784,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/decorators/get",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/dto/ca.update",{"_index":247,"title":{},"body":{"classes/CAUpdateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/create",{"_index":512,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/sa.create",{"_index":722,"title":{},"body":{"classes/SACreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/sa.update",{"_index":744,"title":{},"body":{"classes/SAUpdateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":766,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":769,"title":{},"body":{"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:10",{"_index":776,"title":{},"body":{"classes/UserPrivateEntity.html":{}}}],["src/users/entities/user.entity.ts:12",{"_index":773,"title":{},"body":{"classes/UserPrivateEntity.html":{}}}],["src/users/entities/user.entity.ts:14",{"_index":774,"title":{},"body":{"classes/UserPrivateEntity.html":{}}}],["src/users/entities/user.entity.ts:16",{"_index":777,"title":{},"body":{"classes/UserPrivateEntity.html":{}}}],["src/users/entities/user.entity.ts:19",{"_index":778,"title":{},"body":{"classes/UserPrivateEntity.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":775,"title":{},"body":{"classes/UserPrivateEntity.html":{}}}],["src/users/enum/user",{"_index":225,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/DonationsController.html":{},"guards/RolesGuard.html":{},"controllers/SADonationsController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/sa.users.controller.ts",{"_index":793,"title":{},"body":{"controllers/UsersController-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/sa.users.controller.ts:39",{"_index":794,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["src/users/sa.users.controller.ts:45",{"_index":796,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["src/users/sa.users.controller.ts:51",{"_index":795,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["src/users/sa.users.controller.ts:57",{"_index":798,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["src/users/sa.users.controller.ts:66",{"_index":797,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["src/users/users.controller.ts",{"_index":804,"title":{},"body":{"controllers/UsersController-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts:38",{"_index":805,"title":{},"body":{"controllers/UsersController-2.html":{}}}],["src/users/users.controller.ts:44",{"_index":807,"title":{},"body":{"controllers/UsersController-2.html":{}}}],["src/users/users.controller.ts:50",{"_index":806,"title":{},"body":{"controllers/UsersController-2.html":{}}}],["src/users/users.controller.ts:57",{"_index":810,"title":{},"body":{"controllers/UsersController-2.html":{}}}],["src/users/users.controller.ts:70",{"_index":808,"title":{},"body":{"controllers/UsersController-2.html":{}}}],["src/users/users.module",{"_index":633,"title":{},"body":{"modules/DonationsModule.html":{}}}],["src/users/users.module.ts",{"_index":816,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CentersService.html":{},"controllers/DonationRequestsController.html":{},"injectables/DonationsService.html":{},"guards/RolesGuard.html":{}}}],["src/users/users.service.ts",{"_index":818,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:12",{"_index":823,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:20",{"_index":828,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:26",{"_index":827,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:30",{"_index":829,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":825,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:48",{"_index":822,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":820,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/common.exception",{"_index":231,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{}}}],["src/utils/common.exception.ts",{"_index":433,"title":{},"body":{"classes/CommonException.html":{},"coverage.html":{}}}],["src/utils/common.exception.ts:5",{"_index":439,"title":{},"body":{"classes/CommonException.html":{}}}],["src/utils/common.exception.ts:8",{"_index":438,"title":{},"body":{"classes/CommonException.html":{}}}],["src/utils/interceptors/id.interceptor.ts",{"_index":663,"title":{},"body":{"injectables/IdInterceptor.html":{},"coverage.html":{}}}],["src/utils/interceptors/id.interceptor.ts:11",{"_index":668,"title":{},"body":{"injectables/IdInterceptor.html":{}}}],["start",{"_index":941,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":944,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":946,"title":{},"body":{"index.html":{}}}],["started",{"_index":921,"title":{"index.html":{}},"body":{}}],["starter",{"_index":934,"title":{},"body":{"index.html":{}}}],["statements",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":528,"title":{},"body":{"classes/DonationEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"injectables/DonationRequestsService.html":{},"injectables/DonationsService.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["statuscode",{"_index":436,"title":{},"body":{"classes/CommonException.html":{}}}],["stay",{"_index":969,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["string",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/CADonationsController.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"classes/CityEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":960,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":980,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["switchtohttp",{"_index":717,"title":{},"body":{"guards/RolesGuard.html":{}}}],["system_admin",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["tashkent",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["telegram",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["test",{"_index":949,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":952,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":951,"title":{},"body":{"index.html":{}}}],["tests",{"_index":948,"title":{},"body":{"index.html":{}}}],["text",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thanks",{"_index":958,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":702,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":703,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this._checkcenteradminattachment(userpayload.id",{"_index":361,"title":{},"body":{"injectables/CentersService.html":{}}}],["this._filterdonationsaccess(userpayload",{"_index":654,"title":{},"body":{"injectables/DonationsService.html":{}}}],["this._hashpassword(data.password",{"_index":836,"title":{},"body":{"injectables/UsersService.html":{}}}],["this._hashpassword(password",{"_index":831,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.authservice.login(req.body",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.centersservice.create(dto",{"_index":323,"title":{},"body":{"controllers/CentersController-2.html":{}}}],["this.centersservice.delete",{"_index":325,"title":{},"body":{"controllers/CentersController-2.html":{}}}],["this.centersservice.findmany",{"_index":300,"title":{},"body":{"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{}}}],["this.centersservice.findone",{"_index":299,"title":{},"body":{"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{}}}],["this.centersservice.update(userpayload",{"_index":301,"title":{},"body":{"controllers/CentersController.html":{},"controllers/CentersController-2.html":{}}}],["this.citiesservice.create(dto",{"_index":397,"title":{},"body":{"controllers/CitiesController-2.html":{}}}],["this.citiesservice.delete",{"_index":400,"title":{},"body":{"controllers/CitiesController-2.html":{}}}],["this.citiesservice.findmany",{"_index":378,"title":{},"body":{"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{}}}],["this.citiesservice.findone",{"_index":377,"title":{},"body":{"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{}}}],["this.citiesservice.update",{"_index":399,"title":{},"body":{"controllers/CitiesController-2.html":{}}}],["this.donationrequestsservice.create",{"_index":569,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{}}}],["this.donationrequestsservice.delete",{"_index":576,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-2.html":{}}}],["this.donationrequestsservice.findmany",{"_index":574,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{}}}],["this.donationrequestsservice.findone",{"_index":572,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{}}}],["this.donationrequestsservice.update",{"_index":575,"title":{},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-2.html":{}}}],["this.donationsservice.create(dto",{"_index":236,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{}}}],["this.donationsservice.delete(userpayload",{"_index":742,"title":{},"body":{"controllers/SADonationsController.html":{}}}],["this.donationsservice.findmany(userpayload",{"_index":241,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{}}}],["this.donationsservice.findone(userpayload",{"_index":239,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{}}}],["this.donationsservice.update(userpayload",{"_index":243,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/SADonationsController.html":{}}}],["this.extracttokenfromheader(request",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.jwtservice.signasync(payload",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.message",{"_index":441,"title":{},"body":{"classes/CommonException.html":{}}}],["this.prisma.center.create",{"_index":356,"title":{},"body":{"injectables/CentersService.html":{}}}],["this.prisma.center.delete",{"_index":364,"title":{},"body":{"injectables/CentersService.html":{}}}],["this.prisma.center.findmany",{"_index":358,"title":{},"body":{"injectables/CentersService.html":{}}}],["this.prisma.center.finduniqueorthrow",{"_index":357,"title":{},"body":{"injectables/CentersService.html":{}}}],["this.prisma.center.update",{"_index":363,"title":{},"body":{"injectables/CentersService.html":{}}}],["this.prisma.city.create",{"_index":420,"title":{},"body":{"injectables/CitiesService.html":{}}}],["this.prisma.city.delete",{"_index":424,"title":{},"body":{"injectables/CitiesService.html":{}}}],["this.prisma.city.findmany",{"_index":422,"title":{},"body":{"injectables/CitiesService.html":{}}}],["this.prisma.city.finduniqueorthrow",{"_index":421,"title":{},"body":{"injectables/CitiesService.html":{}}}],["this.prisma.city.update",{"_index":423,"title":{},"body":{"injectables/CitiesService.html":{}}}],["this.prisma.donation.create",{"_index":652,"title":{},"body":{"injectables/DonationsService.html":{}}}],["this.prisma.donation.delete",{"_index":659,"title":{},"body":{"injectables/DonationsService.html":{}}}],["this.prisma.donation.findfirstorthrow",{"_index":655,"title":{},"body":{"injectables/DonationsService.html":{}}}],["this.prisma.donation.findmany",{"_index":656,"title":{},"body":{"injectables/DonationsService.html":{}}}],["this.prisma.donation.update",{"_index":657,"title":{},"body":{"injectables/DonationsService.html":{}}}],["this.prisma.donationrequest.create",{"_index":611,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["this.prisma.donationrequest.deletemany",{"_index":615,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["this.prisma.donationrequest.findfirstorthrow",{"_index":612,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["this.prisma.donationrequest.findmany",{"_index":613,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["this.prisma.donationrequest.updatemany",{"_index":614,"title":{},"body":{"injectables/DonationRequestsService.html":{}}}],["this.prisma.user.create",{"_index":832,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":838,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":834,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.finduniqueorthrow",{"_index":833,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":837,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.reflector.getallandoverride",{"_index":714,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.statuscode",{"_index":440,"title":{},"body":{"classes/CommonException.html":{}}}],["this.usersservice.create(dto",{"_index":802,"title":{},"body":{"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["this.usersservice.delete",{"_index":803,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["this.usersservice.findmany",{"_index":791,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["this.usersservice.findone",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CentersService.html":{},"injectables/DonationsService.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["this.usersservice.update",{"_index":792,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["this.usersservicets.findone",{"_index":571,"title":{},"body":{"controllers/DonationRequestsController.html":{}}}],["throw",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{}}}],["token",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{}}}],["toshkent",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":970,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"classes/CreateDonationRequestDto.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"guards/RolesGuard.html":{},"controllers/SADonationsController.html":{},"classes/UpdateDonationRequestDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["true})@isenum(bloodgroupsenum",{"_index":495,"title":{},"body":{"classes/CreateDonationRequestDto.html":{},"classes/UpdateDonationRequestDto.html":{}}}],["try",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{}}}],["twitter",{"_index":976,"title":{},"body":{"index.html":{}}}],["type",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"classes/CenterEntity.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/CommonException.html":{},"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"injectables/IdInterceptor.html":{},"classes/LoginInputDto.html":{},"classes/LoginOutputDto.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/UpdateDonationDto.html":{},"classes/UpdateDonationRequestDto.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":476,"title":{},"body":{"classes/CreateDonationDto.html":{}}}],["type.enum.ts",{"_index":913,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":990,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/bcryptjs",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["types/jwt",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/RolesGuard.html":{}}}],["types/passport",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":933,"title":{},"body":{"index.html":{}}}],["ui",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{}}}],["undefined",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UsersService.html":{}}}],["unit",{"_index":947,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":989,"title":{},"body":{"properties.html":{}}}],["update",{"_index":187,"title":{},"body":{"controllers/CADonationsController.html":{},"classes/CAUpdateUserDto.html":{},"controllers/CentersController.html":{},"controllers/CentersController-1.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-1.html":{},"controllers/CitiesController-2.html":{},"injectables/CitiesService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationRequestsService.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":398,"title":{},"body":{"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController-2.html":{}}}],["update(id",{"_index":392,"title":{},"body":{"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/UsersController-1.html":{}}}],["update(userpayload",{"_index":205,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/DonationRequestsController.html":{},"injectables/DonationsService.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{}}}],["update(where",{"_index":416,"title":{},"body":{"injectables/CitiesService.html":{},"injectables/DonationRequestsService.html":{},"injectables/UsersService.html":{}}}],["updatecenterdto",{"_index":291,"title":{"classes/UpdateCenterDto.html":{}},"body":{"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"classes/UpdateCenterDto.html":{},"coverage.html":{}}}],["updatecitydto",{"_index":393,"title":{"classes/UpdateCityDto.html":{}},"body":{"controllers/CitiesController-2.html":{},"classes/UpdateCityDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":264,"title":{},"body":{"classes/CenterEntity.html":{},"classes/CityEntity.html":{},"classes/CommonEntity.html":{},"classes/DonationEntity.html":{},"classes/DonationRequestEntity.html":{},"classes/UserPrivateEntity.html":{}}}],["updatedonationdto",{"_index":206,"title":{"classes/UpdateDonationDto.html":{}},"body":{"controllers/CADonationsController.html":{},"controllers/SADonationsController.html":{},"classes/UpdateDonationDto.html":{},"coverage.html":{}}}],["updatedonationrequestdto",{"_index":559,"title":{"classes/UpdateDonationRequestDto.html":{}},"body":{"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-2.html":{},"classes/UpdateDonationRequestDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":250,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/CAUpdateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController-2.html":{},"coverage.html":{}}}],["useguards",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["useguards(authguard",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}}}],["useguards(rolesguard",{"_index":233,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["user",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CentersService.html":{},"controllers/DonationRequestsController.html":{},"injectables/DonationsService.html":{},"guards/RolesGuard.html":{}}}],["user.decorator",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{}}}],["user.decorator.ts",{"_index":866,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":251,"title":{},"body":{"classes/CAUpdateUserDto.html":{},"classes/SAUpdateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":248,"title":{},"body":{"classes/CAUpdateUserDto.html":{},"classes/CreateUserDto.html":{},"classes/SACreateUserDto.html":{},"classes/SAUpdateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:15",{"_index":516,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":728,"title":{},"body":{"classes/SACreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":519,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:23",{"_index":729,"title":{},"body":{"classes/SACreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":514,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":726,"title":{},"body":{"classes/SACreateUserDto.html":{}}}],["user.dto.ts:30",{"_index":515,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:33",{"_index":727,"title":{},"body":{"classes/SACreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":520,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:39",{"_index":523,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SACreateUserDto.html":{}}}],["user.dto.ts:42",{"_index":731,"title":{},"body":{"classes/SACreateUserDto.html":{}}}],["user.dto.ts:49",{"_index":725,"title":{},"body":{"classes/SACreateUserDto.html":{}}}],["user.employedcenterid",{"_index":365,"title":{},"body":{"injectables/CentersService.html":{},"controllers/DonationRequestsController.html":{},"injectables/DonationsService.html":{}}}],["user.id",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.login",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.passwordhash",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"guards/RolesGuard.html":{}}}],["userentity",{"_index":768,"title":{"classes/UserEntity.html":{}},"body":{"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"coverage.html":{}}}],["userid",{"_index":340,"title":{},"body":{"injectables/CentersService.html":{},"classes/CreateDonationDto.html":{},"classes/DonationEntity.html":{}}}],["userpayload",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"guards/RolesGuard.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{},"miscellaneous/variables.html":{}}}],["userpayload.id",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"injectables/DonationsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{}}}],["userpayload.role",{"_index":359,"title":{},"body":{"injectables/CentersService.html":{},"injectables/DonationsService.html":{}}}],["userpayloadtype",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationRequestsController-2.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"guards/RolesGuard.html":{},"controllers/SADonationsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-2.html":{},"miscellaneous/typealiases.html":{}}}],["userprivateentity",{"_index":770,"title":{"classes/UserPrivateEntity.html":{}},"body":{"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"coverage.html":{}}}],["userrolesenum",{"_index":224,"title":{},"body":{"controllers/CADonationsController.html":{},"controllers/CentersController.html":{},"controllers/CentersController-2.html":{},"injectables/CentersService.html":{},"controllers/CitiesController.html":{},"controllers/CitiesController-2.html":{},"controllers/DonationRequestsController.html":{},"controllers/DonationRequestsController-1.html":{},"controllers/DonationsController.html":{},"injectables/DonationsService.html":{},"guards/RolesGuard.html":{},"classes/SACreateUserDto.html":{},"controllers/SADonationsController.html":{},"classes/UserEntity.html":{},"classes/UserPrivateEntity.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["userrolesenum.center_admin",{"_index":360,"title":{},"body":{"injectables/CentersService.html":{},"injectables/DonationsService.html":{},"classes/SACreateUserDto.html":{}}}],["userrolesenum.donor",{"_index":583,"title":{},"body":{"controllers/DonationRequestsController-1.html":{},"injectables/DonationsService.html":{}}}],["userrolesenum.donor)@useguards(rolesguard)@useguards(authguard",{"_index":578,"title":{},"body":{"controllers/DonationRequestsController-1.html":{}}}],["userrolesenum.system_admin",{"_index":658,"title":{},"body":{"injectables/DonationsService.html":{}}}],["userrolespublicenum",{"_index":521,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":811,"title":{},"body":{"controllers/UsersController-2.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":817,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":786,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["userscontroller",{"_index":779,"title":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{}},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":18,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DonationsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":88,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CentersService.html":{},"controllers/DonationRequestsController.html":{},"injectables/DonationsService.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"controllers/UsersController-2.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usersservicets",{"_index":568,"title":{},"body":{"controllers/DonationRequestsController.html":{}}}],["validateif",{"_index":732,"title":{},"body":{"classes/SACreateUserDto.html":{}}}],["validator",{"_index":456,"title":{},"body":{"classes/CreateCenterDto.html":{},"classes/CreateCityDto.html":{},"classes/CreateDonationDto.html":{},"classes/CreateDonationRequestDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginInputDto.html":{},"classes/SACreateUserDto.html":{},"classes/UpdateDonationRequestDto.html":{},"dependencies.html":{}}}],["value",{"_index":642,"title":{},"body":{"injectables/DonationsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":996,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":987,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":942,"title":{},"body":{"index.html":{}}}],["webpack",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["website",{"_index":974,"title":{},"body":{"index.html":{}}}],["where.centerid",{"_index":661,"title":{},"body":{"injectables/DonationsService.html":{}}}],["where.id",{"_index":362,"title":{},"body":{"injectables/CentersService.html":{}}}],["where.userid",{"_index":660,"title":{},"body":{"injectables/DonationsService.html":{}}}],["whole_blood",{"_index":915,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yes",{"_index":350,"title":{},"body":{"injectables/CentersService.html":{},"injectables/CitiesService.html":{},"injectables/DonationRequestsService.html":{},"injectables/UsersService.html":{}}}],["you'd",{"_index":963,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CentersModule.html":{},"modules/CitiesModule.html":{},"modules/DonationRequestsModule.html":{},"modules/DonationsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCentersModule\n\nCentersModule\n\nAppModule -->\n\nCentersModule->AppModule\n\n\n\n\n\nCitiesModule\n\nCitiesModule\n\nAppModule -->\n\nCitiesModule->AppModule\n\n\n\n\n\nDonationRequestsModule\n\nDonationRequestsModule\n\nAppModule -->\n\nDonationRequestsModule->AppModule\n\n\n\n\n\nDonationsModule\n\nDonationsModule\n\nAppModule -->\n\nDonationsModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CentersModule\n                        \n                        \n                            CitiesModule\n                        \n                        \n                            DonationRequestsModule\n                        \n                        \n                            DonationsModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersModule } from './users/users.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { DonationsModule } from './donations/donations.module';\nimport { CitiesModule } from './cities/cities.module';\nimport { CentersModule } from './centers/centers.module';\nimport { AuthModule } from './auth/auth.module';\nimport { DonationRequestsModule } from './donation-requests/donation-requests.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    PrismaModule,\n    DonationsModule,\n    CitiesModule,\n    CentersModule,\n    AuthModule,\n    DonationRequestsModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getMe\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(userPayload: UserPayloadType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(_: LoginInputDto, req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _\n                                    \n                                                LoginInputDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Request,\n  Body,\n  Get,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { LoginOutputDto } from './dto/login-output.dto';\nimport { LoginInputDto } from './dto/login-input.dto';\nimport { UserPayloadType } from './types/jwt-payload.type';\nimport { GetUserPayload } from 'src/users/decorators/get-user.decorator';\nimport { UsersService } from 'src/users/users.service';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst name: string = 'auth';\n\n@Controller(name)\n@ApiTags(name)\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n  ) {}\n\n  @Post('login')\n  async login(\n    @Body() _: LoginInputDto,\n    @Request() req: any,\n  ): Promise {\n    return this.authService.login(req.body);\n  }\n\n  @Get('me')\n  @UseGuards(AuthGuard)\n  async getMe(@GetUserPayload() userPayload: UserPayloadType) {\n    return this.usersService.findOne({ id: userPayload.id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private jwtService: JwtService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: process.env.JWT_SECRET,\n      });\n      request.userPayload = payload;\n    } catch {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\n// import { JwtStrategy } from './strategies/jwt.strategy';\n\n@Global()\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: process.env.JWT_EXPIRATION },\n    }),\n  ],\n  providers: [AuthService /*, JwtStrategy*/],\n  controllers: [AuthController],\n  exports: [JwtModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginInputDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginInputDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { LoginOutputDto } from './dto/login-output.dto';\nimport { compare } from 'bcryptjs';\nimport { LoginInputDto } from './dto/login-input.dto';\nimport { UserPayloadType } from './types/jwt-payload.type';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(data: LoginInputDto): Promise {\n    const user = await this.usersService.findOne({ login: data.login });\n    const isPasswordCorrect = await compare(data.password, user.passwordHash);\n\n    if (!isPasswordCorrect) {\n      throw new UnauthorizedException();\n    }\n\n    const payload: UserPayloadType = {\n      login: user.login,\n      id: user.id,\n      role: user.role,\n    };\n\n    return {\n      accessToken: await this.jwtService.signAsync(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CADonationsController.html":{"url":"controllers/CADonationsController.html","title":"controller - CADonationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CADonationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/donations/ca.donations.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findMany\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateDonationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: DonationEntity})\n                \n            \n\n            \n                \n                    Defined in src/donations/ca.donations.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateDonationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany(userPayload: UserPayloadType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: DonationEntity, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/donations/ca.donations.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number, userPayload: UserPayloadType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: DonationEntity})\n                \n            \n\n            \n                \n                    Defined in src/donations/ca.donations.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/donations/ca.donations.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userPayload: UserPayloadType, id: number, dto: UpdateDonationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOkResponse({type: DonationEntity})\n                \n            \n\n            \n                \n                    Defined in src/donations/ca.donations.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateDonationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport { DonationsService } from './donations.service';\nimport { CreateDonationDto } from './dto/create-donation.dto';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { DonationEntity } from './entities/donation.entity';\nimport { AuthGuard } from 'src/auth/guards/auth.guard';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { UserRolesEnum } from 'src/users/enum/user-roles.enum';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { GetUserPayload } from 'src/users/decorators/get-user.decorator';\nimport { UserPayloadType } from 'src/auth/types/jwt-payload.type';\nimport { UpdateDonationDto } from './dto/update-donation.dto';\nimport { CommonException } from 'src/utils/common.exception';\n\nconst name: string = 'ca/donations';\n\n@Controller(name)\n@ApiTags(name)\n@UseGuards(RolesGuard)\n@UseGuards(AuthGuard)\n@Roles(UserRolesEnum.CENTER_ADMIN)\n@ApiBearerAuth()\nexport class CADonationsController {\n  constructor(private readonly donationsService: DonationsService) {}\n\n  @Post()\n  @ApiCreatedResponse({ type: DonationEntity })\n  async create(@Body() dto: CreateDonationDto) {\n    return this.donationsService.create(dto);\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: DonationEntity })\n  async findOne(\n    @Param('id') id: number,\n    @GetUserPayload() userPayload: UserPayloadType,\n  ) {\n    return this.donationsService.findOne(userPayload, { id });\n  }\n\n  @Get()\n  @ApiOkResponse({ type: DonationEntity, isArray: true })\n  async findMany(@GetUserPayload() userPayload: UserPayloadType) {\n    return this.donationsService.findMany(userPayload);\n  }\n\n  @Patch(':id')\n  @ApiOkResponse({ type: DonationEntity })\n  async update(\n    @GetUserPayload() userPayload: UserPayloadType,\n    @Param('id') id: number,\n    @Body() dto: UpdateDonationDto,\n  ) {\n    return this.donationsService.update(userPayload, dto, { id });\n  }\n\n  @Delete(':id')\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async remove() {\n    throw new UnauthorizedException();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CAUpdateUserDto.html":{"url":"classes/CAUpdateUserDto.html","title":"class - CAUpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CAUpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/ca.update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { UpdateUserDto } from './update-user.dto';\n\nexport class CAUpdateUserDto extends OmitType(UpdateUserDto, ['role']) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CenterEntity.html":{"url":"classes/CenterEntity.html","title":"class - CenterEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CenterEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/centers/entites/center.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                cityId\n                            \n                            \n                                    \n                                latitude\n                            \n                            \n                                    \n                                longitude\n                            \n                            \n                                name\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/centers/entites/center.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CityEntity\n\n                    \n                \n                    \n                        \n                                Defined in src/centers/entites/center.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/centers/entites/center.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/centers/entites/center.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/centers/entites/center.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/centers/entites/center.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:6\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prisma } from '@prisma/client';\nimport { CommonEntity } from '../../common/entities/common.entity';\nimport { CityEntity } from '../../cities/entities/city.entity';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CenterEntity extends CommonEntity {\n  name: string;\n\n  address: string;\n\n  cityId: number;\n\n  city: CityEntity;\n\n  @ApiProperty({ type: String })\n  latitude: Prisma.Decimal;\n\n  @ApiProperty({ type: String })\n  longitude: Prisma.Decimal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CentersController.html":{"url":"controllers/CentersController.html","title":"controller - CentersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CentersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/centers/ca.centers.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findMany\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/centers/ca.centers.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: CenterEntity, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/centers/ca.centers.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: CenterEntity})\n                \n            \n\n            \n                \n                    Defined in src/centers/ca.centers.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/centers/ca.centers.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userPayload: UserPayloadType, id: number, dto: UpdateCenterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOkResponse({type: CenterEntity})\n                \n            \n\n            \n                \n                    Defined in src/centers/ca.centers.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateCenterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CentersService } from './centers.service';\nimport { UpdateCenterDto } from './dto/update-center.dto';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { CenterEntity } from './entites/center.entity';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { UserRolesEnum } from 'src/users/enum/user-roles.enum';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { AuthGuard } from 'src/auth/guards/auth.guard';\nimport { CommonException } from 'src/utils/common.exception';\nimport { UserPayloadType } from 'src/auth/types/jwt-payload.type';\nimport { GetUserPayload } from 'src/users/decorators/get-user.decorator';\n\nconst name: string = 'ca/centers';\n\n@Controller(name)\n@ApiTags(name)\n@Roles(UserRolesEnum.CENTER_ADMIN)\n@UseGuards(RolesGuard)\n@UseGuards(AuthGuard)\n@ApiBearerAuth()\nexport class CentersController {\n  constructor(private readonly centersService: CentersService) {}\n\n  @Post()\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async create() {\n    throw new UnauthorizedException();\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: CenterEntity })\n  async findOne(@Param('id') id: number) {\n    return this.centersService.findOne({ id });\n  }\n\n  @Get()\n  @ApiOkResponse({ type: CenterEntity, isArray: true })\n  async findMany() {\n    return this.centersService.findMany();\n  }\n\n  @Patch(':id')\n  @ApiOkResponse({ type: CenterEntity })\n  async update(\n    @GetUserPayload() userPayload: UserPayloadType,\n    @Param('id') id: number,\n    @Body() dto: UpdateCenterDto,\n  ) {\n    return this.centersService.update(userPayload, { id }, dto);\n  }\n\n  @Delete(':id')\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async remove() {\n    throw new UnauthorizedException();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CentersController-1.html":{"url":"controllers/CentersController-1.html","title":"controller - CentersController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CentersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/centers/centers.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findMany\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/centers/centers.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: CenterEntity, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/centers/centers.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: CenterEntity})\n                \n            \n\n            \n                \n                    Defined in src/centers/centers.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/centers/centers.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/centers/centers.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CentersService } from './centers.service';\nimport {\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport {\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { CenterEntity } from './entites/center.entity';\nimport { CommonException } from 'src/utils/common.exception';\n\nconst name: string = 'centers';\n\n@Controller(name)\n@ApiTags(name)\nexport class CentersController {\n  constructor(private readonly centersService: CentersService) {}\n\n  @Post()\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async create() {\n    throw new UnauthorizedException();\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: CenterEntity })\n  async findOne(@Param('id') id: number) {\n    return this.centersService.findOne({ id });\n  }\n\n  @Get()\n  @ApiOkResponse({ type: CenterEntity, isArray: true })\n  async findMany() {\n    return this.centersService.findMany();\n  }\n\n  @Patch(':id')\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async update() {\n    throw new UnauthorizedException();\n  }\n\n  @Delete(':id')\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async remove() {\n    throw new UnauthorizedException();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CentersController-2.html":{"url":"controllers/CentersController-2.html","title":"controller - CentersController-2","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CentersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/centers/sa.centers.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findMany\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateCenterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: CenterEntity})\n                \n            \n\n            \n                \n                    Defined in src/centers/sa.centers.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateCenterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: CenterEntity, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/centers/sa.centers.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: CenterEntity})\n                \n            \n\n            \n                \n                    Defined in src/centers/sa.centers.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOkResponse({type: CenterEntity})\n                \n            \n\n            \n                \n                    Defined in src/centers/sa.centers.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userPayload: UserPayloadType, id: number, dto: UpdateCenterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOkResponse({type: CenterEntity})\n                \n            \n\n            \n                \n                    Defined in src/centers/sa.centers.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateCenterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CentersService } from './centers.service';\nimport { CreateCenterDto } from './dto/create-center.dto';\nimport { UpdateCenterDto } from './dto/update-center.dto';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CenterEntity } from './entites/center.entity';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { UserRolesEnum } from 'src/users/enum/user-roles.enum';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { AuthGuard } from 'src/auth/guards/auth.guard';\nimport { GetUserPayload } from 'src/users/decorators/get-user.decorator';\nimport { UserPayloadType } from 'src/auth/types/jwt-payload.type';\n\nconst name: string = 'sa/centers';\n\n@Controller(name)\n@ApiTags(name)\n@Roles(UserRolesEnum.SYSTEM_ADMIN)\n@UseGuards(RolesGuard)\n@UseGuards(AuthGuard)\n@ApiBearerAuth()\nexport class CentersController {\n  constructor(private readonly centersService: CentersService) {}\n\n  @Post()\n  @ApiCreatedResponse({ type: CenterEntity })\n  async create(@Body() dto: CreateCenterDto) {\n    return this.centersService.create(dto);\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: CenterEntity })\n  async findOne(@Param('id') id: number) {\n    return this.centersService.findOne({ id });\n  }\n\n  @Get()\n  @ApiOkResponse({ type: CenterEntity, isArray: true })\n  async findMany() {\n    return this.centersService.findMany();\n  }\n\n  @Patch(':id')\n  @ApiOkResponse({ type: CenterEntity })\n  async update(\n    @GetUserPayload() userPayload: UserPayloadType,\n    @Param('id') id: number,\n    @Body() dto: UpdateCenterDto,\n  ) {\n    return this.centersService.update(userPayload, { id }, dto);\n  }\n\n  @Delete(':id')\n  @ApiOkResponse({ type: CenterEntity })\n  async remove(@Param('id') id: number) {\n    return this.centersService.delete({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CentersModule.html":{"url":"modules/CentersModule.html","title":"module - CentersModule","body":"\n                   \n\n\n\n\n    Modules\n    CentersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CentersModule\n\n\n\ncluster_CentersModule_exports\n\n\n\ncluster_CentersModule_providers\n\n\n\ncluster_CentersModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nCentersModule\n\nCentersModule\n\nCentersModule -->\n\nPrismaModule->CentersModule\n\n\n\n\n\nCentersService \n\nCentersService \n\nCentersService  -->\n\nCentersModule->CentersService \n\n\n\n\n\nCentersService\n\nCentersService\n\nCentersModule -->\n\nCentersService->CentersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/centers/centers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CentersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CentersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CentersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CentersController } from './centers.controller';\nimport { CentersService } from './centers.service';\nimport { PrismaModule } from '../prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [CentersController],\n  providers: [CentersService],\n  exports: [CentersService],\n})\nexport class CentersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CentersService.html":{"url":"injectables/CentersService.html","title":"injectable - CentersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CentersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/centers/centers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _checkCenterAdminAttachment\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/centers/centers.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        _checkCenterAdminAttachment\n                        \n                    \n                \n            \n            \n                \n                    \n                    _checkCenterAdminAttachment(userId: number, centerId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/centers/centers.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    centerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: Prisma.CenterUncheckedCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/centers/centers.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.CenterUncheckedCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(where: Prisma.CenterWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/centers/centers.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.CenterWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany(where?: Prisma.CenterWhereInput)\n                \n            \n\n\n            \n                \n                    Defined in src/centers/centers.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.CenterWhereInput\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(where: Prisma.CenterWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/centers/centers.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.CenterWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userPayload: UserPayloadType, where: Prisma.CenterWhereUniqueInput, data: Prisma.CenterUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/centers/centers.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    where\n                                    \n                                            Prisma.CenterWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Prisma.CenterUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { Prisma, UserRolesEnum } from '@prisma/client';\nimport { UserPayloadType } from 'src/auth/types/jwt-payload.type';\nimport { UsersService } from 'src/users/users.service';\n\n@Injectable()\nexport class CentersService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly usersService: UsersService,\n  ) {}\n\n  async create(data: Prisma.CenterUncheckedCreateInput) {\n    return this.prisma.center.create({ data });\n  }\n\n  async findOne(where: Prisma.CenterWhereUniqueInput) {\n    return this.prisma.center.findUniqueOrThrow({\n      where,\n    });\n  }\n\n  async findMany(where?: Prisma.CenterWhereInput) {\n    return this.prisma.center.findMany({ where });\n  }\n\n  async update(\n    userPayload: UserPayloadType,\n    where: Prisma.CenterWhereUniqueInput,\n    data: Prisma.CenterUpdateInput,\n  ) {\n    if (userPayload.role === UserRolesEnum.CENTER_ADMIN) {\n      await this._checkCenterAdminAttachment(userPayload.id, where.id);\n    }\n\n    return this.prisma.center.update({ data, where });\n  }\n\n  async delete(where: Prisma.CenterWhereUniqueInput) {\n    return this.prisma.center.delete({ where });\n  }\n\n  private async _checkCenterAdminAttachment(userId: number, centerId: number) {\n    const user = await this.usersService.findOne({ id: userId });\n\n    if (user.employedCenterId !== centerId) {\n      throw new UnauthorizedException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CitiesController.html":{"url":"controllers/CitiesController.html","title":"controller - CitiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cities/ca.cities.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findMany\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/cities/ca.cities.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: CityEntity, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/cities/ca.cities.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: CityEntity})\n                \n            \n\n            \n                \n                    Defined in src/cities/ca.cities.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/cities/ca.cities.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/cities/ca.cities.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport { CitiesService } from './cities.service';\nimport {\n  ApiBearerAuth,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { CityEntity } from './entities/city.entity';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { UserRolesEnum } from '@prisma/client';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { AuthGuard } from 'src/auth/guards/auth.guard';\nimport { CommonException } from 'src/utils/common.exception';\n\nconst name: string = 'ca/cities';\n@Controller(name)\n@ApiTags(name)\n@Roles(UserRolesEnum.CENTER_ADMIN)\n@UseGuards(RolesGuard)\n@UseGuards(AuthGuard)\n@ApiBearerAuth()\nexport class CitiesController {\n  constructor(private readonly citiesService: CitiesService) {}\n\n  @Post()\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async create() {\n    throw new UnauthorizedException();\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: CityEntity })\n  async findOne(@Param('id') id: number) {\n    return this.citiesService.findOne({ id });\n  }\n\n  @Get()\n  @ApiOkResponse({ type: CityEntity, isArray: true })\n  async findMany() {\n    return this.citiesService.findMany();\n  }\n\n  @Patch(':id')\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async update() {\n    throw new UnauthorizedException();\n  }\n\n  @Delete(':id')\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async remove() {\n    throw new UnauthorizedException();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CitiesController-1.html":{"url":"controllers/CitiesController-1.html","title":"controller - CitiesController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cities/cities.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findMany\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/cities/cities.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: CityEntity, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/cities/cities.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: CityEntity})\n                \n            \n\n            \n                \n                    Defined in src/cities/cities.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/cities/cities.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/cities/cities.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { CitiesService } from './cities.service';\nimport {\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { CityEntity } from './entities/city.entity';\nimport { CommonException } from 'src/utils/common.exception';\n\nconst name: string = 'cities';\n@Controller(name)\n@ApiTags(name)\nexport class CitiesController {\n  constructor(private readonly citiesService: CitiesService) {}\n\n  @Post()\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async create() {\n    throw new UnauthorizedException();\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: CityEntity })\n  async findOne(@Param('id') id: number) {\n    return this.citiesService.findOne({ id });\n  }\n\n  @Get()\n  @ApiOkResponse({ type: CityEntity, isArray: true })\n  async findMany() {\n    return this.citiesService.findMany();\n  }\n\n  @Patch(':id')\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async update() {\n    throw new UnauthorizedException();\n  }\n\n  @Delete(':id')\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async remove() {\n    throw new UnauthorizedException();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CitiesController-2.html":{"url":"controllers/CitiesController-2.html","title":"controller - CitiesController-2","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cities/sa.cities.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findMany\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateCityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: CityEntity})\n                \n            \n\n            \n                \n                    Defined in src/cities/sa.cities.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateCityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: CityEntity, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/cities/sa.cities.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: CityEntity})\n                \n            \n\n            \n                \n                    Defined in src/cities/sa.cities.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOkResponse({type: CityEntity})\n                \n            \n\n            \n                \n                    Defined in src/cities/sa.cities.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: UpdateCityDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOkResponse({type: CityEntity})\n                \n            \n\n            \n                \n                    Defined in src/cities/sa.cities.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateCityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateCityDto } from './dto/create-city.dto';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { CitiesService } from './cities.service';\nimport { UpdateCityDto } from './dto/update-city.dto';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CityEntity } from './entities/city.entity';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { UserRolesEnum } from '@prisma/client';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { AuthGuard } from 'src/auth/guards/auth.guard';\n\nconst name: string = 'sa/cities';\n@Controller(name)\n@ApiTags(name)\n@Roles(UserRolesEnum.SYSTEM_ADMIN)\n@UseGuards(RolesGuard)\n@UseGuards(AuthGuard)\n@ApiBearerAuth()\nexport class CitiesController {\n  constructor(private readonly citiesService: CitiesService) {}\n\n  @Post()\n  @ApiCreatedResponse({ type: CityEntity })\n  async create(@Body() dto: CreateCityDto) {\n    return this.citiesService.create(dto);\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: CityEntity })\n  async findOne(@Param('id') id: number) {\n    return this.citiesService.findOne({ id });\n  }\n\n  @Get()\n  @ApiOkResponse({ type: CityEntity, isArray: true })\n  async findMany() {\n    return this.citiesService.findMany();\n  }\n\n  @Patch(':id')\n  @ApiOkResponse({ type: CityEntity })\n  async update(@Param('id') id: number, @Body() dto: UpdateCityDto) {\n    return this.citiesService.update({ id }, dto);\n  }\n\n  @Delete(':id')\n  @ApiOkResponse({ type: CityEntity })\n  async remove(@Param('id') id: number) {\n    return this.citiesService.delete({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CitiesModule.html":{"url":"modules/CitiesModule.html","title":"module - CitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    CitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CitiesModule\n\n\n\ncluster_CitiesModule_imports\n\n\n\ncluster_CitiesModule_exports\n\n\n\ncluster_CitiesModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nCitiesModule\n\nCitiesModule\n\nCitiesModule -->\n\nPrismaModule->CitiesModule\n\n\n\n\n\nCitiesService \n\nCitiesService \n\nCitiesService  -->\n\nCitiesModule->CitiesService \n\n\n\n\n\nCitiesService\n\nCitiesService\n\nCitiesModule -->\n\nCitiesService->CitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cities/cities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CitiesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CitiesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CitiesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from '../prisma/prisma.module';\nimport { CitiesController } from './cities.controller';\nimport { CitiesService } from './cities.service';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [CitiesController],\n  providers: [CitiesService],\n  exports: [CitiesService],\n})\nexport class CitiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CitiesService.html":{"url":"injectables/CitiesService.html","title":"injectable - CitiesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CitiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cities/cities.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/cities/cities.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: Prisma.CityUncheckedCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/cities/cities.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.CityUncheckedCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(where: Prisma.CityWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/cities/cities.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.CityWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany(where?: Prisma.CityWhereInput)\n                \n            \n\n\n            \n                \n                    Defined in src/cities/cities.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.CityWhereInput\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(where: Prisma.CityWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/cities/cities.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.CityWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(where: Prisma.CityWhereUniqueInput, data: Prisma.CityUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/cities/cities.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.CityWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Prisma.CityUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class CitiesService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(data: Prisma.CityUncheckedCreateInput) {\n    return this.prisma.city.create({ data });\n  }\n\n  async findOne(where: Prisma.CityWhereUniqueInput) {\n    return this.prisma.city.findUniqueOrThrow({ where });\n  }\n\n  async findMany(where?: Prisma.CityWhereInput) {\n    return this.prisma.city.findMany({ where });\n  }\n\n  async update(\n    where: Prisma.CityWhereUniqueInput,\n    data: Prisma.CityUpdateInput,\n  ) {\n    return this.prisma.city.update({ data, where });\n  }\n\n  async delete(where: Prisma.CityWhereUniqueInput) {\n    return this.prisma.city.delete({ where });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CityEntity.html":{"url":"classes/CityEntity.html","title":"class - CityEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CityEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cities/entities/city.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonEntity\n            \n\n            \n                Implements\n            \n            \n                        City\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    \n                                latitude\n                            \n                            \n                                    \n                                longitude\n                            \n                            \n                                name\n                            \n                            \n                                createdAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cities/entities/city.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cities/entities/city.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/cities/entities/city.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:6\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CommonEntity } from '../../common/entities/common.entity';\nimport { City, Prisma } from '@prisma/client';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CityEntity extends CommonEntity implements City {\n  id: number;\n\n  name: string;\n\n  @ApiProperty({ type: String })\n  latitude: Prisma.Decimal;\n\n  @ApiProperty({ type: String })\n  longitude: Prisma.Decimal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonEntity.html":{"url":"classes/CommonEntity.html","title":"class - CommonEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/entities/common.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/common/entities/common.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/entities/common.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/common/entities/common.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CommonEntity {\n  id: number;\n\n  createdAt: Date;\n\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonException.html":{"url":"classes/CommonException.html","title":"class - CommonException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/common.exception.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Readonly\n                                message\n                            \n                            \n                                    \n                                    Public\n                                    Readonly\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statusCode: number, message: string)\n                    \n                \n                        \n                            \n                                Defined in src/utils/common.exception.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utils/common.exception.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Readonly\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utils/common.exception.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CommonException {\n  @ApiProperty()\n  public readonly statusCode: number;\n\n  @ApiProperty()\n  public readonly message: string;\n\n  constructor(statusCode: number, message: string) {\n    this.statusCode = statusCode;\n    this.message = message;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCenterDto.html":{"url":"classes/CreateCenterDto.html","title":"class - CreateCenterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCenterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/centers/dto/create-center.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                cityId\n                            \n                            \n                                    \n                                latitude\n                            \n                            \n                                    \n                                longitude\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/centers/dto/create-center.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/centers/dto/create-center.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/centers/dto/create-center.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(128)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/centers/dto/create-center.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsInt,\n  IsNotEmpty,\n  IsNumber,\n  IsPositive,\n  IsString,\n  MaxLength,\n} from 'class-validator';\n\nexport class CreateCenterDto {\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(128)\n  name: string;\n\n  @IsNumber()\n  latitude: number;\n\n  @IsNumber()\n  longitude: number;\n\n  @IsInt()\n  @IsPositive()\n  cityId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCityDto.html":{"url":"classes/CreateCityDto.html","title":"class - CreateCityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cities/dto/create-city.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                latitude\n                            \n                            \n                                    \n                                longitude\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cities/dto/create-city.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cities/dto/create-city.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(64)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cities/dto/create-city.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString, MaxLength } from 'class-validator';\n\nexport class CreateCityDto {\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(64)\n  name: string;\n\n  @IsNumber()\n  latitude: number;\n\n  @IsNumber()\n  longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDonationDto.html":{"url":"classes/CreateDonationDto.html","title":"class - CreateDonationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDonationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/donations/dto/create-donation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                centerId\n                            \n                            \n                                    \n                                    \n                                requestId\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        centerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donations/dto/create-donation.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        requestId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donations/dto/create-donation.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DonationTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(DonationTypeEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donations/dto/create-donation.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donations/dto/create-donation.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsInt, IsPositive } from 'class-validator';\nimport { DonationTypeEnum } from '../enum/donation-type.enum';\n\nexport class CreateDonationDto {\n  @IsEnum(DonationTypeEnum)\n  type: DonationTypeEnum;\n\n  @IsInt()\n  @IsPositive()\n  userId: number;\n\n  @IsInt()\n  @IsPositive()\n  centerId: number;\n\n  @IsInt()\n  @IsPositive()\n  requestId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDonationRequestDto.html":{"url":"classes/CreateDonationRequestDto.html","title":"class - CreateDonationRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDonationRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/donation-requests/dto/create-donation-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                centerId\n                            \n                            \n                                    \n                                    \n                                    \n                                count\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dateTo\n                            \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                groups\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                patronymic\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        centerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/dto/create-donation-request.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/dto/create-donation-request.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dateTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/dto/create-donation-request.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(64)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/dto/create-donation-request.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BloodGroupsEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: BloodGroupsEnum, isArray: true})@IsEnum(BloodGroupsEnum, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/dto/create-donation-request.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(64)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/dto/create-donation-request.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        patronymic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsNotEmpty()@MaxLength(64)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/dto/create-donation-request.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DonationTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: DonationTypeEnum})@IsEnum(DonationTypeEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/dto/create-donation-request.dto.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { DonationTypeEnum, BloodGroupsEnum } from '@prisma/client';\nimport {\n  IsDate,\n  IsInt,\n  IsPositive,\n  Max,\n  Min,\n  IsEnum,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  MaxLength,\n} from 'class-validator';\n\nexport class CreateDonationRequestDto {\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(64)\n  firstName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(64)\n  lastName: string;\n\n  @IsOptional()\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(64)\n  patronymic: string;\n\n  @IsInt()\n  @Min(1)\n  @Max(10)\n  count: number;\n\n  @IsOptional()\n  @IsDate()\n  dateTo?: Date;\n\n  @IsInt()\n  @IsPositive()\n  centerId: number;\n\n  @ApiProperty({ enum: DonationTypeEnum })\n  @IsEnum(DonationTypeEnum)\n  type: DonationTypeEnum;\n\n  @ApiProperty({ enum: BloodGroupsEnum, isArray: true })\n  @IsEnum(BloodGroupsEnum, { each: true })\n  groups: BloodGroupsEnum[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                patronymic\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(64)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(64)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(64)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Length(8, 128)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        patronymic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsNotEmpty()@MaxLength(64)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRolesPublicEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(UserRolesPublicEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEnum,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Length,\n  MaxLength,\n} from 'class-validator';\nimport { UserRolesPublicEnum } from '../enum/user-roles.enum';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(64)\n  login: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @Length(8, 128)\n  password: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(64)\n  firstName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(64)\n  lastName: string;\n\n  @IsOptional()\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(64)\n  patronymic: string;\n\n  @IsEnum(UserRolesPublicEnum)\n  role: UserRolesPublicEnum;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DonationEntity.html":{"url":"classes/DonationEntity.html","title":"class - DonationEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DonationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/donations/entities/donation.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                centerId\n                            \n                            \n                                id\n                            \n                            \n                                requestId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                userId\n                            \n                            \n                                createdAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        centerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/donations/entities/donation.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/donations/entities/donation.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DonationStatusesEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: DonationStatusesEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donations/entities/donation.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DonationTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: DonationTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donations/entities/donation.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/donations/entities/donation.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:6\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DonationStatusesEnum, DonationTypeEnum } from '@prisma/client';\nimport { CommonEntity } from '../../common/entities/common.entity';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class DonationEntity extends CommonEntity {\n  id: number;\n\n  @ApiProperty({ enum: DonationTypeEnum })\n  type: DonationTypeEnum;\n\n  @ApiProperty({ enum: DonationStatusesEnum })\n  status: DonationStatusesEnum;\n\n  userId: number;\n\n  centerId: number;\n\n  requestId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DonationRequestEntity.html":{"url":"classes/DonationRequestEntity.html","title":"class - DonationRequestEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DonationRequestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/donation-requests/entiites/donation-request.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                centerId\n                            \n                            \n                                count\n                            \n                            \n                                createdAt\n                            \n                            \n                                dateTo\n                            \n                            \n                                firstName\n                            \n                            \n                                    \n                                groups\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                patronymic\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        centerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/entiites/donation-request.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/entiites/donation-request.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/entiites/donation-request.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/entiites/donation-request.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BloodGroupsEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: BloodGroupsEnum, isArray: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/entiites/donation-request.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/entiites/donation-request.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patronymic\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/entiites/donation-request.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DonationTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: DonationTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/entiites/donation-request.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BloodGroupsEnum, DonationTypeEnum } from '@prisma/client';\nimport { CommonEntity } from '../../common/entities/common.entity';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class DonationRequestEntity extends CommonEntity {\n  id: number;\n\n  firstName: string;\n\n  lastName: string;\n\n  patronymic: string | null;\n\n  @ApiProperty({ enum: DonationTypeEnum })\n  type: DonationTypeEnum;\n\n  @ApiProperty({ enum: BloodGroupsEnum, isArray: true })\n  groups: BloodGroupsEnum[];\n\n  count: number;\n\n  centerId: number;\n\n  dateTo: Date | null;\n\n  createdAt: Date;\n\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DonationRequestsController.html":{"url":"controllers/DonationRequestsController.html","title":"controller - DonationRequestsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DonationRequestsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/donation-requests/ca.donation-requests.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findMany\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userPayload: UserPayloadType, dto: CreateDonationRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: DonationRequestEntity})\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/ca.donation-requests.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateDonationRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany(userPayload: UserPayloadType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: DonationRequestEntity, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/ca.donation-requests.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(userPayload: UserPayloadType, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: DonationRequestEntity})\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/ca.donation-requests.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(userPayload: UserPayloadType, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOkResponse({type: DonationRequestEntity})\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/ca.donation-requests.controller.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userPayload: UserPayloadType, id: number, dto: UpdateDonationRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOkResponse({type: DonationRequestEntity})\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/ca.donation-requests.controller.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateDonationRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { DonationRequestsService } from './donation-requests.service';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { DonationRequestEntity } from './entiites/donation-request.entity';\nimport { CreateDonationRequestDto } from './dto/create-donation-request.dto';\nimport { UpdateDonationRequestDto } from './dto/update-donation-request.dto';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { DonationRequestStatusEnum, UserRolesEnum } from '@prisma/client';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { AuthGuard } from 'src/auth/guards/auth.guard';\nimport { UserPayloadType } from 'src/auth/types/jwt-payload.type';\nimport { GetUserPayload } from 'src/users/decorators/get-user.decorator';\nimport { UsersService } from 'src/users/users.service';\n\nconst name: string = 'donation-requests';\n\n@Controller(name)\n@ApiTags(name)\n@Roles(UserRolesEnum.CENTER_ADMIN)\n@UseGuards(RolesGuard)\n@UseGuards(AuthGuard)\n@ApiBearerAuth()\nexport class DonationRequestsController {\n  constructor(\n    private readonly donationRequestsService: DonationRequestsService,\n    private readonly usersServiceTs: UsersService,\n  ) {}\n\n  @Post()\n  @ApiCreatedResponse({ type: DonationRequestEntity })\n  async create(\n    @GetUserPayload() userPayload: UserPayloadType,\n    @Body() dto: CreateDonationRequestDto,\n  ) {\n    return this.donationRequestsService.create({\n      ...dto,\n      applicantId: userPayload.id,\n    });\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: DonationRequestEntity })\n  async findOne(\n    @GetUserPayload() userPayload: UserPayloadType,\n    @Param('id') id: number,\n  ) {\n    const user = await this.usersServiceTs.findOne({ id: userPayload.id });\n\n    return this.donationRequestsService.findOne({\n      id,\n      OR: [\n        { status: DonationRequestStatusEnum.APPROVED },\n        { centerId: user.employedCenterId },\n      ],\n    });\n  }\n\n  @Get()\n  @ApiOkResponse({ type: DonationRequestEntity, isArray: true })\n  async findMany(@GetUserPayload() userPayload: UserPayloadType) {\n    const user = await this.usersServiceTs.findOne({ id: userPayload.id });\n\n    return this.donationRequestsService.findMany({\n      OR: [\n        { status: DonationRequestStatusEnum.APPROVED },\n        { centerId: user.employedCenterId },\n      ],\n    });\n  }\n\n  @Patch(':id')\n  @ApiOkResponse({ type: DonationRequestEntity })\n  async update(\n    @GetUserPayload() userPayload: UserPayloadType,\n    @Param('id') id: number,\n    @Body() dto: UpdateDonationRequestDto,\n  ) {\n    const user = await this.usersServiceTs.findOne({ id: userPayload.id });\n\n    return this.donationRequestsService.update(\n      {\n        id,\n        OR: [\n          { status: DonationRequestStatusEnum.APPROVED },\n          { centerId: user.employedCenterId },\n        ],\n      },\n      dto,\n    );\n  }\n\n  @Delete(':id')\n  @ApiOkResponse({ type: DonationRequestEntity })\n  async remove(\n    @GetUserPayload() userPayload: UserPayloadType,\n    @Param('id') id: number,\n  ) {\n    const user = await this.usersServiceTs.findOne({ id: userPayload.id });\n\n    return this.donationRequestsService.delete({\n      id,\n      OR: [\n        { status: DonationRequestStatusEnum.APPROVED },\n        { centerId: user.employedCenterId },\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DonationRequestsController-1.html":{"url":"controllers/DonationRequestsController-1.html","title":"controller - DonationRequestsController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DonationRequestsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/donation-requests/donation-requests.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findMany\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userPayload: UserPayloadType, dto: CreateDonationRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: DonationRequestEntity})@ApiBearerAuth()@Roles(UserRolesEnum.APPLICANT, UserRolesEnum.DONOR)@UseGuards(RolesGuard)@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/donation-requests.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateDonationRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: DonationRequestEntity, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/donation-requests.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(userPayload: UserPayloadType, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: DonationRequestEntity})\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/donation-requests.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/donation-requests.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/donation-requests.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { DonationRequestsService } from './donation-requests.service';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { DonationRequestEntity } from './entiites/donation-request.entity';\nimport { CreateDonationRequestDto } from './dto/create-donation-request.dto';\nimport { CommonException } from 'src/utils/common.exception';\nimport { DonationRequestStatusEnum, UserRolesEnum } from '@prisma/client';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { AuthGuard } from 'src/auth/guards/auth.guard';\nimport { GetUserPayload } from 'src/users/decorators/get-user.decorator';\nimport { UserPayloadType } from 'src/auth/types/jwt-payload.type';\n\nconst name: string = 'donation-requests';\n\n@Controller(name)\n@ApiTags(name)\nexport class DonationRequestsController {\n  constructor(\n    private readonly donationRequestsService: DonationRequestsService,\n  ) {}\n\n  @Post()\n  @ApiCreatedResponse({ type: DonationRequestEntity })\n  @ApiBearerAuth()\n  @Roles(UserRolesEnum.APPLICANT, UserRolesEnum.DONOR)\n  @UseGuards(RolesGuard)\n  @UseGuards(AuthGuard)\n  async create(\n    @GetUserPayload() userPayload: UserPayloadType,\n    @Body() dto: CreateDonationRequestDto,\n  ) {\n    return this.donationRequestsService.create({\n      ...dto,\n      applicantId: userPayload.id,\n    });\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: DonationRequestEntity })\n  async findOne(\n    @GetUserPayload() userPayload: UserPayloadType,\n    @Param('id') id: number,\n  ) {\n    return this.donationRequestsService.findOne({\n      id,\n      OR: [\n        { status: DonationRequestStatusEnum.APPROVED },\n        { applicantId: userPayload.id },\n      ],\n    });\n  }\n\n  @Get()\n  @ApiOkResponse({ type: DonationRequestEntity, isArray: true })\n  async findMany() {\n    return this.donationRequestsService.findMany({\n      status: DonationRequestStatusEnum.APPROVED,\n    });\n  }\n\n  @Patch(':id')\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async update() {\n    throw new UnauthorizedException();\n  }\n\n  @Delete(':id')\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async remove() {\n    throw new UnauthorizedException();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DonationRequestsController-2.html":{"url":"controllers/DonationRequestsController-2.html","title":"controller - DonationRequestsController-2","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DonationRequestsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/donation-requests/sa.donation-requests.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findMany\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userPayload: UserPayloadType, dto: CreateDonationRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: DonationRequestEntity})\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/sa.donation-requests.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateDonationRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: DonationRequestEntity, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/sa.donation-requests.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: DonationRequestEntity})\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/sa.donation-requests.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOkResponse({type: DonationRequestEntity})\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/sa.donation-requests.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: UpdateDonationRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOkResponse({type: DonationRequestEntity})\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/sa.donation-requests.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateDonationRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { DonationRequestsService } from './donation-requests.service';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { ApiCreatedResponse, ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { DonationRequestEntity } from './entiites/donation-request.entity';\nimport { CreateDonationRequestDto } from './dto/create-donation-request.dto';\nimport { UpdateDonationRequestDto } from './dto/update-donation-request.dto';\nimport { GetUserPayload } from 'src/users/decorators/get-user.decorator';\nimport { UserPayloadType } from 'src/auth/types/jwt-payload.type';\n\nconst name: string = 'donation-requests';\n\n@Controller(name)\n@ApiTags(name)\nexport class DonationRequestsController {\n  constructor(\n    private readonly donationRequestsService: DonationRequestsService,\n  ) {}\n\n  @Post()\n  @ApiCreatedResponse({ type: DonationRequestEntity })\n  async create(\n    @GetUserPayload() userPayload: UserPayloadType,\n    @Body() dto: CreateDonationRequestDto,\n  ) {\n    return this.donationRequestsService.create({\n      ...dto,\n      applicantId: userPayload.id,\n    });\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: DonationRequestEntity })\n  async findOne(@Param('id') id: number) {\n    return this.donationRequestsService.findOne({ id });\n  }\n\n  @Get()\n  @ApiOkResponse({ type: DonationRequestEntity, isArray: true })\n  async findMany() {\n    return this.donationRequestsService.findMany();\n  }\n\n  @Patch(':id')\n  @ApiOkResponse({ type: DonationRequestEntity })\n  async update(@Param('id') id: number, @Body() dto: UpdateDonationRequestDto) {\n    return this.donationRequestsService.update({ id }, dto);\n  }\n\n  @Delete(':id')\n  @ApiOkResponse({ type: DonationRequestEntity })\n  async remove(@Param('id') id: number) {\n    return this.donationRequestsService.delete({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DonationRequestsModule.html":{"url":"modules/DonationRequestsModule.html","title":"module - DonationRequestsModule","body":"\n                   \n\n\n\n\n    Modules\n    DonationRequestsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DonationRequestsModule\n\n\n\ncluster_DonationRequestsModule_exports\n\n\n\ncluster_DonationRequestsModule_imports\n\n\n\ncluster_DonationRequestsModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nDonationRequestsModule\n\nDonationRequestsModule\n\nDonationRequestsModule -->\n\nPrismaModule->DonationRequestsModule\n\n\n\n\n\nDonationRequestsService \n\nDonationRequestsService \n\nDonationRequestsService  -->\n\nDonationRequestsModule->DonationRequestsService \n\n\n\n\n\nDonationRequestsService\n\nDonationRequestsService\n\nDonationRequestsModule -->\n\nDonationRequestsService->DonationRequestsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/donation-requests/donation-requests.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DonationRequestsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DonationRequestsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DonationRequestsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DonationRequestsController } from './donation-requests.controller';\nimport { DonationRequestsService } from './donation-requests.service';\nimport { PrismaModule } from '../prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [DonationRequestsController],\n  providers: [DonationRequestsService],\n  exports: [DonationRequestsService],\n})\nexport class DonationRequestsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DonationRequestsService.html":{"url":"injectables/DonationRequestsService.html","title":"injectable - DonationRequestsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DonationRequestsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/donation-requests/donation-requests.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                markOutdatedRequests\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/donation-requests/donation-requests.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: Prisma.DonationRequestUncheckedCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/donation-requests/donation-requests.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.DonationRequestUncheckedCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(where: Prisma.DonationRequestWhereInput)\n                \n            \n\n\n            \n                \n                    Defined in src/donation-requests/donation-requests.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.DonationRequestWhereInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany(where?: Prisma.DonationRequestWhereInput)\n                \n            \n\n\n            \n                \n                    Defined in src/donation-requests/donation-requests.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.DonationRequestWhereInput\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(where: Prisma.DonationRequestWhereInput)\n                \n            \n\n\n            \n                \n                    Defined in src/donation-requests/donation-requests.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.DonationRequestWhereInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        markOutdatedRequests\n                        \n                    \n                \n            \n            \n                \n                    \n                    markOutdatedRequests()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('0 1 * * *')\n                \n            \n\n            \n                \n                    Defined in src/donation-requests/donation-requests.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(where: Prisma.DonationRequestWhereInput, data: Prisma.DonationRequestUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/donation-requests/donation-requests.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.DonationRequestWhereInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Prisma.DonationRequestUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Cron } from '@nestjs/schedule';\nimport { DonationRequestStatusEnum, Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class DonationRequestsService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(data: Prisma.DonationRequestUncheckedCreateInput) {\n    return this.prisma.donationRequest.create({ data });\n  }\n\n  async findOne(where: Prisma.DonationRequestWhereInput) {\n    return this.prisma.donationRequest.findFirstOrThrow({\n      where,\n    });\n  }\n\n  async findMany(where?: Prisma.DonationRequestWhereInput) {\n    return this.prisma.donationRequest.findMany({\n      where,\n    });\n  }\n\n  async update(\n    where: Prisma.DonationRequestWhereInput,\n    data: Prisma.DonationRequestUpdateInput,\n  ) {\n    return this.prisma.donationRequest.updateMany({\n      data,\n      where,\n    });\n  }\n\n  async delete(where: Prisma.DonationRequestWhereInput) {\n    return this.prisma.donationRequest.deleteMany({ where });\n  }\n\n  @Cron('0 1 * * *')\n  async markOutdatedRequests() {\n    return this.prisma.donationRequest.updateMany({\n      where: {\n        dateTo: {\n          lt: new Date(),\n        },\n      },\n      data: {\n        status: DonationRequestStatusEnum.OUTDATED,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DonationsController.html":{"url":"controllers/DonationsController.html","title":"controller - DonationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DonationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/donations/donations.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findMany\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateDonationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: DonationEntity})\n                \n            \n\n            \n                \n                    Defined in src/donations/donations.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateDonationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany(userPayload: UserPayloadType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: DonationEntity, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/donations/donations.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number, userPayload: UserPayloadType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: DonationEntity})\n                \n            \n\n            \n                \n                    Defined in src/donations/donations.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/donations/donations.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/donations/donations.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport { DonationsService } from './donations.service';\nimport { CreateDonationDto } from './dto/create-donation.dto';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { DonationEntity } from './entities/donation.entity';\nimport { AuthGuard } from 'src/auth/guards/auth.guard';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { UserRolesEnum } from 'src/users/enum/user-roles.enum';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { GetUserPayload } from 'src/users/decorators/get-user.decorator';\nimport { UserPayloadType } from 'src/auth/types/jwt-payload.type';\nimport { CommonException } from 'src/utils/common.exception';\n\nconst name: string = 'donations';\n\n@Controller(name)\n@ApiTags(name)\n@UseGuards(RolesGuard)\n@UseGuards(AuthGuard)\n@Roles(UserRolesEnum.DONOR)\n@ApiBearerAuth()\nexport class DonationsController {\n  constructor(private readonly donationsService: DonationsService) {}\n\n  @Post()\n  @ApiCreatedResponse({ type: DonationEntity })\n  async create(@Body() dto: CreateDonationDto) {\n    return this.donationsService.create(dto);\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: DonationEntity })\n  async findOne(\n    @Param('id') id: number,\n    @GetUserPayload() userPayload: UserPayloadType,\n  ) {\n    return this.donationsService.findOne(userPayload, { id });\n  }\n\n  @Get()\n  @ApiOkResponse({ type: DonationEntity, isArray: true })\n  async findMany(@GetUserPayload() userPayload: UserPayloadType) {\n    return this.donationsService.findMany(userPayload);\n  }\n\n  @Patch(':id')\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async update() {\n    throw new UnauthorizedException();\n  }\n\n  @Delete(':id')\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async remove() {\n    throw new UnauthorizedException();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DonationsModule.html":{"url":"modules/DonationsModule.html","title":"module - DonationsModule","body":"\n                   \n\n\n\n\n    Modules\n    DonationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DonationsModule\n\n\n\ncluster_DonationsModule_imports\n\n\n\ncluster_DonationsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nDonationsModule\n\nDonationsModule\n\nDonationsModule -->\n\nAuthModule->DonationsModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nDonationsModule -->\n\nPrismaModule->DonationsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nDonationsModule -->\n\nUsersModule->DonationsModule\n\n\n\n\n\nDonationsService\n\nDonationsService\n\nDonationsModule -->\n\nDonationsService->DonationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/donations/donations.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DonationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DonationsController\n                        \n                        \n                            CADonationsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DonationsController } from './donations.controller';\nimport { DonationsService } from './donations.service';\nimport { PrismaModule } from '../prisma/prisma.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { CADonationsController } from './ca.donations.controller';\n\n@Module({\n  imports: [PrismaModule, AuthModule, UsersModule],\n  controllers: [DonationsController, CADonationsController],\n  providers: [DonationsService],\n})\nexport class DonationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DonationsService.html":{"url":"injectables/DonationsService.html","title":"injectable - DonationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DonationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/donations/donations.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _filterDonationsAccess\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/donations/donations.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        _filterDonationsAccess\n                        \n                    \n                \n            \n            \n                \n                    \n                    _filterDonationsAccess(userPayload: UserPayloadType, where: Prisma.DonationWhereInput)\n                \n            \n\n\n            \n                \n                    Defined in src/donations/donations.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    where\n                                    \n                                            Prisma.DonationWhereInput\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: Omit)\n                \n            \n\n\n            \n                \n                    Defined in src/donations/donations.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Omit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(userPayload: UserPayloadType, where: Prisma.DonationWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/donations/donations.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    where\n                                    \n                                            Prisma.DonationWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany(userPayload: UserPayloadType, where: Prisma.DonationWhereInput)\n                \n            \n\n\n            \n                \n                    Defined in src/donations/donations.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    where\n                                    \n                                            Prisma.DonationWhereInput\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(userPayload: UserPayloadType, where: Prisma.DonationWhereInput)\n                \n            \n\n\n            \n                \n                    Defined in src/donations/donations.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    where\n                                    \n                                            Prisma.DonationWhereInput\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userPayload: UserPayloadType, data: Prisma.DonationUpdateInput, where: Prisma.DonationWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/donations/donations.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                            Prisma.DonationUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    where\n                                    \n                                            Prisma.DonationWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { DonationStatusesEnum, Prisma, UserRolesEnum } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { UserPayloadType } from 'src/auth/types/jwt-payload.type';\nimport { UsersService } from 'src/users/users.service';\n\n@Injectable()\nexport class DonationsService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly usersService: UsersService,\n  ) {}\n\n  async create(data: Omit) {\n    return this.prisma.donation.create({\n      data: { ...data, status: DonationStatusesEnum.PENDING },\n    });\n  }\n\n  async findOne(\n    userPayload: UserPayloadType,\n    where: Prisma.DonationWhereInput = {},\n  ) {\n    await this._filterDonationsAccess(userPayload, where);\n    return this.prisma.donation.findFirstOrThrow({\n      where,\n    });\n  }\n\n  async findMany(\n    userPayload: UserPayloadType,\n    where: Prisma.DonationWhereInput = {},\n  ) {\n    await this._filterDonationsAccess(userPayload, where);\n    return this.prisma.donation.findMany({ where });\n  }\n\n  async update(\n    userPayload: UserPayloadType,\n    data: Prisma.DonationUpdateInput,\n    where: Prisma.DonationWhereUniqueInput = {},\n  ) {\n    await this._filterDonationsAccess(userPayload, where);\n    return this.prisma.donation.update({\n      data,\n      where,\n    });\n  }\n\n  async delete(\n    userPayload: UserPayloadType,\n    where: Prisma.DonationWhereUniqueInput = {},\n  ) {\n    if (userPayload.role !== UserRolesEnum.SYSTEM_ADMIN) {\n      throw new UnauthorizedException();\n    }\n    return this.prisma.donation.delete({ where });\n  }\n\n  private async _filterDonationsAccess(\n    userPayload: UserPayloadType,\n    where: Prisma.DonationWhereInput = {},\n  ) {\n    if (userPayload.role === UserRolesEnum.DONOR) {\n      where.userId = userPayload.id;\n    }\n    if (userPayload.role === UserRolesEnum.CENTER_ADMIN) {\n      const user = await this.usersService.findOne({ id: userPayload.id });\n      where.centerId = user.employedCenterId;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdInterceptor.html":{"url":"injectables/IdInterceptor.html","title":"injectable - IdInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/interceptors/id.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/interceptors/id.interceptor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class IdInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const req = context.switchToHttp().getRequest();\n\n    if (\n      Object.prototype.hasOwnProperty.call(req, 'params') &&\n      Object.prototype.hasOwnProperty.call(req.params, 'id')\n    ) {\n      req.params.id = +req.params.id;\n    }\n\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginInputDto.html":{"url":"classes/LoginInputDto.html","title":"class - LoginInputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginInputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-input.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-input.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-input.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginInputDto {\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOutputDto.html":{"url":"classes/LoginOutputDto.html","title":"class - LoginOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-output.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-output.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOutputDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/roles.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { UserRolesEnum } from 'src/users/enum/user-roles.enum';\nimport { ROLES_KEY } from '../decorators/roles.decorator';\nimport { UsersService } from 'src/users/users.service';\nimport { UserPayloadType } from '../types/jwt-payload.type';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(\n    private reflector: Reflector,\n    private usersService: UsersService,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const requiredRoles = this.reflector.getAllAndOverride(\n      ROLES_KEY,\n      [context.getHandler(), context.getClass()],\n    );\n\n    if (!requiredRoles) {\n      return true;\n    }\n\n    const { userPayload: payload } = context\n      .switchToHttp()\n      .getRequest();\n\n    const user = await this.usersService.findOne({ id: payload.id });\n\n    return requiredRoles.some((role) => user.role === role);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SACreateUserDto.html":{"url":"classes/SACreateUserDto.html","title":"class - SACreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SACreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/sa.create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                employedCenterId\n                            \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                patronymic\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        employedCenterId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ValidateIf(data => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/sa.create-user.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(64)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/sa.create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(64)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/sa.create-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(64)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/sa.create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Length(8, 128)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/sa.create-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        patronymic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsNotEmpty()@MaxLength(64)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/sa.create-user.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRolesEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(UserRolesEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/sa.create-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEnum,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsPositive,\n  IsString,\n  Length,\n  MaxLength,\n  ValidateIf,\n} from 'class-validator';\nimport { UserRolesEnum } from '../enum/user-roles.enum';\n\nexport class SACreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(64)\n  login: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @Length(8, 128)\n  password: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(64)\n  firstName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(64)\n  lastName: string;\n\n  @IsOptional()\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(64)\n  patronymic: string;\n\n  @IsEnum(UserRolesEnum)\n  role: UserRolesEnum;\n\n  @IsInt()\n  @IsPositive()\n  @ValidateIf(\n    (data: SACreateUserDto) => data.role === UserRolesEnum.CENTER_ADMIN,\n  )\n  employedCenterId?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SADonationsController.html":{"url":"controllers/SADonationsController.html","title":"controller - SADonationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SADonationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/donations/sa.donations.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findMany\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateDonationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: DonationEntity})\n                \n            \n\n            \n                \n                    Defined in src/donations/sa.donations.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateDonationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany(userPayload: UserPayloadType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: DonationEntity, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/donations/sa.donations.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number, userPayload: UserPayloadType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: DonationEntity})\n                \n            \n\n            \n                \n                    Defined in src/donations/sa.donations.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(userPayload: UserPayloadType, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/donations/sa.donations.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userPayload: UserPayloadType, id: number, dto: UpdateDonationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOkResponse({type: DonationEntity})\n                \n            \n\n            \n                \n                    Defined in src/donations/sa.donations.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateDonationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { DonationsService } from './donations.service';\nimport { CreateDonationDto } from './dto/create-donation.dto';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { DonationEntity } from './entities/donation.entity';\nimport { AuthGuard } from 'src/auth/guards/auth.guard';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { UserRolesEnum } from 'src/users/enum/user-roles.enum';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { GetUserPayload } from 'src/users/decorators/get-user.decorator';\nimport { UserPayloadType } from 'src/auth/types/jwt-payload.type';\nimport { UpdateDonationDto } from './dto/update-donation.dto';\nimport { CommonException } from 'src/utils/common.exception';\n\nconst name: string = 'sa/donations';\n\n@Controller(name)\n@ApiTags(name)\n@UseGuards(RolesGuard)\n@UseGuards(AuthGuard)\n@Roles(UserRolesEnum.SYSTEM_ADMIN)\n@ApiBearerAuth()\nexport class SADonationsController {\n  constructor(private readonly donationsService: DonationsService) {}\n\n  @Post()\n  @ApiCreatedResponse({ type: DonationEntity })\n  async create(@Body() dto: CreateDonationDto) {\n    return this.donationsService.create(dto);\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: DonationEntity })\n  async findOne(\n    @Param('id') id: number,\n    @GetUserPayload() userPayload: UserPayloadType,\n  ) {\n    return this.donationsService.findOne(userPayload, { id });\n  }\n\n  @Get()\n  @ApiOkResponse({ type: DonationEntity, isArray: true })\n  async findMany(@GetUserPayload() userPayload: UserPayloadType) {\n    return this.donationsService.findMany(userPayload);\n  }\n\n  @Patch(':id')\n  @ApiOkResponse({ type: DonationEntity })\n  async update(\n    @GetUserPayload() userPayload: UserPayloadType,\n    @Param('id') id: number,\n    @Body() dto: UpdateDonationDto,\n  ) {\n    return this.donationsService.update(userPayload, dto, { id });\n  }\n\n  @Delete(':id')\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async remove(\n    @GetUserPayload() userPayload: UserPayloadType,\n    @Param('id') id: number,\n  ) {\n    return this.donationsService.delete(userPayload, { id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SAUpdateUserDto.html":{"url":"classes/SAUpdateUserDto.html","title":"class - SAUpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SAUpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/sa.update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { SACreateUserDto } from './sa.create-user.dto';\n\nexport class SAUpdateUserDto extends PartialType(SACreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCenterDto.html":{"url":"classes/UpdateCenterDto.html","title":"class - UpdateCenterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCenterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/centers/dto/update-center.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCenterDto } from './create-center.dto';\n\nexport class UpdateCenterDto extends PartialType(CreateCenterDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCityDto.html":{"url":"classes/UpdateCityDto.html","title":"class - UpdateCityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cities/dto/update-city.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCityDto } from './create-city.dto';\n\nexport class UpdateCityDto extends PartialType(CreateCityDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDonationDto.html":{"url":"classes/UpdateDonationDto.html","title":"class - UpdateDonationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDonationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/donations/dto/update-donation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DonationStatusesEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: DonationStatusesEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donations/dto/update-donation.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateDonationDto } from './create-donation.dto';\nimport { DonationStatusesEnum } from '@prisma/client';\n\nexport class UpdateDonationDto extends PartialType(CreateDonationDto) {\n  @ApiProperty({ enum: DonationStatusesEnum })\n  status: DonationStatusesEnum;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDonationRequestDto.html":{"url":"classes/UpdateDonationRequestDto.html","title":"class - UpdateDonationRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDonationRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/donation-requests/dto/update-donation-request.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CreateDonationRequestDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                centerId\n                            \n                            \n                                    \n                                    \n                                    \n                                count\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dateTo\n                            \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                groups\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                patronymic\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DonationRequestStatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(DonationRequestStatusEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/donation-requests/dto/update-donation-request.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        centerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDonationRequestDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDonationRequestDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(10)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDonationRequestDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDonationRequestDto:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dateTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDonationRequestDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDonationRequestDto:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(64)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDonationRequestDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDonationRequestDto:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BloodGroupsEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: BloodGroupsEnum, isArray: true})@IsEnum(BloodGroupsEnum, {each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDonationRequestDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDonationRequestDto:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(64)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDonationRequestDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDonationRequestDto:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        patronymic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsNotEmpty()@MaxLength(64)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDonationRequestDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDonationRequestDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DonationTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: DonationTypeEnum})@IsEnum(DonationTypeEnum)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDonationRequestDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDonationRequestDto:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DonationRequestStatusEnum } from '@prisma/client';\nimport { CreateDonationRequestDto } from './create-donation-request.dto';\nimport { IsEnum } from 'class-validator';\n\nexport class UpdateDonationRequestDto extends CreateDonationRequestDto {\n  @IsEnum(DonationRequestStatusEnum)\n  status: DonationRequestStatusEnum;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CommonEntity } from '../../common/entities/common.entity';\nimport { ApiProperty, OmitType } from '@nestjs/swagger';\nimport { UserRolesEnum } from '@prisma/client';\n\nexport class UserPrivateEntity extends CommonEntity {\n  id: number;\n\n  login: string;\n\n  passwordHash: string;\n\n  firstName: string;\n\n  lastName: string;\n\n  patronymic: string | null;\n\n  @ApiProperty({ enum: UserRolesEnum })\n  role: UserRolesEnum;\n}\n\nexport class UserEntity extends OmitType(UserPrivateEntity, ['passwordHash']) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPrivateEntity.html":{"url":"classes/UserPrivateEntity.html","title":"class - UserPrivateEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPrivateEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                login\n                            \n                            \n                                passwordHash\n                            \n                            \n                                patronymic\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                createdAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patronymic\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRolesEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: UserRolesEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:6\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CommonEntity } from '../../common/entities/common.entity';\nimport { ApiProperty, OmitType } from '@nestjs/swagger';\nimport { UserRolesEnum } from '@prisma/client';\n\nexport class UserPrivateEntity extends CommonEntity {\n  id: number;\n\n  login: string;\n\n  passwordHash: string;\n\n  firstName: string;\n\n  lastName: string;\n\n  patronymic: string | null;\n\n  @ApiProperty({ enum: UserRolesEnum })\n  role: UserRolesEnum;\n}\n\nexport class UserEntity extends OmitType(UserPrivateEntity, ['passwordHash']) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/ca.users.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findMany\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/users/ca.users.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: UserEntity, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/users/ca.users.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: UserEntity})\n                \n            \n\n            \n                \n                    Defined in src/users/ca.users.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/users/ca.users.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userPayload: UserPayloadType, id: number, dto: CAUpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOkResponse({type: UserEntity})\n                \n            \n\n            \n                \n                    Defined in src/users/ca.users.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CAUpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport {\n  ApiBearerAuth,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { UserEntity } from './entities/user.entity';\nimport { CommonException } from 'src/utils/common.exception';\nimport { GetUserPayload } from './decorators/get-user.decorator';\nimport { UserPayloadType } from 'src/auth/types/jwt-payload.type';\nimport { AuthGuard } from 'src/auth/guards/auth.guard';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { UserRolesEnum } from './enum/user-roles.enum';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { CAUpdateUserDto } from './dto/ca.update-user.dto';\n\nconst name: string = 'ca/users';\n\n@Controller(name)\n@ApiTags(name)\n@ApiBearerAuth()\n@Roles(UserRolesEnum.SYSTEM_ADMIN)\n@UseGuards(RolesGuard)\n@UseGuards(AuthGuard)\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async create() {\n    throw new UnauthorizedException();\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: UserEntity })\n  async findOne(@Param('id') id: number) {\n    return this.usersService.findOne({ id });\n  }\n\n  @Get()\n  @ApiOkResponse({ type: UserEntity, isArray: true })\n  async findMany() {\n    return this.usersService.findMany();\n  }\n\n  @Patch(':id')\n  @ApiOkResponse({ type: UserEntity })\n  async update(\n    @GetUserPayload() userPayload: UserPayloadType,\n    @Param('id') id: number,\n    @Body() dto: CAUpdateUserDto,\n  ) {\n    if (id !== userPayload.id) {\n      throw new UnauthorizedException();\n    }\n    return this.usersService.update({ id }, dto);\n  }\n\n  @Delete(':id')\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async remove() {\n    throw new UnauthorizedException();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController-1.html":{"url":"controllers/UsersController-1.html","title":"controller - UsersController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/sa.users.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findMany\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: SACreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: UserEntity})\n                \n            \n\n            \n                \n                    Defined in src/users/sa.users.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                SACreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: UserEntity, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/users/sa.users.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: UserEntity})\n                \n            \n\n            \n                \n                    Defined in src/users/sa.users.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOkResponse({type: UserEntity})\n                \n            \n\n            \n                \n                    Defined in src/users/sa.users.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, dto: SAUpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOkResponse({type: UserEntity})\n                \n            \n\n            \n                \n                    Defined in src/users/sa.users.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                SAUpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { UserEntity } from './entities/user.entity';\nimport { SACreateUserDto } from './dto/sa.create-user.dto';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { UserRolesEnum } from '@prisma/client';\nimport { SAUpdateUserDto } from './dto/sa.update-user.dto';\n\nconst name: string = 'sa/users';\n\n@Controller(name)\n@ApiTags(name)\n@ApiBearerAuth()\n@Roles(UserRolesEnum.SYSTEM_ADMIN)\n@UseGuards(RolesGuard)\n@UseGuards(AuthGuard)\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @ApiCreatedResponse({ type: UserEntity })\n  async create(@Body() dto: SACreateUserDto): Promise {\n    return this.usersService.create(dto);\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: UserEntity })\n  async findOne(@Param('id') id: number): Promise {\n    return this.usersService.findOne({ id });\n  }\n\n  @Get()\n  @ApiOkResponse({ type: UserEntity, isArray: true })\n  async findMany(): Promise {\n    return this.usersService.findMany();\n  }\n\n  @Patch(':id')\n  @ApiOkResponse({ type: UserEntity })\n  async update(\n    @Param('id') id: number,\n    @Body() dto: SAUpdateUserDto,\n  ): Promise {\n    return this.usersService.update({ id }, dto);\n  }\n\n  @Delete(':id')\n  @ApiOkResponse({ type: UserEntity })\n  async remove(@Param('id') id: number): Promise {\n    return this.usersService.delete({ id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController-2.html":{"url":"controllers/UsersController-2.html","title":"controller - UsersController-2","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findMany\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: UserEntity})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: UserEntity, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: UserEntity})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiUnauthorizedResponse({type: CommonException})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userPayload: UserPayloadType, id: number, dto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(AuthGuard)@ApiOkResponse({type: UserEntity})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayloadType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UsersService } from './users.service';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { UserEntity } from './entities/user.entity';\nimport { CommonException } from 'src/utils/common.exception';\nimport { GetUserPayload } from './decorators/get-user.decorator';\nimport { UserPayloadType } from 'src/auth/types/jwt-payload.type';\nimport { AuthGuard } from 'src/auth/guards/auth.guard';\n\nconst name: string = 'users';\n\n@Controller(name)\n@ApiTags(name)\n@ApiBearerAuth()\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @ApiCreatedResponse({ type: UserEntity })\n  async create(@Body() dto: CreateUserDto) {\n    return this.usersService.create(dto);\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: UserEntity })\n  async findOne(@Param('id') id: number) {\n    return this.usersService.findOne({ id });\n  }\n\n  @Get()\n  @ApiOkResponse({ type: UserEntity, isArray: true })\n  async findMany() {\n    return this.usersService.findMany();\n  }\n\n  @Patch(':id')\n  @UseGuards(AuthGuard)\n  @ApiOkResponse({ type: UserEntity })\n  async update(\n    @GetUserPayload() userPayload: UserPayloadType,\n    @Param('id') id: number,\n    @Body() dto: UpdateUserDto,\n  ) {\n    if (id !== userPayload.id) {\n      throw new UnauthorizedException();\n    }\n    return this.usersService.update({ id }, dto);\n  }\n\n  @Delete(':id')\n  @ApiUnauthorizedResponse({ type: CommonException })\n  async remove() {\n    throw new UnauthorizedException();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { PrismaModule } from '../prisma/prisma.module';\n\n@Global()\n@Module({\n  imports: [PrismaModule],\n  providers: [UsersService],\n  controllers: [UsersController],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _hashPassword\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        _hashPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    _hashPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: SACreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SACreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(where: Prisma.UserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMany(where?: Prisma.UserWhereInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.UserWhereInput\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(where: Prisma.UserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(where: Prisma.UserWhereUniqueInput, data: SAUpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                            Prisma.UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                SAUpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { Prisma } from '@prisma/client';\nimport { hash } from 'bcryptjs';\nimport { SACreateUserDto } from './dto/sa.create-user.dto';\nimport { SAUpdateUserDto } from './dto/sa.update-user.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(data: SACreateUserDto) {\n    const { password, ...dto } = data;\n    const passwordHash = await this._hashPassword(password);\n    return this.prisma.user.create({\n      data: { ...dto, passwordHash },\n    });\n  }\n\n  async findOne(where: Prisma.UserWhereUniqueInput) {\n    return this.prisma.user.findUniqueOrThrow({\n      where,\n    });\n  }\n\n  async findMany(where?: Prisma.UserWhereInput) {\n    return this.prisma.user.findMany({ where });\n  }\n\n  async update(where: Prisma.UserWhereUniqueInput, data: SAUpdateUserDto) {\n    const passwordHash = data.password\n      ? await this._hashPassword(data.password)\n      : undefined;\n\n    return this.prisma.user.update({\n      data: {\n        ...data,\n        passwordHash,\n      },\n      where,\n    });\n  }\n\n  async delete(where: Prisma.UserWhereUniqueInput) {\n    return this.prisma.user.delete({ where });\n  }\n\n  private async _hashPassword(password: string): Promise {\n    return hash(password, Number(process.env.BCRYPT_ROUNDS));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                prisma/seed.ts\n            \n            variable\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/seeds/seed-centers.ts\n            \n            variable\n            centers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/seeds/seed-centers.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/seeds/seed-citites.ts\n            \n            variable\n            cities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/seeds/seed-citites.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/login-input.dto.ts\n            \n            class\n            LoginInputDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-output.dto.ts\n            \n            class\n            LoginOutputDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/centers/ca.centers.controller.ts\n            \n            controller\n            CentersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/centers/ca.centers.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/centers/centers.controller.ts\n            \n            controller\n            CentersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/centers/centers.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/centers/centers.service.ts\n            \n            injectable\n            CentersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/centers/dto/create-center.dto.ts\n            \n            class\n            CreateCenterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/centers/dto/update-center.dto.ts\n            \n            class\n            UpdateCenterDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/centers/entites/center.entity.ts\n            \n            class\n            CenterEntity\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/centers/sa.centers.controller.ts\n            \n            controller\n            CentersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/centers/sa.centers.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cities/ca.cities.controller.ts\n            \n            controller\n            CitiesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cities/ca.cities.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cities/cities.controller.ts\n            \n            controller\n            CitiesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cities/cities.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cities/cities.service.ts\n            \n            injectable\n            CitiesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/cities/dto/create-city.dto.ts\n            \n            class\n            CreateCityDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cities/dto/update-city.dto.ts\n            \n            class\n            UpdateCityDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cities/entities/city.entity.ts\n            \n            class\n            CityEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/cities/sa.cities.controller.ts\n            \n            controller\n            CitiesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cities/sa.cities.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/entities/common.entity.ts\n            \n            class\n            CommonEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/donation-requests/ca.donation-requests.controller.ts\n            \n            controller\n            DonationRequestsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/donation-requests/ca.donation-requests.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/donation-requests/donation-requests.controller.ts\n            \n            controller\n            DonationRequestsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/donation-requests/donation-requests.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/donation-requests/donation-requests.service.ts\n            \n            injectable\n            DonationRequestsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/donation-requests/dto/create-donation-request.dto.ts\n            \n            class\n            CreateDonationRequestDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/donation-requests/dto/update-donation-request.dto.ts\n            \n            class\n            UpdateDonationRequestDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/donation-requests/entiites/donation-request.entity.ts\n            \n            class\n            DonationRequestEntity\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/donation-requests/sa.donation-requests.controller.ts\n            \n            controller\n            DonationRequestsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/donation-requests/sa.donation-requests.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/donations/ca.donations.controller.ts\n            \n            controller\n            CADonationsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/donations/ca.donations.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/donations/donations.controller.ts\n            \n            controller\n            DonationsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/donations/donations.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/donations/donations.service.ts\n            \n            injectable\n            DonationsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/donations/dto/create-donation.dto.ts\n            \n            class\n            CreateDonationDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/donations/dto/update-donation.dto.ts\n            \n            class\n            UpdateDonationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/donations/entities/donation.entity.ts\n            \n            class\n            DonationEntity\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/donations/sa.donations.controller.ts\n            \n            controller\n            SADonationsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/donations/sa.donations.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/ca.users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/ca.users.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/decorators/get-user.decorator.ts\n            \n            variable\n            GetUserPayload\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/ca.update-user.dto.ts\n            \n            class\n            CAUpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/sa.create-user.dto.ts\n            \n            class\n            SACreateUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/sa.update-user.dto.ts\n            \n            class\n            SAUpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            UserPrivateEntity\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/enum/user-roles.enum.ts\n            \n            variable\n            UserRolesEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/enum/user-roles.enum.ts\n            \n            variable\n            UserRolesPublicEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/sa.users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/sa.users.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            variable\n            name\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/common.exception.ts\n            \n            class\n            CommonException\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/utils/interceptors/id.interceptor.ts\n            \n            injectable\n            IdInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/schedule : ^2.2.2\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^4.14.1\n        \n            @types/bcryptjs : ^2.4.2\n        \n            @types/passport-jwt : ^3.0.6\n        \n            @types/passport-local : ^1.0.34\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            express : ^4.18.1\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.7.3\n        \n            prisma : ^4.14.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n        \n            telegram-keyboard : ^2.3.2\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            express : ^4.18.1\n        \n            webpack : ^5.0.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DonationTypeEnum   (src/.../donation-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/donations/enum/donation-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DonationTypeEnum\n                    \n                \n                        \n                            \n                                 WHOLE_BLOOD\n                            \n                        \n                        \n                            \n                                Value : WHOLE_BLOOD\n                            \n                        \n                        \n                            \n                                 PLASMA\n                            \n                        \n                        \n                            \n                                Value : PLASMA\n                            \n                        \n                        \n                            \n                                 PLATELETS\n                            \n                        \n                        \n                            \n                                Value : PLATELETS\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CentersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DonationRequestsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DonationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CentersModule\n\n\n\ncluster_CentersModule_exports\n\n\n\ncluster_CentersModule_providers\n\n\n\ncluster_CitiesModule\n\n\n\ncluster_CitiesModule_exports\n\n\n\ncluster_CitiesModule_providers\n\n\n\ncluster_DonationRequestsModule\n\n\n\ncluster_DonationRequestsModule_exports\n\n\n\ncluster_DonationRequestsModule_providers\n\n\n\ncluster_DonationsModule\n\n\n\ncluster_DonationsModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nDonationsModule\n\nDonationsModule\n\nDonationsModule -->\n\nAuthModule->DonationsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCentersModule\n\nCentersModule\n\nAppModule -->\n\nCentersModule->AppModule\n\n\n\n\n\nCentersService \n\nCentersService \n\nCentersService  -->\n\nCentersModule->CentersService \n\n\n\n\n\nCitiesModule\n\nCitiesModule\n\nAppModule -->\n\nCitiesModule->AppModule\n\n\n\n\n\nCitiesService \n\nCitiesService \n\nCitiesService  -->\n\nCitiesModule->CitiesService \n\n\n\n\n\nDonationRequestsModule\n\nDonationRequestsModule\n\nAppModule -->\n\nDonationRequestsModule->AppModule\n\n\n\n\n\nDonationRequestsService \n\nDonationRequestsService \n\nDonationRequestsService  -->\n\nDonationRequestsModule->DonationRequestsService \n\n\n\nAppModule -->\n\nDonationsModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nCentersModule -->\n\nPrismaModule->CentersModule\n\n\n\nCitiesModule -->\n\nPrismaModule->CitiesModule\n\n\n\nDonationRequestsModule -->\n\nPrismaModule->DonationRequestsModule\n\n\n\nDonationsModule -->\n\nPrismaModule->DonationsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nDonationsModule -->\n\nUsersModule->DonationsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCentersService\n\nCentersService\n\nCentersModule -->\n\nCentersService->CentersModule\n\n\n\n\n\nCitiesService\n\nCitiesService\n\nCitiesModule -->\n\nCitiesService->CitiesModule\n\n\n\n\n\nDonationRequestsService\n\nDonationRequestsService\n\nDonationRequestsModule -->\n\nDonationRequestsService->DonationRequestsModule\n\n\n\n\n\nDonationsService\n\nDonationsService\n\nDonationsModule -->\n\nDonationsService->DonationsModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    23 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserPayloadType   (src/.../jwt-payload.type.ts)\n                        \n                        \n                            UserRolesEnum   (src/.../user-roles.enum.ts)\n                        \n                        \n                            UserRolesPublicEnum   (src/.../user-roles.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/types/jwt-payload.type.ts\n    \n    \n        \n            \n                \n                    \n                    UserPayloadType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/users/enum/user-roles.enum.ts\n    \n    \n        \n            \n                \n                    \n                    UserRolesEnum\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserRolesPublicEnum\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            centers   (prisma/.../seed-centers.ts)\n                        \n                        \n                            cities   (prisma/.../seed-citites.ts)\n                        \n                        \n                            GetUserPayload   (src/.../get-user.decorator.ts)\n                        \n                        \n                            main   (prisma/.../seed.ts)\n                        \n                        \n                            name   (src/.../auth.controller.ts)\n                        \n                        \n                            name   (src/.../ca.centers.controller.ts)\n                        \n                        \n                            name   (src/.../centers.controller.ts)\n                        \n                        \n                            name   (src/.../sa.centers.controller.ts)\n                        \n                        \n                            name   (src/.../ca.cities.controller.ts)\n                        \n                        \n                            name   (src/.../cities.controller.ts)\n                        \n                        \n                            name   (src/.../sa.cities.controller.ts)\n                        \n                        \n                            name   (src/.../ca.donation-requests.controller.ts)\n                        \n                        \n                            name   (src/.../donation-requests.controller.ts)\n                        \n                        \n                            name   (src/.../sa.donation-requests.controller.ts)\n                        \n                        \n                            name   (src/.../ca.donations.controller.ts)\n                        \n                        \n                            name   (src/.../donations.controller.ts)\n                        \n                        \n                            name   (src/.../sa.donations.controller.ts)\n                        \n                        \n                            name   (src/.../ca.users.controller.ts)\n                        \n                        \n                            name   (src/.../sa.users.controller.ts)\n                        \n                        \n                            name   (src/.../users.controller.ts)\n                        \n                        \n                            prisma   (prisma/.../seed-centers.ts)\n                        \n                        \n                            prisma   (prisma/.../seed-citites.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                        \n                            UserRolesEnum   (src/.../user-roles.enum.ts)\n                        \n                        \n                            UserRolesPublicEnum   (src/.../user-roles.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    prisma/seeds/seed-centers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        centers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.CenterCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'Республиканский Центр Переливания Крови',\n    latitude: 41.26413125540165,\n    longitude: 69.22924627613766,\n    city: {\n      connect: {\n        name: 'Tashkent',\n      },\n    },\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n    prisma/seeds/seed-citites.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Prisma.CityCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'Tashkent',\n    latitude: 41.311158,\n    longitude: 69.279737,\n    botLocales: {\n      connectOrCreate: [\n        {\n          create: {\n            name: 'city:Tashkent',\n            text: 'Toshkent',\n            language: BotLanguagesEnum.UZ,\n          },\n          where: {\n            name_language: {\n              name: 'city:Tashkent',\n              language: BotLanguagesEnum.UZ,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Tashkent',\n            text: 'Tashkent',\n            language: BotLanguagesEnum.EN,\n          },\n          where: {\n            name_language: {\n              name: 'city:Tashkent',\n              language: BotLanguagesEnum.EN,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Tashkent',\n            text: 'Ташкент',\n            language: BotLanguagesEnum.RU,\n          },\n          where: {\n            name_language: {\n              name: 'city:Tashkent',\n              language: BotLanguagesEnum.RU,\n            },\n          },\n        },\n      ],\n    },\n  },\n  {\n    name: 'Samarkand',\n    latitude: 39.654404,\n    longitude: 66.975827,\n    botLocales: {\n      connectOrCreate: [\n        {\n          create: {\n            name: 'city:Samarkand',\n            text: 'Samarqand',\n            language: BotLanguagesEnum.UZ,\n          },\n          where: {\n            name_language: {\n              name: 'city:Samarkand',\n              language: BotLanguagesEnum.UZ,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Samarkand',\n            text: 'Samarkand',\n            language: BotLanguagesEnum.EN,\n          },\n          where: {\n            name_language: {\n              name: 'city:Samarkand',\n              language: BotLanguagesEnum.EN,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Samarkand',\n            text: 'Самарканд',\n            language: BotLanguagesEnum.RU,\n          },\n          where: {\n            name_language: {\n              name: 'city:Samarkand',\n              language: BotLanguagesEnum.RU,\n            },\n          },\n        },\n      ],\n    },\n  },\n  {\n    name: 'Namangan',\n    latitude: 41.000085,\n    longitude: 71.672579,\n    botLocales: {\n      connectOrCreate: [\n        {\n          create: {\n            name: 'city:Namangan',\n            text: 'Namangan',\n            language: BotLanguagesEnum.UZ,\n          },\n          where: {\n            name_language: {\n              name: 'city:Namangan',\n              language: BotLanguagesEnum.UZ,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Namangan',\n            text: 'Namangan',\n            language: BotLanguagesEnum.EN,\n          },\n          where: {\n            name_language: {\n              name: 'city:Namangan',\n              language: BotLanguagesEnum.EN,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Namangan',\n            text: 'Наманган',\n            language: BotLanguagesEnum.RU,\n          },\n          where: {\n            name_language: {\n              name: 'city:Namangan',\n              language: BotLanguagesEnum.RU,\n            },\n          },\n        },\n      ],\n    },\n  },\n  {\n    name: 'Andijan',\n    latitude: 40.783388,\n    longitude: 72.350663,\n    botLocales: {\n      connectOrCreate: [\n        {\n          create: {\n            name: 'city:Andijan',\n            text: 'Andijon',\n            language: BotLanguagesEnum.UZ,\n          },\n          where: {\n            name_language: {\n              name: 'city:Andijan',\n              language: BotLanguagesEnum.UZ,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Andijan',\n            text: 'Andijan',\n            language: BotLanguagesEnum.EN,\n          },\n          where: {\n            name_language: {\n              name: 'city:Andijan',\n              language: BotLanguagesEnum.EN,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Andijan',\n            text: 'Андижан',\n            language: BotLanguagesEnum.RU,\n          },\n          where: {\n            name_language: {\n              name: 'city:Andijan',\n              language: BotLanguagesEnum.RU,\n            },\n          },\n        },\n      ],\n    },\n  },\n  {\n    name: 'Nukus',\n    latitude: 42.460341,\n    longitude: 59.617996,\n    botLocales: {\n      connectOrCreate: [\n        {\n          create: {\n            name: 'city:Nukus',\n            text: 'Nukus',\n            language: BotLanguagesEnum.UZ,\n          },\n          where: {\n            name_language: {\n              name: 'city:Nukus',\n              language: BotLanguagesEnum.UZ,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Nukus',\n            text: 'Nukus',\n            language: BotLanguagesEnum.EN,\n          },\n          where: {\n            name_language: {\n              name: 'city:Nukus',\n              language: BotLanguagesEnum.EN,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Nukus',\n            text: 'Нукус',\n            language: BotLanguagesEnum.RU,\n          },\n          where: {\n            name_language: {\n              name: 'city:Nukus',\n              language: BotLanguagesEnum.RU,\n            },\n          },\n        },\n      ],\n    },\n  },\n  {\n    name: 'Fergana',\n    latitude: 40.38942,\n    longitude: 71.783009,\n    botLocales: {\n      connectOrCreate: [\n        {\n          create: {\n            name: 'city:Fergana',\n            text: \"Farg'ona\",\n            language: BotLanguagesEnum.UZ,\n          },\n          where: {\n            name_language: {\n              name: 'city:Fergana',\n              language: BotLanguagesEnum.UZ,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Fergana',\n            text: 'Fergana',\n            language: BotLanguagesEnum.EN,\n          },\n          where: {\n            name_language: {\n              name: 'city:Fergana',\n              language: BotLanguagesEnum.EN,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Fergana',\n            text: 'Фергана',\n            language: BotLanguagesEnum.RU,\n          },\n          where: {\n            name_language: {\n              name: 'city:Fergana',\n              language: BotLanguagesEnum.RU,\n            },\n          },\n        },\n      ],\n    },\n  },\n  {\n    name: 'Bukhara',\n    latitude: 39.767966,\n    longitude: 64.421728,\n    botLocales: {\n      connectOrCreate: [\n        {\n          create: {\n            name: 'city:Bukhara',\n            text: 'Buxoro',\n            language: BotLanguagesEnum.UZ,\n          },\n          where: {\n            name_language: {\n              name: 'city:Bukhara',\n              language: BotLanguagesEnum.UZ,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Bukhara',\n            text: 'Bukhara',\n            language: BotLanguagesEnum.EN,\n          },\n          where: {\n            name_language: {\n              name: 'city:Bukhara',\n              language: BotLanguagesEnum.EN,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Bukhara',\n            text: 'Бухара',\n            language: BotLanguagesEnum.RU,\n          },\n          where: {\n            name_language: {\n              name: 'city:Bukhara',\n              language: BotLanguagesEnum.RU,\n            },\n          },\n        },\n      ],\n    },\n  },\n  {\n    name: 'Karshi',\n    latitude: 38.841612,\n    longitude: 65.789988,\n    botLocales: {\n      connectOrCreate: [\n        {\n          create: {\n            name: 'city:Karshi',\n            text: 'Qarshi',\n            language: BotLanguagesEnum.UZ,\n          },\n          where: {\n            name_language: {\n              name: 'city:Karshi',\n              language: BotLanguagesEnum.UZ,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Karshi',\n            text: 'Karshi',\n            language: BotLanguagesEnum.EN,\n          },\n          where: {\n            name_language: {\n              name: 'city:Karshi',\n              language: BotLanguagesEnum.EN,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Karshi',\n            text: 'Карши',\n            language: BotLanguagesEnum.RU,\n          },\n          where: {\n            name_language: {\n              name: 'city:Karshi',\n              language: BotLanguagesEnum.RU,\n            },\n          },\n        },\n      ],\n    },\n  },\n  {\n    name: 'Kokand',\n    latitude: 40.539123,\n    longitude: 70.940434,\n    botLocales: {\n      connectOrCreate: [\n        {\n          create: {\n            name: 'city:Kokand',\n            text: \"Qo'qon\",\n            language: BotLanguagesEnum.UZ,\n          },\n          where: {\n            name_language: {\n              name: 'city:Kokand',\n              language: BotLanguagesEnum.UZ,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Kokand',\n            text: 'Kokand',\n            language: BotLanguagesEnum.EN,\n          },\n          where: {\n            name_language: {\n              name: 'city:Kokand',\n              language: BotLanguagesEnum.EN,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Kokand',\n            text: 'Коканд',\n            language: BotLanguagesEnum.RU,\n          },\n          where: {\n            name_language: {\n              name: 'city:Kokand',\n              language: BotLanguagesEnum.RU,\n            },\n          },\n        },\n      ],\n    },\n  },\n  {\n    name: 'Margilan',\n    latitude: 40.469051,\n    longitude: 71.720765,\n    botLocales: {\n      connectOrCreate: [\n        {\n          create: {\n            name: 'city:Margilan',\n            text: \"Marg'ilon\",\n            language: BotLanguagesEnum.UZ,\n          },\n          where: {\n            name_language: {\n              name: 'city:Margilan',\n              language: BotLanguagesEnum.UZ,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Margilan',\n            text: 'Margilan',\n            language: BotLanguagesEnum.EN,\n          },\n          where: {\n            name_language: {\n              name: 'city:Margilan',\n              language: BotLanguagesEnum.EN,\n            },\n          },\n        },\n        {\n          create: {\n            name: 'city:Margilan',\n            text: 'Маргилан',\n            language: BotLanguagesEnum.RU,\n          },\n          where: {\n            name_language: {\n              name: 'city:Margilan',\n              language: BotLanguagesEnum.RU,\n            },\n          },\n        },\n      ],\n    },\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n    src/users/decorators/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUserPayload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    return ctx.switchToHttp().getRequest()\n      .userPayload;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  await seedCities();\n  await seedCenters();\n\n  console.log('Success');\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/auth.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth'\n                    \n                \n\n\n        \n    \n\n    src/centers/ca.centers.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ca/centers'\n                    \n                \n\n\n        \n    \n\n    src/centers/centers.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'centers'\n                    \n                \n\n\n        \n    \n\n    src/centers/sa.centers.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sa/centers'\n                    \n                \n\n\n        \n    \n\n    src/cities/ca.cities.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ca/cities'\n                    \n                \n\n\n        \n    \n\n    src/cities/cities.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'cities'\n                    \n                \n\n\n        \n    \n\n    src/cities/sa.cities.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sa/cities'\n                    \n                \n\n\n        \n    \n\n    src/donation-requests/ca.donation-requests.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'donation-requests'\n                    \n                \n\n\n        \n    \n\n    src/donation-requests/donation-requests.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'donation-requests'\n                    \n                \n\n\n        \n    \n\n    src/donation-requests/sa.donation-requests.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'donation-requests'\n                    \n                \n\n\n        \n    \n\n    src/donations/ca.donations.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ca/donations'\n                    \n                \n\n\n        \n    \n\n    src/donations/donations.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'donations'\n                    \n                \n\n\n        \n    \n\n    src/donations/sa.donations.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sa/donations'\n                    \n                \n\n\n        \n    \n\n    src/users/ca.users.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ca/users'\n                    \n                \n\n\n        \n    \n\n    src/users/sa.users.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sa/users'\n                    \n                \n\n\n        \n    \n\n    src/users/users.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'users'\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: UserRolesEnum[]) =>\n  SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'role'\n                    \n                \n\n\n        \n    \n\n    src/users/enum/user-roles.enum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserRolesEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  ...UserRolesPublicEnum,\n  CENTER_ADMIN: 'CENTER_ADMIN',\n  SYSTEM_ADMIN: 'SYSTEM_ADMIN',\n} as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserRolesPublicEnum\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  DONOR: 'DONOR',\n  APPLICANT: 'APPLICANT',\n} as const\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
